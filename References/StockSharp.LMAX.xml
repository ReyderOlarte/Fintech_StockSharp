<?xml version="1.0"?>
<doc>
  <assembly>
    <name>StockSharp.LMAX</name>
  </assembly>
  <members>
    <member name="T:StockSharp.LMAX.LmaxMessageAdapter">
      <summary>
            The messages adapter for LMAX.
            </summary>
    </member>
    <member name="M:StockSharp.LMAX.LmaxMessageAdapter.#ctor(Ecng.Common.IdGenerator)">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.LMAX.LmaxMessageAdapter" />.
            </summary>
      <param name="transactionIdGenerator">Transaction id generator.</param>
    </member>
    <member name="M:StockSharp.LMAX.LmaxMessageAdapter.CreateOrderCondition">
      <summary>
            Create condition for order type <see cref="F:StockSharp.Messages.OrderTypes.Conditional" />, that supports the adapter.
            </summary>
      <returns>Order condition. If the connection does not support the order type <see cref="F:StockSharp.Messages.OrderTypes.Conditional" />, it will be returned <see langword="null" />.</returns>
    </member>
    <member name="M:StockSharp.LMAX.LmaxMessageAdapter.OnSendInMessage(StockSharp.Messages.Message)">
      <summary>
            Send message.
            </summary>
      <param name="message">Message.</param>
    </member>
    <member name="P:StockSharp.LMAX.LmaxMessageAdapter.SecurityLookupRequired">
      <summary>
        <see cref="T:StockSharp.Messages.SecurityLookupMessage" /> required to get securities.
            </summary>
    </member>
    <member name="P:StockSharp.LMAX.LmaxMessageAdapter.Login">
      <summary>
            Login.
            </summary>
    </member>
    <member name="P:StockSharp.LMAX.LmaxMessageAdapter.Password">
      <summary>
            Password.
            </summary>
    </member>
    <member name="P:StockSharp.LMAX.LmaxMessageAdapter.IsDemo">
      <summary>
            Connect to demo trading instead of real trading server.
            </summary>
    </member>
    <member name="P:StockSharp.LMAX.LmaxMessageAdapter.IsDownloadSecurityFromSite">
      <summary>
            Should the whole set of securities be loaded from LMAX website. Switched off by default.
            </summary>
    </member>
    <member name="P:StockSharp.LMAX.LmaxMessageAdapter.IsValid">
      <summary>
            The parameters validity check.
            </summary>
    </member>
    <member name="P:StockSharp.LMAX.LmaxMessageAdapter.TimeFrames">
      <summary>
            Available time frames.
            </summary>
    </member>
    <member name="M:StockSharp.LMAX.LmaxMessageAdapter.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.LMAX.LmaxMessageAdapter.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.LMAX.LmaxMessageAdapter.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:StockSharp.LMAX.LmaxMessageAdapter.IsSupportNativeSecurityLookup">
      <summary>
            Gets a value indicating whether the connector supports security lookup.
            </summary>
    </member>
    <member name="T:StockSharp.LMAX.LmaxOrderCondition">
      <summary>
        <see cref="N:StockSharp.LMAX" /> order condition.
            </summary>
    </member>
    <member name="M:StockSharp.LMAX.LmaxOrderCondition.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.LMAX.LmaxOrderCondition" />.
            </summary>
    </member>
    <member name="P:StockSharp.LMAX.LmaxOrderCondition.StopLossOffset">
      <summary>
            Stop-loss offset.
            </summary>
    </member>
    <member name="P:StockSharp.LMAX.LmaxOrderCondition.TakeProfitOffset">
      <summary>
            Take-profit offset.
            </summary>
    </member>
    <member name="T:StockSharp.LMAX.LmaxTrader">
      <summary>
            The interface <see cref="T:StockSharp.BusinessEntities.IConnector" /> implementation which provides a connection to the LMAX.
            </summary>
    </member>
    <member name="M:StockSharp.LMAX.LmaxTrader.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.LMAX.LmaxTrader" />.
            </summary>
    </member>
    <member name="P:StockSharp.LMAX.LmaxTrader.IsSupportAtomicReRegister">
      <summary>
            Gets a value indicating whether the re-registration orders via the method <see cref="M:StockSharp.BusinessEntities.IConnector.ReRegisterOrder(StockSharp.BusinessEntities.Order,StockSharp.BusinessEntities.Order)" />
            as a single transaction. The default is enabled.
            </summary>
    </member>
    <member name="P:StockSharp.LMAX.LmaxTrader.Login">
      <summary>
            Login.
            </summary>
    </member>
    <member name="P:StockSharp.LMAX.LmaxTrader.Password">
      <summary>
            Password.
            </summary>
    </member>
    <member name="P:StockSharp.LMAX.LmaxTrader.IsDemo">
      <summary>
            Connect to demo trading instead of real trading server.
            </summary>
    </member>
    <member name="P:StockSharp.LMAX.LmaxTrader.IsDownloadSecurityFromSite">
      <summary>
            Should the whole set of securities be loaded from LMAX website. Switched off by default.
            </summary>
    </member>
    <member name="E:StockSharp.LMAX.LmaxTrader.NewCandles">
      <summary>
            Event of new candles occurring, that are received after the subscription by <see cref="M:StockSharp.LMAX.LmaxTrader.SubscribeCandles(StockSharp.Algo.Candles.CandleSeries,System.DateTimeOffset,System.DateTimeOffset)" />.
            </summary>
    </member>
    <member name="E:StockSharp.LMAX.LmaxTrader.Stopped">
      <summary>
            The series processing end event.
            </summary>
    </member>
    <member name="M:StockSharp.LMAX.LmaxTrader.SubscribeCandles(StockSharp.Algo.Candles.CandleSeries,System.DateTimeOffset,System.DateTimeOffset)">
      <summary>
            Subscribe to receive new candles.
            </summary>
      <param name="series">Candles series.</param>
      <param name="from">The initial date from which you need to get data.</param>
      <param name="to">The final date by which you need to get data.</param>
    </member>
    <member name="M:StockSharp.LMAX.LmaxTrader.UnSubscribeCandles(StockSharp.Algo.Candles.CandleSeries)">
      <summary>
            To stop the candles receiving subscription, previously created by <see cref="M:StockSharp.LMAX.LmaxTrader.SubscribeCandles(StockSharp.Algo.Candles.CandleSeries,System.DateTimeOffset,System.DateTimeOffset)" />.
            </summary>
      <param name="series">Candles series.</param>
    </member>
    <member name="M:StockSharp.LMAX.LmaxTrader.OnProcessMessage(StockSharp.Messages.Message)">
      <summary>
            Process message.
            </summary>
      <param name="message">Message.</param>
    </member>
  </members>
</doc>