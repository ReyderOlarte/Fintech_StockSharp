<?xml version="1.0"?>
<doc>
  <assembly>
    <name>StockSharp.Xaml.Charting</name>
  </assembly>
  <members>
    <member name="T:StockSharp.Xaml.Charting.Chart">
      <summary>
            The graphic component of the candles charts display.
            </summary>
      <summary>
            Chart
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.Chart" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.Areas">
      <summary>
            Chart areas.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.IsAutoScroll">
      <summary>
            To scroll <see cref="P:StockSharp.Xaml.Charting.Chart.Areas" /> areas automatically when new data occured. The default is off.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.IsAutoRange">
      <summary>
            To use automatic range for the X-axis. The default is off.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.AutoRangeInterval">
      <summary>
            Chart range/scroll interval. Default is 200ms.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.AddArea(StockSharp.Xaml.Charting.ChartArea)">
      <summary>
            To add an area to the chart.
            </summary>
      <param name="area">Chart area.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.RemoveArea(StockSharp.Xaml.Charting.ChartArea)">
      <summary>
            To remove the area from the chart.
            </summary>
      <param name="area">Chart area.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.ClearAreas">
      <summary>
            To remove all areas from the chart.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.IChartElement)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartCandleElement,StockSharp.Algo.Candles.CandleSeries)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
      <param name="candleSeries">Candles series.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartIndicatorElement,StockSharp.Algo.Candles.CandleSeries,StockSharp.Algo.Indicators.IIndicator)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
      <param name="candleSeries">Candles series.</param>
      <param name="indicator">Indicator.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartOrderElement,StockSharp.BusinessEntities.Security)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
      <param name="security">Security.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartTradeElement,StockSharp.BusinessEntities.Security)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
      <param name="security">Security.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.GetIndicator(StockSharp.Xaml.Charting.ChartIndicatorElement)">
      <summary>
            To get an indicator which is associated with <see cref="T:StockSharp.Xaml.Charting.ChartIndicatorElement" />.
            </summary>
      <param name="element">The chart element.</param>
      <returns>Indicator.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.GetSource(StockSharp.Xaml.Charting.IChartElement)">
      <summary>
            To get the data source for <see cref="T:StockSharp.Xaml.Charting.IChartElement" />.
            </summary>
      <param name="element">The chart element.</param>
      <returns>Market-data source.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.SetSource(StockSharp.Xaml.Charting.IChartElement,System.Object)">
      <summary>
            To set the source for the element.
            </summary>
      <param name="element">The chart element.</param>
      <param name="source">Source.</param>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.AutoRangeByAnnotations">
      <summary>
            To use annotations to define the visible range for the Y-axis.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.MinimumRange">
      <summary>
            The minimum number of visible candles.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.ChartTheme">
      <summary>
            The name of the graphic theme.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.ShowLegend">
      <summary>
            To show the legend.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.ShowOverview">
      <summary>
            To show the preview area.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.ShowPerfStats">
      <summary>
            Show FPS.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.IsInteracted">
      <summary>
            The interactive mode. The default is off.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.CrossHair">
      <summary>
            Crosshair.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.CrossHairTooltip">
      <summary>
            To show the prompt message for the crosshair.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.CrossHairAxisLabels">
      <summary>
            To show values on the axis for the crosshair.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.AnnotationType">
      <summary>
            The prompt message type for drawing on the chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.OrderCreationMode">
      <summary>
            The order creation mode. The default is off.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.TimeZone">
      <summary>
            Local time zone for all <see cref="T:System.DateTimeOffset" /> values convertion.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.IndicatorTypes">
      <summary>
            The list of available indicators types.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.AddCandles">
      <summary>
            The chart element creation event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.AddIndicator">
      <summary>
            The chart element creation event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.AddOrders">
      <summary>
            The chart element creation event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.AddTrades">
      <summary>
            The chart element creation event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.RemoveElement">
      <summary>
            The chart element removal event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.CreateOrder">
      <summary>
            The new order creation event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.MoveOrder">
      <summary>
            Move order event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.CancelOrder">
      <summary>
            Cancel order event.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.Reset(System.Collections.Generic.IEnumerable{StockSharp.Xaml.Charting.IChartElement})">
      <summary>
            To reset the chart elements values drawn previously.
            </summary>
      <param name="elements">Chart elements.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.Draw(StockSharp.Xaml.Charting.ChartDrawData)">
      <summary>
            To process the new data.
            </summary>
      <param name="data">New data.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartActiveOrderInfo">
      <summary>
            Chart element which shows information about single order.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartActiveOrderInfo.OrderStateChanged">
      <summary>
            Order state was changed.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrderInfo.Order">
      <summary>
            Order to be displayed on chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrderInfo.State">
      <summary>
            Order state.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrderInfo.Direction">
      <summary>
            Order side.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrderInfo.Volume">
      <summary>
            Order volume.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrderInfo.FilledVolume">
      <summary>
            Filled volume.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrderInfo.Price">
      <summary>
            Order price.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrderInfo.PriceStep">
      <summary>
            Price step.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrderInfo.ChartX">
      <summary>
            Chart X value for this element [0..1]. Default is 0.8.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrderInfo.AutoRemoveFromChart">
      <summary>
            Auto remove this order from chart when its state is final (<see cref="F:StockSharp.Messages.OrderStates.Done" />, <see cref="F:StockSharp.Messages.OrderStates.Failed" />).
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrderInfo.IsFrozen">
      <summary>
            Do not allow user to edit the order from chart.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartActiveOrderInfo.#ctor(StockSharp.Xaml.Charting.ChartActiveOrderInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartActiveOrderInfo" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartActiveOrderInfo.UpdateOrderState(StockSharp.BusinessEntities.Order,System.Boolean,System.Boolean)">
      <summary>
            Updates state of the order on a chart or replaces the order with the new one.
            </summary>
      <param name="order">The order.</param>
      <param name="isError">Whether an order operation has failed.</param>
      <param name="freeze">Do not allow user to edit the order from chart.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartActiveOrderInfo.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartActiveOrderInfo.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartActiveOrdersElement">
      <summary>
            The chart element representing active orders.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartActiveOrdersElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartActiveOrdersElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.IsVisible">
      <summary>
            Show chart element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.BuyPendingColor">
      <summary>
            Color of Buy order in non-active state.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.BuyColor">
      <summary>
            Color of Buy order in active state.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.BuyBlinkColor">
      <summary>
            Color of blinking in partially filled state (Buy).
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.SellPendingColor">
      <summary>
            Color of Sell order in non-active state.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.SellColor">
      <summary>
            Color of Sell order in active state.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.SellBlinkColor">
      <summary>
            Color of blinking in partially filled state (Sell).
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.CancelButtonColor">
      <summary>
            Cancel order button color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.CancelButtonBackground">
      <summary>
            Cancel order button background color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.ForegroundColor">
      <summary>
            Text color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.IsAnimationEnabled">
      <summary>
            Show chart element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.Orders">
      <summary>
            Orders to display on chart.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartActiveOrdersElement.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartActiveOrdersElement.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartActiveOrdersElement.Clone">
      <summary>
            Create a copy of <see cref="T:StockSharp.Xaml.Charting.ChartActiveOrdersElement" />.
            </summary>
      <returns>Copy.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartAnnotationTypes">
      <summary>
            The annotations types.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAnnotationTypes.None">
      <summary>
            None.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAnnotationTypes.LineAnnotation">
      <summary>
            Line.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAnnotationTypes.LineArrowAnnotation">
      <summary>
            Pointer.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAnnotationTypes.TextAnnotation">
      <summary>
            Text.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAnnotationTypes.BoxAnnotation">
      <summary>
            Area.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAnnotationTypes.HorizontalLineAnnotation">
      <summary>
            Horizontal line.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAnnotationTypes.VerticalLineAnnotation">
      <summary>
            Vertical line.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartArea">
      <summary>
            Chart area.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartArea.XAxisId">
      <summary>
            The primary title for the X-axis.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartArea.YAxisId">
      <summary>
            The primary title for the Y-axis.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartArea.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartArea" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartArea.Title">
      <summary>
            Chart area name.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartArea.Height">
      <summary>
            The height of the area.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartArea.Elements">
      <summary>
            Area elements (<see cref="T:StockSharp.Xaml.Charting.ChartIndicatorElement" />, <see cref="T:StockSharp.Xaml.Charting.ChartCandleElement" />, etc.).
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartArea.XAxises">
      <summary>
            The list of horizontal axes.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartArea.YAxises">
      <summary>
            The list of vertical axes.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartArea.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartArea.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartArea.Clone">
      <summary>
            Create a copy of <see cref="T:StockSharp.Xaml.Charting.ChartArea" />.
            </summary>
      <returns>Copy.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartArea.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartAxisAlignment">
      <summary>
            Location of axes on the chart.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAxisAlignment.Default">
      <summary>
            By default.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAxisAlignment.Right">
      <summary>
            On the right.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAxisAlignment.Left">
      <summary>
            On the left.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAxisAlignment.Top">
      <summary>
            On top.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAxisAlignment.Bottom">
      <summary>
            Bottom.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartAxisType">
      <summary>
            Chart axes types.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAxisType.DateTime">
      <summary>
            Time.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAxisType.CategoryDateTime">
      <summary>
            Time without breaks.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAxisType.Numeric">
      <summary>
            Number.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartAxis">
      <summary>
            The chart axis.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.ChartArea">
      <summary>
            Chart area.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.Id">
      <summary>
            Unique ID.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.Title">
      <summary>
            Header.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.Group">
      <summary>
            Group.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.AxisAlignment">
      <summary>
            Axis location.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.AxisType">
      <summary>
            Axis type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.AutoRange">
      <summary>
            Auto range.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.FlipCoordinates">
      <summary>
            Flip coordinates.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.DrawMajorTicks">
      <summary>
            Show main grid lines on the axis.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.DrawMajorGridLines">
      <summary>
            Show main grid lines.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.DrawMinorTicks">
      <summary>
            Show extra grid lines on the axis.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.DrawMinorGridLines">
      <summary>
            Show extra grid lines.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.DrawLabels">
      <summary>
            Show labels on the axis.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.TextFormatting">
      <summary>
            Labels format.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.SubDayTextFormatting">
      <summary>
            The format of X-axis labels within the day.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartAxis.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartAxis.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartAxis.PropertyChanged">
      <summary>
            The chart element properties value change event.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartAxis.RaisePropertyChanged(System.String)">
      <summary>
            To call the event <see cref="E:StockSharp.Xaml.Charting.ChartAxis.PropertyChanged" />.
            </summary>
      <param name="name">Property name.</param>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartAxis.PropertyChanging">
      <summary>
            The chart element properties value change start event.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartAxis.RaisePropertyChanging(System.String,System.Object)">
      <summary>
            To call the event <see cref="E:StockSharp.Xaml.Charting.ChartAxis.PropertyChanging" />.
            </summary>
      <param name="name">Property name.</param>
      <param name="value">New value of the property.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartCandleDrawStyles">
      <summary>
            Styles of the candles chart drawing.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.CandleStick">
      <summary>
            Japanese candles.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.Ohlc">
      <summary>
            Bars.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.LineOpen">
      <summary>
            Line (open).
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.LineHigh">
      <summary>
            Line (high).
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.LineLow">
      <summary>
            Line (low).
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.LineClose">
      <summary>
            Line (close).
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.BoxVolume">
      <summary>
            Box volumes.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.ClusterProfile">
      <summary>
            Cluster profile.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartCandleElement">
      <summary>
            The chart element representing a candle.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartCandleElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartCandleElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.Title">
      <summary>
            Series header that will be shown on chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.DrawStyle">
      <summary>
            Style of candles rendering.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.DownFillColor">
      <summary>
            Body color of decreasing candle.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.UpFillColor">
      <summary>
            Body color of increasing candle.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.DownBorderColor">
      <summary>
            Border color of decreasing candle.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.UpBorderColor">
      <summary>
            Border color of increasing candle.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.StrokeThickness">
      <summary>
            Line width (bar or border), with which candle will be drawn on chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.AntiAliasing">
      <summary>
            Candles rendering smothing (enabled by default).
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.LineColor">
      <summary>
            Line color for <see cref="P:StockSharp.Xaml.Charting.ChartCandleElement.DrawStyle" /> Line*.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.ShowAxisMarker">
      <summary>
            Show Y-axis market.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.Timeframe2Multiplier">
      <summary>
            Timeframe #2 multiplier.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.Timeframe3Multiplier">
      <summary>
            Timeframe #3 multiplier.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.FontColor">
      <summary>
            Font color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.Timeframe2Color">
      <summary>
            Timeframe #2 color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.Timeframe2FrameColor">
      <summary>
            Timeframe #2 frame color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.Timeframe3Color">
      <summary>
            Timeframe #3 color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.MaxVolumeColor">
      <summary>
            Max volume color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.ClusterLineColor">
      <summary>
            Cluster profile line color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.ClusterTextColor">
      <summary>
            Cluster text color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.ClusterColor">
      <summary>
            Cluster color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.ClusterMaxColor">
      <summary>
            Cluster max color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.ShowHorizontalVolumes">
      <summary>
            Show horizontal volume.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.LocalHorizontalVolumes">
      <summary>
            Local horizontal volume.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.HorizontalVolumeWidthFraction">
      <summary>
            Horizontal volume width fraction.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.HorizontalVolumeColor">
      <summary>
            Horizontal volume color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.HorizontalVolumeFontColor">
      <summary>
            Horizontal volume font color.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartCandleElement.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartCandleElement.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartCandleElement.Clone">
      <summary>
            Create a copy of <see cref="T:StockSharp.Xaml.Charting.ChartCandleElement" />.
            </summary>
      <returns>Copy.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartDrawData">
      <summary>
            Chart drawing data.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem">
      <summary>
            Chart drawing data item.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Time">
      <summary>
            The time stamp of the new data generation.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartCandleElement,StockSharp.Algo.Candles.Candle)">
      <summary>
            Put the candle data.
            </summary>
      <param name="element">The chart element representing a candle.</param>
      <param name="candle">The candle data.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartCandleElement,System.Object,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
      <summary>
            Put the candle data.
            </summary>
      <param name="element">The chart element representing a candle.</param>
      <param name="candleArg">Candle arg.</param>
      <param name="openPrice">Opening price.</param>
      <param name="highPrice">Highest price.</param>
      <param name="lowPrice">Lowest price.</param>
      <param name="closePrice">Closing price.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartCandleElement,System.Object,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Tuple{System.Decimal,System.Decimal}[],System.Nullable{System.Decimal})">
      <summary>
            Put the candle data.
            </summary>
      <param name="element">The chart element representing a candle.</param>
      <param name="candleArg">Candle arg.</param>
      <param name="openPrice">Opening price.</param>
      <param name="highPrice">Highest price.</param>
      <param name="lowPrice">Lowest price.</param>
      <param name="closePrice">Closing price.</param>
      <param name="priceLevels">Price levels.</param>
      <param name="priceStep">Minimum price step.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartCandleElement,System.Tuple{System.Object,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Tuple{System.Decimal,System.Decimal}[],System.Nullable{System.Decimal}})">
      <summary>
            Put the candle data.
            </summary>
      <param name="element">The chart element representing a candle.</param>
      <param name="candle">The candle data.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartIndicatorElement,StockSharp.Algo.Indicators.IIndicatorValue)">
      <summary>
            Put the indicator data.
            </summary>
      <param name="element">The chart element representing the indicator.</param>
      <param name="value">The indicator value.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartOrderElement,StockSharp.BusinessEntities.Order)">
      <summary>
            Put the order data.
            </summary>
      <param name="element">The chart element representing orders.</param>
      <param name="order">The order value.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartOrderElement,System.Int64,StockSharp.Messages.Sides,System.Decimal,System.Decimal)">
      <summary>
            Put the trade data.
            </summary>
      <param name="element">The chart element representing orders.</param>
      <param name="tradeId">Trade ID.</param>
      <param name="side">Order side (buy or sell).</param>
      <param name="price">Trade price.</param>
      <param name="volume">Number of contracts in a trade.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartOrderElement,System.Tuple{System.Int64,StockSharp.Messages.Sides,System.Decimal,System.Decimal})">
      <summary>
            Put the order data.
            </summary>
      <param name="element">The chart element representing orders.</param>
      <param name="order">The order value.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartTradeElement,StockSharp.BusinessEntities.MyTrade)">
      <summary>
            Put the order data.
            </summary>
      <param name="element">The chart element representing trades.</param>
      <param name="trade">The trade value.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartTradeElement,System.Int64,StockSharp.Messages.Sides,System.Decimal,System.Decimal)">
      <summary>
            Put the trade data.
            </summary>
      <param name="element">The chart element representing trades.</param>
      <param name="tradeId">Trade ID.</param>
      <param name="side">Order side (buy or sell).</param>
      <param name="price">Trade price.</param>
      <param name="volume">Number of contracts in a trade.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartTradeElement,System.Tuple{System.Int64,StockSharp.Messages.Sides,System.Decimal,System.Decimal})">
      <summary>
            Put the order data.
            </summary>
      <param name="element">The chart element representing trades.</param>
      <param name="trade">The trade value.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartActiveOrdersElement,StockSharp.Xaml.Charting.ChartActiveOrderInfo)">
      <summary>
            Put the active order data.
            </summary>
      <param name="element">The chart element representing active orders.</param>
      <param name="value">The active order value.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.IChartElement,System.Object)">
      <summary>
            Put the chart data.
            </summary>
      <param name="element">The chart element.</param>
      <param name="value">The chart value.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartDrawData" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.Group(System.DateTimeOffset)">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" />.
            </summary>
      <param name="offset">The time stamp of the new data generation.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IChartElement">
      <summary>
            The interface that describes the chart element (indicator, candle, etc.).
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartElement.Id">
      <summary>
            Unique ID.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartElement.IsLegend">
      <summary>
            Should legend be shown on chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartElement.XAxisId">
      <summary>
            X-axis.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartElement.YAxisId">
      <summary>
            Y-axis.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartElement.Chart">
      <summary>
            The chart on which the element is drawn.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartElement.ChartArea">
      <summary>
            The chart area on which the element is drawn.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartElement`1">
      <summary>
            The base class that describes the chart element (indicator, candle, etc.).
            </summary>
      <typeparam name="T">The chart element type.</typeparam>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartElement`1.#ctor">
      <summary>
            Initialize <see cref="T:StockSharp.Xaml.Charting.ChartElement`1" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.Chart">
      <summary>
            The chart on which the element is drawn.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.ChartArea">
      <summary>
            The chart area on which the element is drawn.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.FullTitle">
      <summary>
            The full series title which will be displayed in the chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.IsLegend">
      <summary>
            Should legend be shown on chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.XAxisId">
      <summary>
            X-axis.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.YAxisId">
      <summary>
            Y-axis.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartElement`1.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartElement`1.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartElement`1.FillClone(`0)">
      <summary>
            To fill out a copy of the element.
            </summary>
      <param name="elem">Copy.</param>
      <returns>Copy.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartElementEditor">
      <summary>
            The chart elements editor.
            </summary>
      <summary>
            ChartElementEditor
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartElementEditor.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartElementEditor" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartElementEditor.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartHelper">
      <summary>
            Extension class for <see cref="T:StockSharp.Xaml.Charting.IChart" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.SeriesName(System.String)">
      <summary>
            To get the unique name for the series.
            </summary>
      <param name="prefix">Name prefix.</param>
      <returns>The unique name.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.Draw(StockSharp.Xaml.Charting.IChart,StockSharp.Xaml.Charting.ChartCandleElement,StockSharp.Algo.Candles.Candle)">
      <summary>
            To draw the candle.
            </summary>
      <param name="chart">Chart.</param>
      <param name="element">The chart element representing a candle.</param>
      <param name="candle">Candle.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.Draw(StockSharp.Xaml.Charting.IChart,System.DateTimeOffset,StockSharp.Xaml.Charting.IChartElement,System.Object)">
      <summary>
            To draw new data.
            </summary>
      <param name="chart">Chart.</param>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="element">The chart element.</param>
      <param name="value">Value.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.Draw(StockSharp.Xaml.Charting.IChart,System.DateTimeOffset,System.Collections.Generic.IDictionary{StockSharp.Xaml.Charting.IChartElement,System.Object})">
      <summary>
            To process the new data.
            </summary>
      <param name="chart">Chart.</param>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="values">New data.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.Draw(StockSharp.Xaml.Charting.IChart,System.Collections.Generic.IEnumerable{Ecng.Common.RefPair{System.DateTimeOffset,System.Collections.Generic.IDictionary{StockSharp.Xaml.Charting.IChartElement,System.Object}}})">
      <summary>
            To process the new data.
            </summary>
      <param name="chart">Chart.</param>
      <param name="values">New data.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.SaveToXml(StockSharp.Xaml.Charting.IChart,System.String)">
      <summary>
            To save the chart data to xml file.
            </summary>
      <param name="chart">Chart.</param>
      <param name="fileName">The full path to the file.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.SaveToImage(StockSharp.Xaml.Charting.IChart)">
      <summary>
            To save the chart as image.
            </summary>
      <param name="chart">Chart.</param>
      <returns>The content of image.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.GetArea(StockSharp.Xaml.Charting.Chart,System.Int32)">
      <summary>
            To return the area by the specified index. If the number of areas is smaller then the missing areas will be created automatically.
            </summary>
      <param name="chart">Chart.</param>
      <param name="index">The area index.</param>
      <returns>Area.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.GetChart(StockSharp.Algo.Strategies.Strategy)">
      <summary>
            To get the chart associated with the passed strategy.
            </summary>
      <param name="strategy">Strategy.</param>
      <returns>Chart.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.SetChart(StockSharp.Algo.Strategies.Strategy,StockSharp.Xaml.Charting.IChart)">
      <summary>
            To set a chart for the strategy.
            </summary>
      <param name="strategy">Strategy.</param>
      <param name="chart">Chart.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.SetTitle(StockSharp.Xaml.Charting.ChartCandleElement,StockSharp.Algo.Candles.CandleSeries)">
      <summary>
            To set a title for the element.
            </summary>
      <param name="element">Element.</param>
      <param name="series">Candles series.</param>
      <returns>Element.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles">
      <summary>
            Indicator chart drawing styles.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Line">
      <summary>
            Line.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.NoGapLine">
      <summary>
            Line (no gaps).
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.StepLine">
      <summary>
            Stepped line.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Band">
      <summary>
            Band.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.BandOneValue">
      <summary>
            The range with a single value.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Dot">
      <summary>
            Dot.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Histogram">
      <summary>
            Histogram.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Bubble">
      <summary>
            Bubble.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.StackedBar">
      <summary>
            Stacked bar chart.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartIndicatorElement">
      <summary>
            The chart element representing the indicator.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartIndicatorElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartIndicatorElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.Title">
      <summary>
            Indicator header that will be shown on chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.Color">
      <summary>
            The color of the line (bar, etc.) by which the indicator will be drawn in the chart. The default is <see cref="P:System.Windows.Media.Colors.Green" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.AdditionalColor">
      <summary>
            Additional line color (bars etc), which will be drawn on the chart indicator.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.StrokeThickness">
      <summary>
            The thickness of the line (bar, etc.) by which the indicator will be drawn in the chart. The default is 2.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.IndicatorPainter">
      <summary>
            The indicator renderer.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.DrawStyle">
      <summary>
            The indicator drawing style. The default is <see cref="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Line" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.DrawTemplate">
      <summary>
            The chart template for the Dot style <see cref="T:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.AntiAliasing">
      <summary>
            The indicator drawing smoothing.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.ShowAxisMarker">
      <summary>
            Show Y-axis market.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.ParentElement">
      <summary>
            Parent <see cref="T:StockSharp.Xaml.Charting.ChartIndicatorElement" />. It is used when indicators drawing using <see cref="T:StockSharp.Xaml.Charting.IChartIndicatorPainter" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartIndicatorElement.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartIndicatorElement.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartIndicatorElement.Clone">
      <summary>
            Create a copy of <see cref="T:StockSharp.Xaml.Charting.ChartIndicatorElement" />.
            </summary>
      <returns>Copy.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartIndicatorElement.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartOrderElement">
      <summary>
            The chart element representing orders.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartOrderElement.#ctor">
      <summary>
            Initialize <see cref="T:StockSharp.Xaml.Charting.ChartOrderElement" />.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartPanel">
      <summary>
            The extended graphical component for candle charts displaying.
            </summary>
      <summary>
            ChartPanel
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.SecurityProvider">
      <summary>
            The provider of information about instruments.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartPanel.RegisterOrderCommand">
      <summary>
            The command for the order registration.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartPanel.AddAreaCommand">
      <summary>
            The command to add the area to the chart.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartPanel.AddCandlesCommand">
      <summary>
            The command to add candles to the chart.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartPanel.AddIndicatorCommand">
      <summary>
            The command to add the indicator to the chart.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.SettingsChanged">
      <summary>
            The chart settings change event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.RegisterOrder">
      <summary>
            The event of the order registration from the chart.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.MoveOrder">
      <summary>
            The event of the order re-registration from the chart.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.CancelOrder">
      <summary>
            The event of the order cancelation from the chart.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.SubscribeCandleElement">
      <summary>
            The event of the subscription to getting data for the element.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.SubscribeIndicatorElement">
      <summary>
            The event of the subscription to getting data for the element.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.SubscribeOrderElement">
      <summary>
            The event of the subscription to getting data for the element.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.SubscribeTradeElement">
      <summary>
            The event of the subscription to getting data for the element.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.UnSubscribeElement">
      <summary>
            The event of the unsubscribe from getting data for the element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.Elements">
      <summary>
            Chart elements.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.IsAutoRange">
      <summary>
            To use automatic range for the X-axis. The default is off.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.ChartTheme">
      <summary>
            The name of the graphic theme.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.OrderSettings">
      <summary>
            Chart order registering settings.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.ShareSettings">
      <summary>
            Chart share (upload image to web) settings.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.AddArea(StockSharp.Xaml.Charting.ChartArea)">
      <summary>
            To add an area to the chart.
            </summary>
      <param name="area">Chart area.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.RemoveArea(StockSharp.Xaml.Charting.ChartArea)">
      <summary>
            To remove the area from the chart.
            </summary>
      <param name="area">Chart area.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.ClearAreas">
      <summary>
            To remove all areas from the chart.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.IChartElement)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartCandleElement,StockSharp.Algo.Candles.CandleSeries)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
      <param name="candleSeries">Candles series.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartIndicatorElement,StockSharp.Algo.Candles.CandleSeries,StockSharp.Algo.Indicators.IIndicator)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
      <param name="candleSeries">Candles series.</param>
      <param name="indicator">Indicator.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartOrderElement,StockSharp.BusinessEntities.Security)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
      <param name="security">Security.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartTradeElement,StockSharp.BusinessEntities.Security)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
      <param name="security">Security.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.RemoveElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.IChartElement)">
      <summary>
            To remove the element from the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.GetIndicator(StockSharp.Xaml.Charting.ChartIndicatorElement)">
      <summary>
            To get an indicator which is associated with <see cref="T:StockSharp.Xaml.Charting.ChartIndicatorElement" />.
            </summary>
      <param name="element">The chart element.</param>
      <returns>Indicator.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.GetSource(StockSharp.Xaml.Charting.IChartElement)">
      <summary>
            To get the data source for <see cref="T:StockSharp.Xaml.Charting.IChartElement" />.
            </summary>
      <param name="element">The chart element.</param>
      <returns>Market-data source.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.SetSource(StockSharp.Xaml.Charting.IChartElement,System.Object)">
      <summary>
            To set the source for the element.
            </summary>
      <param name="element">The chart element.</param>
      <param name="source">Source.</param>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.IsInteracted">
      <summary>
            The interactive mode. The default is off.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.OrderCreationMode">
      <summary>
            The order creation mode. The default is off.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.MinimumRange">
      <summary>
            The minimum number of visible candles.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.ShowOverview">
      <summary>
            To show the preview area.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.IndicatorTypes">
      <summary>
            The list of available indicators types.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartPanel" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.ReSubscribeElements">
      <summary>
            To re-subscribe to getting data for all elements.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.Areas">
      <summary>
            Chart areas.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.IsAutoScroll">
      <summary>
            To scroll <see cref="P:StockSharp.Xaml.Charting.IChart.Areas" /> areas automatically when new data occured. The default is enabled.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.Reset(System.Collections.Generic.IEnumerable{StockSharp.Xaml.Charting.IChartElement})">
      <summary>
            To reset the chart elements values drawn previously.
            </summary>
      <param name="elements">Chart elements.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.Draw(StockSharp.Xaml.Charting.ChartDrawData)">
      <summary>
            To process the new data.
            </summary>
      <param name="data">New data.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartPanelOrderSettings">
      <summary>
            Chart order registering settings.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanelOrderSettings.Security">
      <summary>
            The security.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanelOrderSettings.Portfolio">
      <summary>
            The portfolio.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanelOrderSettings.Volume">
      <summary>
            Number of contracts in an order.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanelOrderSettings.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanelOrderSettings.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartPanelShareSettings">
      <summary>
            Chart share (upload image to web) settings.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanelShareSettings.IsEnabled">
      <summary>
            Is sharing enable.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanelShareSettings.Period">
      <summary>
            Incremental period to refresh prev upload image.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanelShareSettings.FileName">
      <summary>
            Name of uploaded image.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanelShareSettings.Published">
      <summary>
            Is published.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanelShareSettings.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanelShareSettings.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartPart`1">
      <summary>
            The base class that describes the part of the chart.
            </summary>
      <typeparam name="T">The chart element type.</typeparam>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.#ctor">
      <summary>
            Initialize <see cref="T:StockSharp.Xaml.Charting.ChartPart`1" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPart`1.Id">
      <summary>
            Unique ID.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.OnEquals(`0)">
      <summary>
            Compare <see cref="T:StockSharp.Xaml.Charting.ChartElement`1" /> on the equivalence.
            </summary>
      <param name="other">Another value with which to compare.</param>
      <returns>
        <see langword="true" />, if the specified object is equal to the current object, otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.GetHashCode">
      <summary>
            Get the hash code of the object <see cref="T:StockSharp.Xaml.Charting.ChartElement`1" />.
            </summary>
      <returns>A hash code.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.FillClone(`0)">
      <summary>
            To fill out a copy of the element.
            </summary>
      <param name="elem">Copy.</param>
      <returns>Copy.</returns>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPart`1.PropertyChanged">
      <summary>
            The chart element properties value change event.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.RaisePropertyChanged(System.String)">
      <summary>
            To call the event <see cref="E:StockSharp.Xaml.Charting.ChartPart`1.PropertyChanged" />.
            </summary>
      <param name="name">Property name.</param>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPart`1.PropertyChanging">
      <summary>
            The chart element properties value change start event.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.RaisePropertyChanging(System.String,System.Object)">
      <summary>
            To call the event <see cref="E:StockSharp.Xaml.Charting.ChartPart`1.PropertyChanging" />.
            </summary>
      <param name="name">Property name.</param>
      <param name="value">New value of the property.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.SetField``1(``0@,``0,System.String)">
      <summary>
            Update field value and raise <see cref="E:StockSharp.Xaml.Charting.ChartPart`1.PropertyChanged" /> event.
            </summary>
      <param name="field">Field to update.</param>
      <param name="value">New value.</param>
      <param name="name">Name of the field to update.</param>
      <typeparam name="TField">The field type.</typeparam>
      <returns>
        <see langword="true" /> if the field was updated. <see langword="false" /> otherwise.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartTradeElement">
      <summary>
            The chart element representing trades.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartTransactionElement`1">
      <summary>
            The base class that describes the Orders Or Trades chart element.
            </summary>
      <typeparam name="T">The element type.</typeparam>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartTransactionElement`1.#ctor">
      <summary>
            Initialize <see cref="T:StockSharp.Xaml.Charting.ChartTransactionElement`1" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartTransactionElement`1.Title">
      <summary>
            Series header that will be shown on chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartTransactionElement`1.BuyColor">
      <summary>
            Color of graphics element on chart, indicating buy.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartTransactionElement`1.BuyStrokeColor">
      <summary>
            Border color of graphics element on chart, indicating buy.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartTransactionElement`1.SellColor">
      <summary>
            Color of graphics element on chart, indicating sell.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartTransactionElement`1.SellStrokeColor">
      <summary>
            Border color of graphics element on chart, indicating sell.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartTransactionElement`1.IsHidden">
      <summary>
            The visibility of elements in the chart.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartTransactionElement`1.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartTransactionElement`1.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartTransactionElement`1.FillClone(`0)">
      <summary>
            To fill out a copy of the element.
            </summary>
      <param name="elem">Copy.</param>
      <returns>Copy.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartTransactionElement`1.Clone">
      <summary>
            Create a copy of <see cref="T:StockSharp.Xaml.Charting.ChartTransactionElement`1" />.
            </summary>
      <returns>Copy.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.EquityCurveChart">
      <summary>
            The graphical component to display the equity curve.
            </summary>
      <summary>
            EquityCurveChart
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.EquityCurveChart" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.EquityCurveChart.NoGapMode">
      <summary>
            To remove gaps (weekends, holidays) on the chart. When the mode is enabled and multiple curves are used then joint scaling will be lost. Enabled by default.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.CreateCurve(System.String,System.Windows.Media.Color,StockSharp.Xaml.Charting.EquityCurveChartStyles)">
      <summary>
            To create new curve to draw the yield.
            </summary>
      <param name="title">The curve title.</param>
      <param name="color">The curve color.</param>
      <param name="style">The equity curve drawing style. The default is <see cref="F:StockSharp.Xaml.Charting.EquityCurveChartStyles.Line" />.</param>
      <returns>The collection of data that should be filled for the curve drawing.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.CreateCurve(System.String,System.Windows.Media.Color,System.Windows.Media.Color,StockSharp.Xaml.Charting.EquityCurveChartStyles)">
      <summary>
            To create new curve to draw the yield.
            </summary>
      <param name="title">The curve title.</param>
      <param name="color">The curve color.</param>
      <param name="secondColor">The additional curve color. It is used to draw <see cref="F:StockSharp.Xaml.Charting.EquityCurveChartStyles.Area" />.</param>
      <param name="style">The equity curve drawing style. The default is <see cref="F:StockSharp.Xaml.Charting.EquityCurveChartStyles.Line" />.</param>
      <returns>The collection of data that should be filled for the curve drawing.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.RemoveCurve(System.Collections.Generic.ICollection{StockSharp.Xaml.Charting.EquityData})">
      <summary>
            To remove the yield curve from the chart.
            </summary>
      <param name="items">The collection of data obtained from the method <see cref="M:StockSharp.Xaml.Charting.EquityCurveChart.CreateCurve(System.String,System.Windows.Media.Color,StockSharp.Xaml.Charting.EquityCurveChartStyles)" />.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.Clear">
      <summary>
            To remove yield curves from the chart.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.EquityCurveChartStyles">
      <summary>
            Equity curve chart drawing styles.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.EquityCurveChartStyles.Area">
      <summary>
            Chart drawing in the form of a fill area.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.EquityCurveChartStyles.Line">
      <summary>
            Chart drawing in the form of a line.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.EquityCurveChartStyles.DashedLine">
      <summary>
            Chart drawing in the form of a dashed line.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.EquityData">
      <summary>
            Equity data.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.EquityData.Time">
      <summary>
            The time stamp in which the equity value was equal to <see cref="P:StockSharp.Xaml.Charting.EquityData.Value" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.EquityData.Value">
      <summary>
            The equity value.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ExtendedBaseApplication">
      <summary>
            The extended base class for WPF applications.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ExtendedBaseApplication.#ctor">
      <summary>
            Initialize <see cref="T:StockSharp.Xaml.Charting.ExtendedBaseApplication" />.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.Extensions">
      <summary>
            Extension class.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IChart">
      <summary>
            The interface for work with the chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChart.Areas">
      <summary>
            Chart areas.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChart.IsAutoScroll">
      <summary>
            To scroll <see cref="P:StockSharp.Xaml.Charting.IChart.Areas" /> areas automatically when new data occured. The default is enabled.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChart.IsAutoRange">
      <summary>
            To use automatic range for the X-axis. The default is off.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChart.IndicatorTypes">
      <summary>
            The list of available indicators types.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.AddArea(StockSharp.Xaml.Charting.ChartArea)">
      <summary>
            To add an area to the chart.
            </summary>
      <param name="area">Chart area.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.RemoveArea(StockSharp.Xaml.Charting.ChartArea)">
      <summary>
            To remove the area from the chart.
            </summary>
      <param name="area">Chart area.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.ClearAreas">
      <summary>
            To remove all areas from the chart.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.IChartElement)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartCandleElement,StockSharp.Algo.Candles.CandleSeries)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
      <param name="candleSeries">Candles series.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartIndicatorElement,StockSharp.Algo.Candles.CandleSeries,StockSharp.Algo.Indicators.IIndicator)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
      <param name="candleSeries">Candles series.</param>
      <param name="indicator">Indicator.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartOrderElement,StockSharp.BusinessEntities.Security)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
      <param name="security">Security.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartTradeElement,StockSharp.BusinessEntities.Security)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
      <param name="security">Security.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.RemoveElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.IChartElement)">
      <summary>
            To remove the element from the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.GetIndicator(StockSharp.Xaml.Charting.ChartIndicatorElement)">
      <summary>
            To get an indicator which is associated with <see cref="T:StockSharp.Xaml.Charting.ChartIndicatorElement" />.
            </summary>
      <param name="element">The chart element.</param>
      <returns>Indicator.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.GetSource(StockSharp.Xaml.Charting.IChartElement)">
      <summary>
            To get the data source for <see cref="T:StockSharp.Xaml.Charting.IChartElement" />.
            </summary>
      <param name="element">The chart element.</param>
      <returns>Market-data source.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.Reset(System.Collections.Generic.IEnumerable{StockSharp.Xaml.Charting.IChartElement})">
      <summary>
            To reset the chart elements values drawn previously.
            </summary>
      <param name="elements">Chart elements.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.Draw(StockSharp.Xaml.Charting.ChartDrawData)">
      <summary>
            To process the new data.
            </summary>
      <param name="data">New data.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.DrawHandler">
      <summary>
            The description of the method of value drawing on the chart.
            </summary>
      <param name="element">The chart element.</param>
      <param name="shift">Offset.</param>
      <param name="values">Values.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IChartIndicatorPainter">
      <summary>
            The interface describing the indicator renderer on the chart (for example, lines, histograms, etc.).
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartIndicatorPainter.BaseElement">
      <summary>
            The chart element representing the indicator.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChartIndicatorPainter.Init">
      <summary>
            To initialize renderer.
            </summary>
      <returns>Graphical data.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChartIndicatorPainter.ProcessValues(System.DateTimeOffset,StockSharp.Algo.Indicators.IIndicatorValue,StockSharp.Xaml.Charting.DrawHandler)">
      <summary>
            To process new values.
            </summary>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="value">Indicator values.</param>
      <param name="draw">The method of value drawing on the chart.</param>
      <returns>New values for display on the chart.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.AlligatorPainter">
      <summary>
            The renderer for <see cref="T:StockSharp.Algo.Indicators.Alligator" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.AlligatorPainter.LipsColor">
      <summary>
            Lips line color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.AlligatorPainter.TeethColor">
      <summary>
            Teeth line color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.AlligatorPainter.JawColor">
      <summary>
            Jaw line color.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.AlligatorPainter.Init">
      <summary>
            To initialize renderer.
            </summary>
      <returns>Graphical data.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.AlligatorPainter.ProcessValues(System.DateTimeOffset,StockSharp.Algo.Indicators.IIndicatorValue,StockSharp.Xaml.Charting.DrawHandler)">
      <summary>
            To process new values.
            </summary>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="value">Indicator values.</param>
      <param name="draw">The method of value drawing on the chart.</param>
      <returns>New values for display on the chart.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.AlligatorPainter.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.AlligatorPainter.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter">
      <summary>
            The renderer for <see cref="T:StockSharp.Algo.Indicators.AverageDirectionalIndex" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter.DxPlusColor">
      <summary>
            DI+ line color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter.DiMinusColor">
      <summary>
            DI- line color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter.AdxColor">
      <summary>
            ADX line color.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter.Init">
      <summary>
            To initialize renderer.
            </summary>
      <returns>Graphical data.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter.ProcessValues(System.DateTimeOffset,StockSharp.Algo.Indicators.IIndicatorValue,StockSharp.Xaml.Charting.DrawHandler)">
      <summary>
            To process new values.
            </summary>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="value">Indicator values.</param>
      <param name="draw">The method of value drawing on the chart.</param>
      <returns>New values for display on the chart.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter">
      <summary>
            The indicator renderer base class on the chart (for example, lines, histograms, etc.).
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter.BaseElement">
      <summary>
            The chart element representing the indicator.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter.InnerElements">
      <summary>
            Chart elements representing embedded indicators.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter.Init">
      <summary>
            To initialize renderer.
            </summary>
      <returns>Graphical data.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter.ProcessValues(System.DateTimeOffset,StockSharp.Algo.Indicators.IIndicatorValue,StockSharp.Xaml.Charting.DrawHandler)">
      <summary>
            To process new values.
            </summary>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="value">Indicator values.</param>
      <param name="draw">The method of value drawing on the chart.</param>
      <returns>New values for display on the chart.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.BollingerBandsPainter">
      <summary>
            The renderer for <see cref="T:StockSharp.Algo.Indicators.BollingerBands" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.BollingerBandsPainter.UpBandColor">
      <summary>
            Color of the upper indicator line.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.BollingerBandsPainter.LowBandColor">
      <summary>
            Color of the lower indicator line.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.BollingerBandsPainter.MovingAverageColor">
      <summary>
            Color of average line.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BollingerBandsPainter.Init">
      <summary>
            To initialize renderer.
            </summary>
      <returns>Graphical data.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BollingerBandsPainter.ProcessValues(System.DateTimeOffset,StockSharp.Algo.Indicators.IIndicatorValue,StockSharp.Xaml.Charting.DrawHandler)">
      <summary>
            To process new values.
            </summary>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="value">Indicator values.</param>
      <param name="draw">The method of value drawing on the chart.</param>
      <returns>New values for display on the chart.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BollingerBandsPainter.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BollingerBandsPainter.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.FractalsPainter">
      <summary>
            The renderer for <see cref="T:StockSharp.Algo.Indicators.Fractals" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.FractalsPainter.UpColor">
      <summary>
            Up line color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.FractalsPainter.DownColor">
      <summary>
            Down line color.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.FractalsPainter.Init">
      <summary>
            To initialize renderer.
            </summary>
      <returns>Graphical data.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.FractalsPainter.ProcessValues(System.DateTimeOffset,StockSharp.Algo.Indicators.IIndicatorValue,StockSharp.Xaml.Charting.DrawHandler)">
      <summary>
            To process new values.
            </summary>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="value">Indicator values.</param>
      <param name="draw">The method of value drawing on the chart.</param>
      <returns>New values for display on the chart.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.FractalsPainter.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.FractalsPainter.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter">
      <summary>
            The renderer for <see cref="T:StockSharp.Algo.Indicators.Ichimoku" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter.TenkanColor">
      <summary>
            Tenkan line color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter.KijunColor">
      <summary>
            Kijun line color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter.SenkouAColor">
      <summary>
            SenkouA line color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter.SenkouBColor">
      <summary>
            SenkouA line color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter.ChinkouColor">
      <summary>
            Chinkou line color.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter.Init">
      <summary>
            To initialize renderer.
            </summary>
      <returns>Graphical data.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter.ProcessValues(System.DateTimeOffset,StockSharp.Algo.Indicators.IIndicatorValue,StockSharp.Xaml.Charting.DrawHandler)">
      <summary>
            To process new values.
            </summary>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="value">Indicator values.</param>
      <param name="draw">The method of value drawing on the chart.</param>
      <returns>New values for display on the chart.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceHistogramPainter">
      <summary>
            The renderer for <see cref="T:StockSharp.Algo.Indicators.MovingAverageConvergenceDivergenceHistogram" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceHistogramPainter.Init">
      <summary>
            To initialize renderer.
            </summary>
      <returns>Graphical data.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceHistogramPainter.ProcessValues(System.DateTimeOffset,StockSharp.Algo.Indicators.IIndicatorValue,StockSharp.Xaml.Charting.DrawHandler)">
      <summary>
            To process new values.
            </summary>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="value">Indicator values.</param>
      <param name="draw">The method of value drawing on the chart.</param>
      <returns>New values for display on the chart.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceSignalPainter">
      <summary>
            The renderer for <see cref="T:StockSharp.Algo.Indicators.MovingAverageConvergenceDivergenceSignal" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceSignalPainter.Init">
      <summary>
            To initialize renderer.
            </summary>
      <returns>Graphical data.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceSignalPainter.ProcessValues(System.DateTimeOffset,StockSharp.Algo.Indicators.IIndicatorValue,StockSharp.Xaml.Charting.DrawHandler)">
      <summary>
            To process new values.
            </summary>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="value">Indicator values.</param>
      <param name="draw">The method of value drawing on the chart.</param>
      <returns>New values for display on the chart.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.ParabolicSarPainter">
      <summary>
            The renderer for <see cref="T:StockSharp.Algo.Indicators.ParabolicSar" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.ParabolicSarPainter.Init">
      <summary>
            To initialize renderer.
            </summary>
      <returns>Graphical data.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.ParabolicSarPainter.ProcessValues(System.DateTimeOffset,StockSharp.Algo.Indicators.IIndicatorValue,StockSharp.Xaml.Charting.DrawHandler)">
      <summary>
            To process new values.
            </summary>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="value">Indicator values.</param>
      <param name="draw">The method of value drawing on the chart.</param>
      <returns>New values for display on the chart.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.PeakPainter">
      <summary>
            The renderer for <see cref="T:StockSharp.Algo.Indicators.Peak" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.PeakPainter.Init">
      <summary>
            To initialize renderer.
            </summary>
      <returns>Graphical data.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.PeakPainter.ProcessValues(System.DateTimeOffset,StockSharp.Algo.Indicators.IIndicatorValue,StockSharp.Xaml.Charting.DrawHandler)">
      <summary>
            To process new values.
            </summary>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="value">Indicator values.</param>
      <param name="draw">The method of value drawing on the chart.</param>
      <returns>New values for display on the chart.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.TroughPainter">
      <summary>
            The renderer for <see cref="T:StockSharp.Algo.Indicators.Trough" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.TroughPainter.Init">
      <summary>
            To initialize renderer.
            </summary>
      <returns>Graphical data.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.TroughPainter.ProcessValues(System.DateTimeOffset,StockSharp.Algo.Indicators.IIndicatorValue,StockSharp.Xaml.Charting.DrawHandler)">
      <summary>
            To process new values.
            </summary>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="value">Indicator values.</param>
      <param name="draw">The method of value drawing on the chart.</param>
      <returns>New values for display on the chart.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.VolumePainter">
      <summary>
            The renderer for <see cref="T:StockSharp.Algo.Indicators.VolumeIndicator" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.VolumePainter.UpColor">
      <summary>
            Up line color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.VolumePainter.DownColor">
      <summary>
            Down line color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.VolumePainter.BubbleAutoScale">
      <summary>
            To use the automatic scaling for the Bubble mode.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.VolumePainter.BubbleScale">
      <summary>
            Manual scaling for the Bubble mode.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.VolumePainter.Init">
      <summary>
            To initialize renderer.
            </summary>
      <returns>Graphical data.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.VolumePainter.ProcessValues(System.DateTimeOffset,StockSharp.Algo.Indicators.IIndicatorValue,StockSharp.Xaml.Charting.DrawHandler)">
      <summary>
            To process new values.
            </summary>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="value">Indicator values.</param>
      <param name="draw">The method of value drawing on the chart.</param>
      <returns>New values for display on the chart.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.VolumePainter.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.VolumePainter.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.VolumeProfilePainter">
      <summary>
            The renderer for <see cref="T:StockSharp.Algo.Indicators.VolumeProfileIndicator" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.VolumeProfilePainter.Init">
      <summary>
            To initialize renderer.
            </summary>
      <returns>Graphical data.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.VolumeProfilePainter.ProcessValues(System.DateTimeOffset,StockSharp.Algo.Indicators.IIndicatorValue,StockSharp.Xaml.Charting.DrawHandler)">
      <summary>
            To process new values.
            </summary>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="value">Indicator values.</param>
      <param name="draw">The method of value drawing on the chart.</param>
      <returns>New values for display on the chart.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.ZigZagEquisPainter">
      <summary>
            The renderer for <see cref="T:StockSharp.Algo.Indicators.ZigZagEquis" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.ZigZagEquisPainter.Init">
      <summary>
            To initialize renderer.
            </summary>
      <returns>Graphical data.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.ZigZagEquisPainter.ProcessValues(System.DateTimeOffset,StockSharp.Algo.Indicators.IIndicatorValue,StockSharp.Xaml.Charting.DrawHandler)">
      <summary>
            To process new values.
            </summary>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="value">Indicator values.</param>
      <param name="draw">The method of value drawing on the chart.</param>
      <returns>New values for display on the chart.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.ZigZagPainter">
      <summary>
            The renderer for <see cref="T:StockSharp.Algo.Indicators.ZigZag" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.ZigZagPainter.Init">
      <summary>
            To initialize renderer.
            </summary>
      <returns>Graphical data.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.ZigZagPainter.ProcessValues(System.DateTimeOffset,StockSharp.Algo.Indicators.IIndicatorValue,StockSharp.Xaml.Charting.DrawHandler)">
      <summary>
            To process new values.
            </summary>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="value">Indicator values.</param>
      <param name="draw">The method of value drawing on the chart.</param>
      <returns>New values for display on the chart.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorType">
      <summary>
            The indicator type description.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorType.Name">
      <summary>
            Indicator name.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorType.Description">
      <summary>
            The indicator description.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorType.Indicator">
      <summary>
            Indicator type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorType.Painter">
      <summary>
            The renderer type for indicator extended drawing.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorType.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.IndicatorType" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorType.#ctor(System.Type,System.Type)">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.IndicatorType" />.
            </summary>
      <param name="indicator">Indicator type.</param>
      <param name="painter">The renderer type for indicator extended drawing.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorType.Clone">
      <summary>
            Create a copy of <see cref="T:StockSharp.Xaml.Charting.IndicatorType" />.
            </summary>
      <returns>Copy.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorType.OnEquals(StockSharp.Xaml.Charting.IndicatorType)">
      <summary>
            Compare <see cref="T:StockSharp.Xaml.Charting.IndicatorType" /> on the equivalence.
            </summary>
      <param name="other">Another value with which to compare.</param>
      <returns>
        <see langword="true" />, if the specified object is equal to the current object, otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorType.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorType.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.LineElement">
      <summary>
            The chart element representing a line.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.LineElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.LineElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.LineElement.Color">
      <summary>
            Line color (bar and etc.), with which it will be drawn on chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.LineElement.AdditionalColor">
      <summary>
            Additional line color (bars etc), with which it will be drawn on the chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.LineElement.StrokeThickness">
      <summary>
            The thickness of the line (bar, etc.) with which it will be drawn on the chart. The default is 1.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.LineElement.AntiAliasing">
      <summary>
            The smoothing of the line drawing. The default is enabled.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.LineElement.Clone">
      <summary>
            Create a copy of <see cref="T:StockSharp.Xaml.Charting.LineElement" />.
            </summary>
      <returns>Copy.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.OptionPositionChartParams">
      <summary>
            The parameters types to be displayed on the chart <see cref="T:StockSharp.Xaml.Charting.OptionPositionChart" />.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.OptionPositionChartParams.Premium">
      <summary>
        <see cref="M:StockSharp.Algo.Derivatives.IBlackScholes.Premium(System.DateTimeOffset,System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.OptionPositionChartParams.Delta">
      <summary>
        <see cref="M:StockSharp.Algo.Derivatives.IBlackScholes.Delta(System.DateTimeOffset,System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.OptionPositionChartParams.Gamma">
      <summary>
        <see cref="M:StockSharp.Algo.Derivatives.IBlackScholes.Gamma(System.DateTimeOffset,System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.OptionPositionChartParams.Theta">
      <summary>
        <see cref="M:StockSharp.Algo.Derivatives.IBlackScholes.Theta(System.DateTimeOffset,System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.OptionPositionChartParams.Vega">
      <summary>
        <see cref="M:StockSharp.Algo.Derivatives.IBlackScholes.Vega(System.DateTimeOffset,System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.OptionPositionChartParams.Rho">
      <summary>
        <see cref="M:StockSharp.Algo.Derivatives.IBlackScholes.Rho(System.DateTimeOffset,System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.OptionPositionChart">
      <summary>
            The chart showing the position and options Greeks regarding to the underlying asset.
            </summary>
      <summary>
            OptionPositionChart
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.OptionPositionChart.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.OptionPositionChart" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.SecurityProvider">
      <summary>
            The provider of information about instruments.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.MarketDataProvider">
      <summary>
            The market data provider.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.ChartParam">
      <summary>
            The parameter type in the chart. The default is <see cref="F:StockSharp.Xaml.Charting.OptionPositionChartParams.Premium" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.Positions">
      <summary>
            Option positions.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.AssetPosition">
      <summary>
            The position by the underlying asset.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.ShowSeparated">
      <summary>
            To show position charts separately or as a single position. By default, it is displayed as a single position.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.ShowExpiration">
      <summary>
            To show the position chart at the time of expiration. The default is enabled.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.UseBlackModel">
      <summary>
            Whether to use the model <see cref="T:StockSharp.Algo.Derivatives.Black" />. By default, the model is not used.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.OptionPositionChart.Refresh(System.Decimal,System.Decimal,System.DateTimeOffset,System.DateTimeOffset)">
      <summary>
            To redraw the chart.
            </summary>
      <param name="assetPrice">The current price of the underlying asset.</param>
      <param name="priceStep">Price step.</param>
      <param name="currentTime">The current time.</param>
      <param name="expiryDate">The expiration date.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.OptionPositionChart.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.Ultrachart.ByItemTypeTemplateSelector">
      <summary>
            Select data template by item type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Ultrachart.ByItemTypeTemplateSelector.SeriesInfoTemplate">
      <summary>
            Template for <see cref="T:Ecng.Xaml.Charting.SeriesInfo" /> item type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Ultrachart.ByItemTypeTemplateSelector.ChartElementTemplate">
      <summary>
            Template for <see cref="T:StockSharp.Xaml.Charting.IChartElement" /> item type.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.ByItemTypeTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
      <summary>
            When overridden in a derived class, returns a <see cref="T:System.Windows.DataTemplate" /> based on custom logic.
            </summary>
      <returns>
            Returns a <see cref="T:System.Windows.DataTemplate" /> or null. The default value is null.
            </returns>
      <param name="item">The data object for which to select the template.</param>
      <param name="container">The data-bound object.</param>
    </member>
  </members>
</doc>