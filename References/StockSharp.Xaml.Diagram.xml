<?xml version="1.0"?>
<doc>
  <assembly>
    <name>StockSharp.Xaml.Diagram</name>
  </assembly>
  <members>
    <member name="T:StockSharp.Xaml.Diagram.CompositionDiagramElement">
      <summary>
            Composite element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.CompositionDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.CompositionDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.CompositionDiagramElement.Parameters">
      <summary>
            Diagram element settings.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.CompositionDiagramElement.Category">
      <summary>
            The name of the group which includes a diagram element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.CompositionDiagramElement.Description">
      <summary>
            The diagram element description.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.CompositionDiagramElement.IsModifiable">
      <summary>
            Is it possible to edit a composite element diagram.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.CompositionDiagramElement.HasErrors">
      <summary>
            To check the composite element for errors in diagram.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.CompositionDiagramElement.Changed">
      <summary>
            The composite element diagram change event.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.CompositionDiagramElement" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionDiagramElement.RaisePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
            To call the diagram element property value change event.
            </summary>
      <param name="sender">Sender.</param>
      <param name="args">Arguments.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionDiagramElement.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionDiagramElement.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionDiagramElement.OnInit">
      <summary>
            The method is called at initialization of the diagram element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionDiagramElement.OnUnInit">
      <summary>
            The method is called at deinitialization of the diagram element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionDiagramElement.OnBind(StockSharp.Xaml.Diagram.DiagramElement)">
      <summary>
            The method is called at subscription to the processing of diagram element output values.
            </summary>
      <param name="element">The diagram element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionDiagramElement.OnUnBind(StockSharp.Xaml.Diagram.DiagramElement)">
      <summary>
            The method is called at unsubscription from the processing of diagram element output values.
            </summary>
      <param name="element">The diagram element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionDiagramElement.OnStart">
      <summary>
            The method is called at the start of the diagram element algorithm.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionDiagramElement.OnStop">
      <summary>
            The method is called at the stop of the diagram element algorithm.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionDiagramElement.OnReseted">
      <summary>
            The method is called at re-initialisation of the diagram element state.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionDiagramElement.OnProcess(StockSharp.Xaml.Diagram.DiagramSocket,StockSharp.Xaml.Diagram.DiagramSocketValue)">
      <summary>
            The method is called at the processing of the new incoming value.
            </summary>
      <param name="socket">Socket.</param>
      <param name="value">Value.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionDiagramElement.Clone(System.Boolean)">
      <summary>
            Create a copy of <see cref="T:StockSharp.Xaml.Diagram.CompositionDiagramElement" />.
            </summary>
      <param name="cloneSockets">To create copies of connections.</param>
      <returns>Copy.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.CompositionRegistry">
      <summary>
            The storage of composite elements.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.CompositionRegistry.DiagramElements">
      <summary>
            List of elements.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.CompositionRegistry.SaveComposition">
      <summary>
            The diagram composite element saving event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.CompositionRegistry.RemoveComposition">
      <summary>
            The diagram composite element removing event.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionRegistry.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.CompositionRegistry" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionRegistry.Save(StockSharp.Xaml.Diagram.CompositionDiagramElement)">
      <summary>
            Save settings.
            </summary>
      <param name="composition">Composite element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionRegistry.TryRemove(StockSharp.Xaml.Diagram.CompositionDiagramElement)">
      <summary>
            To remove the composite element, if it is not used in other composite diagrams.
            </summary>
      <param name="element">Composite element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionRegistry.Load(Ecng.Serialization.SettingsStorage,System.Boolean)">
      <summary>
            Load settings.
            </summary>
      <param name="data">The data string.</param>
      <param name="readOnly">Is it possible to modify the element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionRegistry.Serialize(StockSharp.Xaml.Diagram.CompositionDiagramElement)">
      <summary>
            To serialize the composite element.
            </summary>
      <param name="composition">Composite element.</param>
      <returns>Settings storage.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionRegistry.Deserialize(Ecng.Serialization.SettingsStorage)">
      <summary>
            To deserialize the composite element.
            </summary>
      <param name="storage">Settings storage.</param>
      <returns>Composite element.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionRegistry.DeserializeExported(Ecng.Serialization.SettingsStorage)">
      <summary>
            To deserialize the composite element.
            </summary>
      <param name="storage">Settings storage.</param>
      <returns>Composite element.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.CompositionRegistry.Load(StockSharp.Xaml.Diagram.CompositionDiagramElement,Ecng.Serialization.SettingsStorage)">
      <summary>
            Load composite element from settings.
            </summary>
      <param name="element">Composite element.</param>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.DebuggerSyncObject">
      <summary>
            The synchronization object for the composite elements debugger.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DebuggerSyncObject.CurrentElement">
      <summary>
            The current element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DebuggerSyncObject.CurrentSocket">
      <summary>
            The current socket.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DebuggerSyncObject.#ctor(System.Func{StockSharp.Xaml.Diagram.DiagramSocket,System.Boolean,System.Boolean},System.Action{StockSharp.Xaml.Diagram.DebuggerSyncObject})">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.DebuggerSyncObject" />.
            </summary>
      <param name="isBreak">The handler that returns a stop flag for the socket.</param>
      <param name="breakAction">The action with the element at stop.</param>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DebuggerSyncObject.IsWaitingOnInput">
      <summary>
        <see langword="true" />, if the debugger is stopped at the entry of the diagram element. Otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DebuggerSyncObject.IsWaitingOnOutput">
      <summary>
        <see langword="true" />, if the debugger is stopped at the exit of the diagram element. Otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DebuggerSyncObject.IsBreakpointAt(StockSharp.Xaml.Diagram.DiagramSocket)">
      <summary>
            To check the breakpoint presence in an element.
            </summary>
      <param name="socket">Socket.</param>
      <returns>
        <see langword="true" />, if there is a breakpoint in the diagram element. Otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DebuggerSyncObject.SetWaitOnNext">
      <summary>
            To set the flag for waiting at the entry of the next diagram element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DebuggerSyncObject.Continue">
      <summary>
            Continue.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DebuggerSyncObject.ContinueAndWaitOnNext">
      <summary>
            To continue and stop at the next element.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.DiagramDebugger">
      <summary>
            The debugger of the diagram composite element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramDebugger.Breakpoints">
      <summary>
            Breakpoints (sockets, on which the data transmission will be stopped).
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramDebugger.IsWaitingOnInput">
      <summary>
        <see langword="true" />, if the debugger is stopped at the entry of the diagram element. Otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramDebugger.IsWaitingOnOutput">
      <summary>
        <see langword="true" />, if the debugger is stopped at the exit of the diagram element. Otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramDebugger.IsWaiting">
      <summary>
        <see langword="true" />, if the debugger is stopped at the entry or exit of the diagram element. Otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramDebugger.CanStepInto">
      <summary>
        <see langword="true" />, if it is possible to go inside of the current diagram element. Otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramDebugger.CanStepOut">
      <summary>
        <see langword="true" />, if it is possible to go outside from the current diagram element. Otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramDebugger.IsEnabled">
      <summary>
        <see langword="true" />, if the debugger is used. Otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramDebugger.Composition">
      <summary>
            Composite element.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramDebugger.CompositionChanged">
      <summary>
            The diagram composite element change event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramDebugger.Break">
      <summary>
            The event of the stop at the breakpoint.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramDebugger.#ctor(StockSharp.Xaml.Diagram.CompositionDiagramElement)">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.DiagramDebugger" />.
            </summary>
      <param name="composition">Composite element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramDebugger.AddBreak(StockSharp.Xaml.Diagram.DiagramSocket)">
      <summary>
            To add a breakpoint in the socket.
            </summary>
      <param name="socket">Socket.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramDebugger.RemoveBreak(StockSharp.Xaml.Diagram.DiagramSocket)">
      <summary>
            To remove the breakpoint from the socket.
            </summary>
      <param name="socket">Socket.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramDebugger.IsBreak(StockSharp.Xaml.Diagram.DiagramSocket)">
      <summary>
            Whether the socket is the breakpoint.
            </summary>
      <param name="socket">Socket.</param>
      <returns>
        <see langword="true" />, if the socket is the breakpoint, otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramDebugger.StepNext">
      <summary>
            To go to the next element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramDebugger.StepInto(StockSharp.Xaml.Diagram.CompositionDiagramElement)">
      <summary>
            To go inside the diagram composite element.
            </summary>
      <param name="composition">Composite element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramDebugger.StepOut(StockSharp.Xaml.Diagram.CompositionDiagramElement)">
      <summary>
            To exit from the diagram composite element.
            </summary>
      <param name="composition">Composite element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramDebugger.Continue">
      <summary>
            Continue.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramDebugger.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramDebugger.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.DiagramEditorControl">
      <summary>
            Graphical component for editing <see cref="T:StockSharp.Xaml.Diagram.CompositionDiagramElement" />.
            </summary>
      <summary>
            DiagramEditorControl
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramEditorControl.CompositionProperty">
      <summary>
        <see cref="T:System.Windows.DependencyProperty" /> for <see cref="P:StockSharp.Xaml.Diagram.DiagramEditorControl.Composition" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramEditorControl.Composition">
      <summary>
            Composite element.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramEditorControl.ShowOverviewProperty">
      <summary>
        <see cref="T:System.Windows.DependencyProperty" /> for <see cref="P:StockSharp.Xaml.Diagram.DiagramEditorControl.ShowOverview" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramEditorControl.ShowOverview">
      <summary>
            To show the review panel.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramEditorControl.ScaleProperty">
      <summary>
        <see cref="T:System.Windows.DependencyProperty" /> for <see cref="P:StockSharp.Xaml.Diagram.DiagramEditorControl.Scale" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramEditorControl.Scale">
      <summary>
            Scale.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramEditorControl.SelectionChanged">
      <summary>
            The event of the element selection on the diagram.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramEditorControl.ElementDoubleClicked">
      <summary>
            The event of the double click on the diagram element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramEditorControl.SelectedElements">
      <summary>
            Selected elements.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramEditorControl.SelectedElement">
      <summary>
            The selected element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramEditorControl.IndicatorTypes">
      <summary>
            The list of available indicators types.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramEditorControl.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.DiagramEditorControl" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramEditorControl.GetSelectionCopyElement">
      <summary>
            To create a new element from the selected elements in the diagram.
            </summary>
      <returns>Composite element.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramEditorControl.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramEditorControl.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramEditorControl.SaveToImage(System.IO.Stream)">
      <summary>
            To save the diagram as an image.
            </summary>
      <param name="file">The content of file.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramEditorControl.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.DiagramElement">
      <summary>
            The diagram element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElement.InputSockets">
      <summary>
            Incoming connections.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElement.OutputSockets">
      <summary>
            Outgoing connections.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElement.SelectedInputSocket">
      <summary>
            Selected input connection.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElement.SelectedOutputSocket">
      <summary>
            Selected output connection.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElement.SelectedSocket">
      <summary>
            Selected connection.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElement.Parameters">
      <summary>
            Diagram element settings.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElement.Category">
      <summary>
            The name of the group which includes a diagram element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElement.Name">
      <summary>
            Name.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElement.Description">
      <summary>
            The diagram element description.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElement.LogLevel">
      <summary>
            The logging level. The default is set to <see cref="F:StockSharp.Logging.LogLevels.Inherit" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElement.ShowParameters">
      <summary>
            Show element parameters in higher order elements.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElement.Strategy">
      <summary>
            The strategy to which the element is attached.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElement.DebuggerSyncObject">
      <summary>
            The synchronization object for the debugger.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramElement.ProcessOutput">
      <summary>
            New data occurring event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramElement.NameChanging">
      <summary>
            The diagram element name change event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramElement.SocketAdded">
      <summary>
            The diagram element connection added event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramElement.SocketRemoved">
      <summary>
            The diagram element connection removed event.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.DiagramElement" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.AddParam``1(System.String,``0)">
      <summary>
            To add a parameter.
            </summary>
      <typeparam name="T">Parameter type.</typeparam>
      <param name="name">Name.</param>
      <param name="value">Value.</param>
      <returns>Parameter.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.AddParam(StockSharp.Xaml.Diagram.IDiagramElementParam)">
      <summary>
            To add a parameter.
            </summary>
      <param name="param">Parameter.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.RemoveParam(StockSharp.Xaml.Diagram.IDiagramElementParam)">
      <summary>
            To remove a parameter.
            </summary>
      <param name="param">Parameter.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.AddInput(System.String,StockSharp.Xaml.Diagram.DiagramSocketType,System.Action{StockSharp.Xaml.Diagram.DiagramSocketValue},System.Int32)">
      <summary>
            To add an incoming connection.
            </summary>
      <param name="name">The connection name.</param>
      <param name="type">Connection type.</param>
      <param name="linkableMax">The maximum number of connections.</param>
      <param name="process">The action is called at the processing of the new incoming value for socket.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.AddOutput(System.String,StockSharp.Xaml.Diagram.DiagramSocketType,System.Int32)">
      <summary>
            To add an outgoing connection.
            </summary>
      <param name="name">The connection name.</param>
      <param name="type">Connection type.</param>
      <param name="linkableMax">The maximum number of connections.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.AddSocket(StockSharp.Xaml.Diagram.DiagramSocket)">
      <summary>
            To add a connection.
            </summary>
      <param name="socket">Connection.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.RemoveSocket(StockSharp.Xaml.Diagram.DiagramSocket)">
      <summary>
            To remove a connection.
            </summary>
      <param name="socket">Connection.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.RemoveSockets">
      <summary>
            To remove all incoming and outgoing connections.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.GetSocket(StockSharp.Xaml.Diagram.DiagramElement)">
      <summary>
            To get the connection by the message sender object.
            </summary>
      <param name="sender">Sender.</param>
      <returns>Connection.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.RaiseProcessOutput(StockSharp.Xaml.Diagram.DiagramElement,System.DateTimeOffset,System.Object)">
      <summary>
            To call the event <see cref="E:StockSharp.Xaml.Diagram.DiagramElement.ProcessOutput" />.
            </summary>
      <param name="sender">Initiator.</param>
      <param name="time">Time.</param>
      <param name="value">Value.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.RaiseProcessOutput(System.DateTimeOffset,System.Object)">
      <summary>
            To call the event <see cref="E:StockSharp.Xaml.Diagram.DiagramElement.ProcessOutput" />.
            </summary>
      <param name="time">Time.</param>
      <param name="value">Value.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.RaiseProcessOutput(System.Object)">
      <summary>
            To call the event <see cref="E:StockSharp.Xaml.Diagram.DiagramElement.ProcessOutput" />.
            </summary>
      <param name="value">Value.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.Init(StockSharp.Xaml.Diagram.DiagramStrategy)">
      <summary>
            To initialize the element.
            </summary>
      <param name="strategy">Strategy.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.OnInit">
      <summary>
            The method is called at initialization of the diagram element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.Process(StockSharp.Xaml.Diagram.DiagramSocketValue)">
      <summary>
            To handle the incoming value.
            </summary>
      <param name="value">Value.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.OnProcess(StockSharp.Xaml.Diagram.DiagramSocket,StockSharp.Xaml.Diagram.DiagramSocketValue)">
      <summary>
            The method is called at the processing of the new incoming value.
            </summary>
      <param name="socket">Socket.</param>
      <param name="value">Value.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.UnInit">
      <summary>
            The deinitialization of the element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.OnUnInit">
      <summary>
            The method is called at deinitialization of the diagram element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.Bind(StockSharp.Xaml.Diagram.DiagramElement,System.String)">
      <summary>
            To subscribe to the diagram element output values processing.
            </summary>
      <param name="source">The diagram element.</param>
      <param name="destPortId">The port identifier to which the element is binded.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.OnBind(StockSharp.Xaml.Diagram.DiagramElement)">
      <summary>
            The method is called at subscription to the processing of diagram element output values.
            </summary>
      <param name="element">The diagram element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.UnBind(StockSharp.Xaml.Diagram.DiagramElement)">
      <summary>
            To unsubscribe from the diagram element output values processing.
            </summary>
      <param name="source">The diagram element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.OnUnBind(StockSharp.Xaml.Diagram.DiagramElement)">
      <summary>
            The method is called at unsubscription from the processing of diagram element output values.
            </summary>
      <param name="element">The diagram element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.Start">
      <summary>
            To start the diagram element algorithm.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.OnStart">
      <summary>
            The method is called at the start of the diagram element algorithm.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.Stop">
      <summary>
            To stop the diagram element algorithm.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.OnStop">
      <summary>
            The method is called at the stop of the diagram element algorithm.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.Reset">
      <summary>
            To reinitialize the diagram element state.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.OnReseted">
      <summary>
            The method is called at re-initialisation of the diagram element state.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramElement.PropertyChanged">
      <summary>
            The diagram element properties value change event.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.RaisePropertyChanged(System.String)">
      <summary>
            To call the diagram element property value change event.
            </summary>
      <param name="propertyName">Property name.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.RaisePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
            To call the diagram element property value change event.
            </summary>
      <param name="sender">Sender.</param>
      <param name="args">Arguments.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.Clone(System.Boolean)">
      <summary>
            Create a copy of <see cref="T:StockSharp.Xaml.Diagram.DiagramElement" />.
            </summary>
      <param name="cloneSockets">To create copies of connections.</param>
      <returns>Copy.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramElement.PropertiesChanged">
      <summary>
            The available properties change event.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElement.RaisePropertiesChanged">
      <summary>
            To call the available properties change event.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.IDiagramElementParam">
      <summary>
            The diagram element parameter.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.IDiagramElementParam.Name">
      <summary>
            Parameter name.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.IDiagramElementParam.DisplayName">
      <summary>
            The displayed name.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.IDiagramElementParam.Description">
      <summary>
            The parameter description.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.IDiagramElementParam.Category">
      <summary>
            Category.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.IDiagramElementParam.Type">
      <summary>
            Parameter type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.IDiagramElementParam.Attributes">
      <summary>
            Attributes.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.IDiagramElementParam.Value">
      <summary>
            The parameter value.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.IDiagramElementParam.IsDefault">
      <summary>
            The default value is specified.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.IDiagramElementParam.IsSealed">
      <summary>
            The sealed parameter.
            </summary>
      <remarks>
            The parameter will not be shown in the parent element.
            </remarks>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.IDiagramElementParam.IsParam">
      <summary>
            The changeable parameter.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.IDiagramElementParam.IgnoreOnSave">
      <summary>
            To ignore when saving.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.DiagramElementParam`1">
      <summary>
            The diagram element parameter.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramElementParam`1.ValueChanging">
      <summary>
            The parameter value change start event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramElementParam`1.ValueChanged">
      <summary>
            The parameter value change event.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElementParam`1.Name">
      <summary>
            Parameter name.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElementParam`1.DisplayName">
      <summary>
            The displayed name.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElementParam`1.Description">
      <summary>
            The parameter description.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElementParam`1.Category">
      <summary>
            Category.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElementParam`1.Type">
      <summary>
            Parameter type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElementParam`1.Attributes">
      <summary>
            Attributes.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElementParam`1.Value">
      <summary>
            The parameter value.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElementParam`1.IsDefault">
      <summary>
            The default value is specified.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElementParam`1.IsSealed">
      <summary>
            The sealed parameter.
            </summary>
      <remarks>
            The parameter will not be shown in the parent element.
            </remarks>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElementParam`1.IsParam">
      <summary>
            The changeable parameter.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElementParam`1.IgnoreOnSave">
      <summary>
            To ignore when saving.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElementParam`1.SaveHandler">
      <summary>
            The parameter value saving handler.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramElementParam`1.LoadHandler">
      <summary>
            The parameter value loading handler.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElementParam`1.op_Implicit(StockSharp.Xaml.Diagram.DiagramElementParam{`0})~`0">
      <summary>
            To reduce the parameter value to the object <typeparamref name="T" />.
            </summary>
      <param name="param">Parameter.</param>
      <returns>Object <typeparamref name="T" />.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElementParam`1.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElementParam`1.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElementParam`1.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.DiagramElementParameters">
      <summary>
            Current values of diagram element parameters.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElementParameters.#ctor(StockSharp.Xaml.Diagram.DiagramElement)">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.DiagramElementParameters" />.
            </summary>
      <param name="element">The diagram element.</param>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.DiagramElementParamHelper">
      <summary>
            Extension class for <see cref="T:StockSharp.Xaml.Diagram.IDiagramElementParam" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElementParamHelper.SetExpandable``1(StockSharp.Xaml.Diagram.DiagramElementParam{``0})">
      <summary>
            To set the <see cref="T:System.ComponentModel.ExpandableObjectConverter" /> attribute for the diagram element parameter.
            </summary>
      <typeparam name="T">The diagram element parameter type.</typeparam>
      <param name="param">The diagram element parameter.</param>
      <returns>The diagram element parameter.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElementParamHelper.SetEditor``1(StockSharp.Xaml.Diagram.DiagramElementParam{``0},System.Attribute)">
      <summary>
            To add the attribute <see cref="T:System.Attribute" /> for the diagram element parameter.
            </summary>
      <typeparam name="T">The diagram element parameter type.</typeparam>
      <param name="param">The diagram element parameter.</param>
      <param name="editor">Attribute.</param>
      <returns>The diagram element parameter.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElementParamHelper.SetDisplay``1(StockSharp.Xaml.Diagram.DiagramElementParam{``0},System.String,System.String,System.String,System.Int32)">
      <summary>
            To set the <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute" /> attribute for the diagram element parameter.
            </summary>
      <typeparam name="T">The diagram element parameter type.</typeparam>
      <param name="param">The diagram element parameter.</param>
      <param name="groupName">The category of the diagram element parameter.</param>
      <param name="displayName">The display name.</param>
      <param name="desciption">The description of the diagram element parameter.</param>
      <param name="order">The property order.</param>
      <returns>The diagram element parameter.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElementParamHelper.SetReadOnly``1(StockSharp.Xaml.Diagram.DiagramElementParam{``0},System.Boolean)">
      <summary>
            To set the <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> attribute for the diagram element parameter.
            </summary>
      <typeparam name="T">The diagram element parameter type.</typeparam>
      <param name="param">The diagram element parameter.</param>
      <param name="readOnly">Read-only.</param>
      <returns>The diagram element parameter.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElementParamHelper.SetBrowsable``1(StockSharp.Xaml.Diagram.DiagramElementParam{``0},System.Boolean)">
      <summary>
            To set the <see cref="T:System.ComponentModel.BrowsableAttribute" /> attribute for the diagram element parameter.
            </summary>
      <typeparam name="T">The diagram element parameter type.</typeparam>
      <param name="param">The diagram element parameter.</param>
      <param name="browsable">Visible parameter.</param>
      <returns>The diagram element parameter.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElementParamHelper.SetOnValueChangingHandler``1(StockSharp.Xaml.Diagram.DiagramElementParam{``0},System.Action{``0,``0})">
      <summary>
            To set the handler at the start of the value change for the diagram element parameter.
            </summary>
      <typeparam name="T">The diagram element parameter type.</typeparam>
      <param name="param">The diagram element parameter.</param>
      <param name="handler">The handler.</param>
      <returns>The diagram element parameter.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElementParamHelper.SetOnValueChangedHandler``1(StockSharp.Xaml.Diagram.DiagramElementParam{``0},System.Action{``0})">
      <summary>
            To set the handler to the value change for the diagram element parameter.
            </summary>
      <typeparam name="T">The diagram element parameter type.</typeparam>
      <param name="param">The diagram element parameter.</param>
      <param name="handler">The handler of the diagram element value change.</param>
      <returns>The diagram element parameter.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElementParamHelper.SetSaveLoadHandlers``1(StockSharp.Xaml.Diagram.DiagramElementParam{``0},System.Func{``0,Ecng.Serialization.SettingsStorage},System.Func{Ecng.Serialization.SettingsStorage,``0})">
      <summary>
            To set the handler of saving/loading for the diagram element parameter.
            </summary>
      <typeparam name="T">The diagram element parameter type.</typeparam>
      <param name="param">The diagram element parameter.</param>
      <param name="save">The handler for the parameter saving.</param>
      <param name="load">The handler for the parameter loading.</param>
      <returns>The diagram element parameter.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElementParamHelper.SetColorSaveLoadHandlers(StockSharp.Xaml.Diagram.DiagramElementParam{System.Windows.Media.Color})">
      <summary>
            To set the handler of color saving/loading for the diagram element parameter.
            </summary>
      <param name="param">The diagram element parameter.</param>
      <returns>The diagram element parameter.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElementParamHelper.SetSealed``1(StockSharp.Xaml.Diagram.DiagramElementParam{``0})">
      <summary>
            To modify diagram element parameter to sealed.
            </summary>
      <typeparam name="T">The diagram element parameter type.</typeparam>
      <param name="param">The diagram element parameter.</param>
      <returns>The diagram element parameter.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElementParamHelper.SetIsParam``1(StockSharp.Xaml.Diagram.DiagramElementParam{``0})">
      <summary>
            To modify diagram element parameter to changeable.
            </summary>
      <typeparam name="T">The diagram element parameter type.</typeparam>
      <param name="param">The diagram element parameter.</param>
      <returns>The diagram element parameter.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramElementParamHelper.RemoveAttribute``2(StockSharp.Xaml.Diagram.DiagramElementParam{``0})">
      <summary>
            To remove the attribute for the diagram element parameter.
            </summary>
      <typeparam name="T">The diagram element parameter type.</typeparam>
      <typeparam name="TParam">The attribute type.</typeparam>
      <param name="param">The diagram element parameter.</param>
      <returns>The diagram element parameter.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.DiagramPaletteControl">
      <summary>
            The graphical component to display available <see cref="T:StockSharp.Xaml.Diagram.DiagramElement" />.
            </summary>
      <summary>
            DiagramPaletteControl
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramPaletteControl.PaletteElements">
      <summary>
            Available elements.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramPaletteControl.PaletteElement">
      <summary>
            The selected element in the Toolbox.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramPaletteControl.PaletteSelectionChanged">
      <summary>
            The event of the diagram element selection in the Toolbox .
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramPaletteControl.PaletteElementDoubleClicked">
      <summary>
            The event of the double click on the element in the Toolbox .
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramPaletteControl.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.DiagramPaletteControl" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramPaletteControl.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.DiagramSocketDirection">
      <summary>
            Directions of connections.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramSocketDirection.In">
      <summary>
            Incoming.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramSocketDirection.Out">
      <summary>
            Outgoing.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.DiagramSocket">
      <summary>
            Connection.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocket.Id">
      <summary>
            The connection identifier.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocket.Name">
      <summary>
            The connection name.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocket.Type">
      <summary>
            Connection type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocket.Directon">
      <summary>
            The connection direction.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocket.LinkableMaximum">
      <summary>
            The maximum number of connections.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocket.Value">
      <summary>
            The current value.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocket.Parent">
      <summary>
            The socket parent element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocket.IsBreak">
      <summary>
            Is socket has break.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocket.IsBreakActive">
      <summary>
            Is socket break active.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramSocket.Connected">
      <summary>
            The event of the socket connection with another one.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramSocket.Disconnected">
      <summary>
            The socket disconnection event.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocket.GetValue">
      <summary>
            To get the value for the connection.
            </summary>
      <returns>Value.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocket.GetValue``1">
      <summary>
            To get the value for the connection.
            </summary>
      <typeparam name="T">Data type.</typeparam>
      <returns>Value.</returns>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramSocket.PropertyChanged">
      <summary>
            The connection properties value change event.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocket.OnPropertyChanged(System.String)">
      <summary>
            To call the connection property value change event.
            </summary>
      <param name="propertyName">Property name.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocket.Clone">
      <summary>
            Create a copy of <see cref="T:StockSharp.Xaml.Diagram.DiagramSocket" />.
            </summary>
      <returns>Copy.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocket.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.DiagramSocketListBox">
      <summary>
            The graphical component to display the diagram element connections list.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramSocketListBox.CanSelectProperty">
      <summary>
        <see cref="T:System.Windows.DependencyProperty" /> for <see cref="P:StockSharp.Xaml.Diagram.DiagramSocketListBox.CanSelect" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocketListBox.CanSelect">
      <summary>
            Can select sockets.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocketListBox.GetContainerForItemOverride">
      <summary>
            Creates or identifies the element used to display a specified item.
            </summary>
      <returns>A <see cref="T:System.Windows.Controls.ListBoxItem" />.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.DiagramSocketListBoxItem">
      <summary>
            The graphical component for the list element to display the diagram element connections.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocketListBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when the user presses the right mouse button over the <see cref="T:System.Windows.Controls.ListBoxItem" />.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.DiagramSocketType">
      <summary>
            Connection type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocketType.Name">
      <summary>
            The name of the connection type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocketType.Type">
      <summary>
            Connection type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocketType.Color">
      <summary>
            The connection color.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocketType.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.DiagramSocketType" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocketType.#ctor(System.Type,System.String,System.Windows.Media.Color)">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.DiagramSocketType" />.
            </summary>
      <param name="type">Data type.</param>
      <param name="name">The name of the connection type.</param>
      <param name="color">The connection color.</param>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocketType.AllTypes">
      <summary>
            All available connection types for elements.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocketType.RegisterType``1(System.String,System.Windows.Media.Color)">
      <summary>
            To register the connection type.
            </summary>
      <param name="name">The name of the connection type.</param>
      <param name="color">The connection color.</param>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramSocketType.PropertyChanged">
      <summary>
            The connection properties value change event.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocketType.OnPropertyChanged(System.String)">
      <summary>
            To call the connection property value change event.
            </summary>
      <param name="propertyName">Property name.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocketType.Clone">
      <summary>
            Create a copy of <see cref="T:StockSharp.Xaml.Diagram.DiagramSocketType" />.
            </summary>
      <returns>Copy.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocketType.OnEquals(StockSharp.Xaml.Diagram.DiagramSocketType)">
      <summary>
            Compare <see cref="T:StockSharp.Xaml.Diagram.DiagramSocketType" /> on the equivalence.
            </summary>
      <param name="other">Another value with which to compare.</param>
      <returns>
        <see langword="true" />, if the specified object is equal to the current object, otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocketType.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocketType.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocketType.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramSocketType.Any">
      <summary>
            Unknown data type.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramSocketType.Security">
      <summary>
            Security.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramSocketType.MarketDepth">
      <summary>
            Market depth.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramSocketType.Quote">
      <summary>
            Quote.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramSocketType.Candles">
      <summary>
            Candles.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramSocketType.IndicatorValue">
      <summary>
            Indicator value.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramSocketType.Order">
      <summary>
            Order.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramSocketType.MyTrade">
      <summary>
            Own trade.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramSocketType.Bool">
      <summary>
            Flag.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramSocketType.Unit">
      <summary>
            Numeric value.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramSocketType.Comparable">
      <summary>
            Comparable values.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.DiagramSocketType.Portfolio">
      <summary>
            Portfolio.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.DiagramSocketValue">
      <summary>
            The value for the connection.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocketValue.Sender">
      <summary>
            The element sender of the value.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocketValue.Socket">
      <summary>
            Connection.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocketValue.Time">
      <summary>
            Time.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramSocketValue.Value">
      <summary>
            Value.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocketValue.#ctor(StockSharp.Xaml.Diagram.DiagramElement,System.DateTimeOffset,StockSharp.Xaml.Diagram.DiagramSocket)">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.DiagramSocketValue" />.
            </summary>
      <param name="sender">The element sender of the value.</param>
      <param name="time">Time.</param>
      <param name="socket">Connection.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocketValue.GetValue``1">
      <summary>
            To get the value for the connection.
            </summary>
      <typeparam name="T">Value type.</typeparam>
      <returns>Value.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramSocketValue.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.DiagramStrategy">
      <summary>
            The strategy whose algorithm is presented in the form of a diagram.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.DiagramStrategy.Composition">
      <summary>
            The strategy diagram.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramStrategy.CompositionChanged">
      <summary>
            The strategy diagram change event .
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramStrategy.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.DiagramStrategy" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramStrategy.OnStarted">
      <summary>
            The method is called when the <see cref="M:StockSharp.Algo.Strategies.Strategy.Start" /> method has been called and the <see cref="P:StockSharp.Algo.Strategies.Strategy.ProcessState" /> state has been taken the <see cref="F:StockSharp.Algo.ProcessStates.Started" /> value.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramStrategy.OnStopped">
      <summary>
            The method is called when the <see cref="P:StockSharp.Algo.Strategies.Strategy.ProcessState" /> process state has been taken the <see cref="F:StockSharp.Algo.ProcessStates.Stopped" /> value.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramStrategy.OnReseted">
      <summary>
            It is called from the <see cref="M:StockSharp.Algo.Strategies.Strategy.Reset" /> method.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramStrategy.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramStrategy.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramStrategy.Clone">
      <summary>
            Create a copy of <see cref="T:StockSharp.Xaml.Diagram.DiagramStrategy" />.
            </summary>
      <returns>Copy.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramStrategy.NeedShowProperty(System.ComponentModel.PropertyDescriptor)">
      <summary>
            It returns <see langword="true" />, if the property is to be displayed in the settings.
            </summary>
      <param name="propertyDescriptor">The property description.</param>
      <returns>
        <see langword="true" />, if necessary to show the property, otherwise <see langword="false" />.</returns>
    </member>
    <member name="E:StockSharp.Xaml.Diagram.DiagramStrategy.PropertiesChanged">
      <summary>
            The available properties change event.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.DiagramStrategy.RaisePropertiesChanged">
      <summary>
            To call the available properties change event.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.CandleSourceDiagramElement">
      <summary>
            Candles source element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.CandleSourceDiagramElement.Series">
      <summary>
            Candles series.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.CandleSourceDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.CandleSourceDiagramElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.CandleSourceDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.CandleSourceDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.CandleSourceDiagramElement.OnStop">
      <summary>
            The method is called at the stop of the diagram element algorithm.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.ChartDiagramElement">
      <summary>
            Chart panel element (candles display area, indicators, orders and trades).
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.ChartDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.ChartDiagramElement" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.ChartDiagramElement.RemoveAxis(StockSharp.Xaml.Charting.ChartAxis)">
      <summary>
            To remove the axis.
            </summary>
      <param name="axis">The axis.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.ChartDiagramElement.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.ChartDiagramElement.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.ChartDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.ChartDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.ChartDiagramElement.OnUnInit">
      <summary>
            The method is called at deinitialization of the diagram element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.ChartDiagramElement.OnStart">
      <summary>
            The method is called at the start of the diagram element algorithm.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.ChartDiagramElement.OnStop">
      <summary>
            The method is called at the stop of the diagram element algorithm.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.ChartDiagramElement.OnReseted">
      <summary>
            The method is called at re-initialisation of the diagram element state.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.CheckWorkingTimeDiagramElement">
      <summary>
            Working time verification element for a specified security.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.CheckWorkingTimeDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.CheckWorkingTimeDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.CheckWorkingTimeDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.CheckWorkingTimeDiagramElement" />.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.ComparisonDiagramElement">
      <summary>
            Two values comparison element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.ComparisonDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.ComparisonDiagramElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.ComparisonDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.ComparisonDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.ComparisonDiagramElement.OnStart">
      <summary>
            The method is called at the start of the diagram element algorithm.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.ComparisonDiagramElement.OnStop">
      <summary>
            The method is called at the stop of the diagram element algorithm.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.IndexerDiagramElement">
      <summary>
            The element of collection or dictionary.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.IndexerDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.IndexerDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.IndexerDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.IndexerDiagramElement" />.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.IndicatorDiagramElement">
      <summary>
            Indicator element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.IndicatorDiagramElement.IndicatorType">
      <summary>
            Indicator type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.IndicatorDiagramElement.Indicator">
      <summary>
            The indicator parameters.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.IndicatorDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.IndicatorDiagramElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.IndicatorDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.IndicatorDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.IndicatorDiagramElement.OnInit">
      <summary>
            The method is called at initialization of the diagram element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.IndicatorDiagramElement.OnReseted">
      <summary>
            The method is called at re-initialisation of the diagram element state.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.IndicatorDiagramElement.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.IndicatorDiagramElement.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.LogicalConditionDiagramElement">
      <summary>
            Logical condition element.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.LogicalConditionDiagramElement.Condition">
      <summary>
            The logical condition type.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.Elements.LogicalConditionDiagramElement.Condition.And">
      <summary>
            AND.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.Elements.LogicalConditionDiagramElement.Condition.Or">
      <summary>
            OR.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Diagram.Elements.LogicalConditionDiagramElement.Condition.Xor">
      <summary>
            Exclusive OR.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.LogicalConditionDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.LogicalConditionDiagramElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.LogicalConditionDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.LogicalConditionDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.LogicalConditionDiagramElement.OnStart">
      <summary>
            The method is called at the start of the diagram element algorithm.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.LogicalConditionDiagramElement.OnStop">
      <summary>
            The method is called at the stop of the diagram element algorithm.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.LogicOneParamFunctionDiagramElement">
      <summary>
            Logical function with one argument element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.LogicOneParamFunctionDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.LogicOneParamFunctionDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.LogicOneParamFunctionDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.OneParamFunctionDiagramElement" />.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.MarketDepthDiagramElement">
      <summary>
            Security market depth changes receiving element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.MarketDepthDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.MarketDepthDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.MarketDepthDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.MarketDepthDiagramElement" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.MarketDepthDiagramElement.OnStop">
      <summary>
            The method is called at the stop of the diagram element algorithm.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.OneParamFunctionDiagramElement">
      <summary>
            Formula with one argument element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.OneParamFunctionDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.OneParamFunctionDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.OneParamFunctionDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.OneParamFunctionDiagramElement" />.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.TwoParamFunctionDiagramElement">
      <summary>
            Formula with two arguments element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.TwoParamFunctionDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.TwoParamFunctionDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.TwoParamFunctionDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.TwoParamFunctionDiagramElement" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.TwoParamFunctionDiagramElement.OnStart">
      <summary>
            The method is called at the start of the diagram element algorithm.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.OpenPositionDiagramElement">
      <summary>
            Position opening element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.OpenPositionDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.OpenPositionDiagramElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.OpenPositionDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.OpenPositionDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.OpenPositionDiagramElement.OnStop">
      <summary>
            The method is called at the stop of the diagram element algorithm.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.OrderTradesDiagramElement">
      <summary>
            Trades per order element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.OrderTradesDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.OrderTradesDiagramElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.OrderTradesDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.OrderTradesDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.PartDiagramElement">
      <summary>
            Composite value of a complex object receiving element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.PartDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.PartDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.PartDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.PartDiagramElement" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.PartDiagramElement.TypeChanged">
      <summary>
            The method is called when the data type is changed.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.PartDiagramElement.OnProcess(StockSharp.Xaml.Diagram.DiagramSocketValue)">
      <summary>
            The method is called at the processing of the new incoming value.
            </summary>
      <param name="value">The processed value.</param>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.PassThroughDiagramElement">
      <summary>
            Combined values element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.PassThroughDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.PassThroughDiagramElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.PassThroughDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.PassThroughDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.PassThroughDiagramElement.TypeChanged">
      <summary>
            The method is called when the data type is changed.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.PassThroughDiagramElement.OnProcess(StockSharp.Xaml.Diagram.DiagramSocketValue)">
      <summary>
            The method is called at the processing of the new incoming value.
            </summary>
      <param name="value">The processed value.</param>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.PositionDiagramElement">
      <summary>
            Position element (for security and money) for the specified portfolio.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.PositionDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.PositionDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.PositionDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.PositionDiagramElement" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.PositionDiagramElement.OnStart">
      <summary>
            The method is called at the start of the diagram element algorithm.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.PositionDiagramElement.OnStop">
      <summary>
            The method is called at the stop of the diagram element algorithm.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.PreviousValueDiagramElement">
      <summary>
            Previous value receiving element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.PreviousValueDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.PreviousValueDiagramElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.PreviousValueDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.PreviousValueDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.PreviousValueDiagramElement.OnStart">
      <summary>
            The method is called at the start of the diagram element algorithm.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.ProtectPositionDiagramElement">
      <summary>
            Open position protection element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.ProtectPositionDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.ProtectPositionDiagramElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.ProtectPositionDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.ProtectPositionDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.ProtectPositionDiagramElement.OnStart">
      <summary>
            The method is called at the start of the diagram element algorithm.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.ProtectPositionDiagramElement.OnStop">
      <summary>
            The method is called at the stop of the diagram element algorithm.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.SecurityDiagramElement">
      <summary>
            Security changes receiving element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.SecurityDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.SecurityDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.SecurityDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.SecurityDiagramElement" />.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.StrategyTradesDiagramElement">
      <summary>
            Strategy trades element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.StrategyTradesDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.OrderTradesDiagramElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.StrategyTradesDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.StrategyTradesDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.StrategyTradesDiagramElement.OnStart">
      <summary>
            The method is called at the start of the diagram element algorithm.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.TypedDiagramElement`1">
      <summary>
            The diagram element with the changeable data type.
            </summary>
      <typeparam name="T">Type of element.</typeparam>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.TypedDiagramElement`1.Type">
      <summary>
            Data type.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.TypedDiagramElement`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.TypedDiagramElement`1" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.TypedDiagramElement`1.SetTypes(System.Collections.Generic.IEnumerable{StockSharp.Xaml.Diagram.DiagramSocketType})">
      <summary>
            To set available data types.
            </summary>
      <param name="types">Data type.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.TypedDiagramElement`1.TypeChanged">
      <summary>
            The method is called when the data type is changed.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.TypedDiagramElement`1.OnProcess(StockSharp.Xaml.Diagram.DiagramSocketValue)">
      <summary>
            The method is called at the processing of the new incoming value.
            </summary>
      <param name="value">The processed value.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.TypedDiagramElement`1.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.VariableDiagramElement">
      <summary>
            Value storage element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.VariableDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.VariableDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.VariableDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.VariableDiagramElement" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.VariableDiagramElement.TypeChanged">
      <summary>
            The method is called when the data type is changed.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.VariableDiagramElement.OnReseted">
      <summary>
            The method is called at re-initialisation of the diagram element state.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.VariableDiagramElement.OnStart">
      <summary>
            The method is called at the start of the diagram element algorithm.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.VariableDiagramElement.OnProcess(StockSharp.Xaml.Diagram.DiagramSocketValue)">
      <summary>
            The method is called at the processing of the new incoming value.
            </summary>
      <param name="value">The processed value.</param>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.Elements.AlertDiagramElement">
      <summary>
            Notification element (sound, window etc.) for speceific market events.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.Elements.AlertDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.Elements.ChartDiagramElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.AlertDiagramElement.TypeId">
      <summary>
            The unique identifier of the diagram element type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.Elements.AlertDiagramElement.Icon">
      <summary>
            Icon.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.ExportDiagramElement">
      <summary>
            The exported composite element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.ExportDiagramElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.ExportDiagramElement" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.ExportDiagramElement.#ctor(StockSharp.Xaml.Diagram.CompositionDiagramElement)">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Diagram.ExportDiagramElement" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.ExportDiagramElement.OnStart">
      <summary>
            The method is called at the start of the diagram element algorithm.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.ExportDiagramElement.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.ExportDiagramElement.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.IndicatorTypeItemsSource">
      <summary>
            The graphical component for the indicator type choosing.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Diagram.IndicatorTypeItemsSource.IndicatorTypes">
      <summary>
            List of available indicators types.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.IndicatorTypeItemsSource.GetValues">
      <summary>
            To get a list of available indicators types.
            </summary>
      <returns>The indicators types list.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Diagram.SocketTypesSource">
      <summary>
            The graphical component for the connection type choosing.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Diagram.SocketTypesSource.GetValues">
      <summary>
            To get a list of available connection types.
            </summary>
      <returns>The list of connection types.</returns>
    </member>
  </members>
</doc>