<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.Glacier</name>
    </assembly>
    <members>
        <member name="T:Amazon.Glacier.AmazonGlacierClient">
            <summary>
            Implementation for accessing AmazonGlacier.
             
            <para>Amazon Glacier is a storage solution for "cold data."</para> <para>Amazon Glacier is an extremely low-cost storage service that
            provides secure, durable, and easy-to-use storage for data backup and archival. With Amazon Glacier, customers can store their data cost
            effectively for months, years, or decades. Amazon Glacier also enables customers to offload the administrative burdens of operating and
            scaling storage to AWS, so they don't have to worry about capacity planning, hardware provisioning, data replication, hardware failure and
            recovery, or time-consuming hardware migrations.</para> <para>Amazon Glacier is a great storage choice when low storage cost is paramount,
            your data is rarely retrieved, and retrieval latency of several hours is acceptable. If your application requires fast or frequent access to
            your data, consider using Amazon S3. For more information, go to Amazon Simple Storage Service (Amazon S3).</para> <para>You can store any
            kind of data in any format. There is no maximum limit on the total amount of data you can store in Amazon Glacier. </para> <para>If you are
            a first-time user of Amazon Glacier, we recommend that you begin by reading the following sections in the <i>Amazon Glacier Developer
            Guide</i> :</para>
            <ul>
            <li> <para> What is Amazon Glacier - This section of the Developer Guide describes the underlying data model, the operations it supports,
            and the AWS SDKs that you can use to interact with the service.</para> </li>
            <li> <para> Getting Started with Amazon Glacier - The Getting Started section walks you through the process of creating a vault, uploading
            archives, creating jobs to download archives, retrieving the job output, and deleting archives.</para> </li>
            
            </ul>
            </summary>
             <summary>
             Implementation for accessing Glacier
            
             Amazon Glacier is a storage solution for "cold data."
             
              
             <para>
             Amazon Glacier is an extremely low-cost storage service that provides secure, durable,
             and easy-to-use storage for data backup and archival. With Amazon Glacier, customers
             can store their data cost effectively for months, years, or decades. Amazon Glacier
             also enables customers to offload the administrative burdens of operating and scaling
             storage to AWS, so they don't have to worry about capacity planning, hardware provisioning,
             data replication, hardware failure and recovery, or time-consuming hardware migrations.
             </para>
              
             <para>
             Amazon Glacier is a great storage choice when low storage cost is paramount, your
             data is rarely retrieved, and retrieval latency of several hours is acceptable. If
             your application requires fast or frequent access to your data, consider using Amazon
             S3. For more information, go to <a href="http://aws.amazon.com/s3/">Amazon Simple
             Storage Service (Amazon S3)</a>.
             </para>
              
             <para>
             You can store any kind of data in any format. There is no maximum limit on the total
             amount of data you can store in Amazon Glacier. 
             </para>
              
             <para>
             If you are a first-time user of Amazon Glacier, we recommend that you begin by reading
             the following sections in the <i>Amazon Glacier Developer Guide</i>:
             </para>
              <ul> <li>
             <para>
             <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/introduction.html">What
             is Amazon Glacier</a> - This section of the Developer Guide describes the underlying
             data model, the operations it supports, and the AWS SDKs that you can use to interact
             with the service.
             </para>
             </li> <li>
             <para>
             <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-getting-started.html">Getting
             Started with Amazon Glacier</a> - The Getting Started section walks you through the
             process of creating a vault, uploading archives, creating jobs to download archives,
             retrieving the job output, and deleting archives.
             </para>
             </li> </ul>
             </summary>
        </member>
        <member name="T:Amazon.Glacier.IAmazonGlacier">
             <summary>
             Interface for accessing Glacier
            
             Amazon Glacier is a storage solution for "cold data."
             
              
             <para>
             Amazon Glacier is an extremely low-cost storage service that provides secure, durable,
             and easy-to-use storage for data backup and archival. With Amazon Glacier, customers
             can store their data cost effectively for months, years, or decades. Amazon Glacier
             also enables customers to offload the administrative burdens of operating and scaling
             storage to AWS, so they don't have to worry about capacity planning, hardware provisioning,
             data replication, hardware failure and recovery, or time-consuming hardware migrations.
             </para>
              
             <para>
             Amazon Glacier is a great storage choice when low storage cost is paramount, your
             data is rarely retrieved, and retrieval latency of several hours is acceptable. If
             your application requires fast or frequent access to your data, consider using Amazon
             S3. For more information, go to <a href="http://aws.amazon.com/s3/">Amazon Simple
             Storage Service (Amazon S3)</a>.
             </para>
              
             <para>
             You can store any kind of data in any format. There is no maximum limit on the total
             amount of data you can store in Amazon Glacier. 
             </para>
              
             <para>
             If you are a first-time user of Amazon Glacier, we recommend that you begin by reading
             the following sections in the <i>Amazon Glacier Developer Guide</i>:
             </para>
              <ul> <li>
             <para>
             <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/introduction.html">What
             is Amazon Glacier</a> - This section of the Developer Guide describes the underlying
             data model, the operations it supports, and the AWS SDKs that you can use to interact
             with the service.
             </para>
             </li> <li>
             <para>
             <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-getting-started.html">Getting
             Started with Amazon Glacier</a> - The Getting Started section walks you through the
             process of creating a vault, uploading archives, creating jobs to download archives,
             retrieving the job output, and deleting archives.
             </para>
             </li> </ul>
             </summary>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.AbortMultipartUpload(Amazon.Glacier.Model.AbortMultipartUploadRequest)">
            <summary>
            This operation aborts a multipart upload identified by the upload ID.
            
             
            <para>
            After the Abort Multipart Upload request succeeds, you cannot upload any more parts
            to the multipart upload or complete the multipart upload. Aborting a completed upload
            fails. However, aborting an already-aborted upload will succeed, for a short time.
            For more information about uploading a part and completing a multipart upload, see
            <a>UploadMultipartPart</a> and <a>CompleteMultipartUpload</a>.
            </para>
             
            <para>
            This operation is idempotent.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working
            with Archives in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-abort-upload.html">Abort
            Multipart Upload</a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AbortMultipartUpload service method.</param>
            
            <returns>The response from the AbortMultipartUpload service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginAbortMultipartUpload(Amazon.Glacier.Model.AbortMultipartUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the AbortMultipartUpload operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AbortMultipartUpload operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndAbortMultipartUpload
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndAbortMultipartUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  AbortMultipartUpload operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginAbortMultipartUpload.</param>
            
            <returns>Returns a  AbortMultipartUploadResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.AbortVaultLock(Amazon.Glacier.Model.AbortVaultLockRequest)">
            <summary>
            This operation aborts the vault locking process if the vault lock is not in the <code>Locked</code>
            state. If the vault lock is in the <code>Locked</code> state when this operation is
            requested, the operation returns an <code>AccessDeniedException</code> error. Aborting
            the vault locking process removes the vault lock policy from the specified vault.
            
            
             
            <para>
            A vault lock is put into the <code>InProgress</code> state by calling <a>InitiateVaultLock</a>.
            A vault lock is put into the <code>Locked</code> state by calling <a>CompleteVaultLock</a>.
            You can get the state of a vault lock by calling <a>GetVaultLock</a>. For more information
            about the vault locking process, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html">Amazon
            Glacier Vault Lock</a>. For more information about vault lock policies, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock-policy.html">Amazon
            Glacier Access Control with Vault Lock Policies</a>. 
            </para>
             
            <para>
            This operation is idempotent. You can successfully invoke this operation multiple
            times, if the vault lock is in the <code>InProgress</code> state or if there is no
            policy associated with the vault.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AbortVaultLock service method.</param>
            
            <returns>The response from the AbortVaultLock service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginAbortVaultLock(Amazon.Glacier.Model.AbortVaultLockRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the AbortVaultLock operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AbortVaultLock operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndAbortVaultLock
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndAbortVaultLock(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  AbortVaultLock operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginAbortVaultLock.</param>
            
            <returns>Returns a  AbortVaultLockResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.AddTagsToVault(Amazon.Glacier.Model.AddTagsToVaultRequest)">
            <summary>
            This operation adds the specified tags to a vault. Each tag is composed of a key and
            a value. Each vault can have up to 10 tags. If your request would cause the tag limit
            for the vault to be exceeded, the operation throws the <code>LimitExceededException</code>
            error. If a tag already exists on the vault under a specified key, the existing key
            value will be overwritten. For more information about tags, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html">Tagging
            Amazon Glacier Resources</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddTagsToVault service method.</param>
            
            <returns>The response from the AddTagsToVault service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.LimitExceededException">
            Returned if the request results in a vault or account limit being exceeded.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginAddTagsToVault(Amazon.Glacier.Model.AddTagsToVaultRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the AddTagsToVault operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddTagsToVault operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndAddTagsToVault
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndAddTagsToVault(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  AddTagsToVault operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginAddTagsToVault.</param>
            
            <returns>Returns a  AddTagsToVaultResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.CompleteMultipartUpload(Amazon.Glacier.Model.CompleteMultipartUploadRequest)">
            <summary>
            You call this operation to inform Amazon Glacier that all the archive parts have been
            uploaded and that Amazon Glacier can now assemble the archive from the uploaded parts.
            After assembling and saving the archive to the vault, Amazon Glacier returns the URI
            path of the newly created archive resource. Using the URI path, you can then access
            the archive. After you upload an archive, you should save the archive ID returned
            to retrieve the archive at a later point. You can also get the vault inventory to
            obtain a list of archive IDs in a vault. For more information, see <a>InitiateJob</a>.
            
             
            <para>
            In the request, you must include the computed SHA256 tree hash of the entire archive
            you have uploaded. For information about computing a SHA256 tree hash, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html">Computing
            Checksums</a>. On the server side, Amazon Glacier also constructs the SHA256 tree
            hash of the assembled archive. If the values match, Amazon Glacier saves the archive
            to the vault; otherwise, it returns an error, and the operation fails. The <a>ListParts</a>
            operation returns a list of parts uploaded for a specific multipart upload. It includes
            checksum information for each uploaded part that can be used to debug a bad checksum
            issue.
            </para>
             
            <para>
            Additionally, Amazon Glacier also checks for any missing content ranges when assembling
            the archive, if missing content ranges are found, Amazon Glacier returns an error
            and the operation fails. 
            </para>
             
            <para>
            Complete Multipart Upload is an idempotent operation. After your first successful
            complete multipart upload, if you call the operation again within a short period,
            the operation will succeed and return the same archive ID. This is useful in the event
            you experience a network issue that causes an aborted connection or receive a 500
            server error, in which case you can repeat your Complete Multipart Upload request
            and get the same archive ID without creating duplicate archives. Note, however, that
            after the multipart upload completes, you cannot call the List Parts operation and
            the multipart upload will not appear in List Multipart Uploads response, even if idempotent
            complete is possible.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html">Uploading
            Large Archives in Parts (Multipart Upload)</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-complete-upload.html">Complete
            Multipart Upload</a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CompleteMultipartUpload service method.</param>
            
            <returns>The response from the CompleteMultipartUpload service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginCompleteMultipartUpload(Amazon.Glacier.Model.CompleteMultipartUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CompleteMultipartUpload operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CompleteMultipartUpload operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCompleteMultipartUpload
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndCompleteMultipartUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CompleteMultipartUpload operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCompleteMultipartUpload.</param>
            
            <returns>Returns a  CompleteMultipartUploadResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.CompleteVaultLock(Amazon.Glacier.Model.CompleteVaultLockRequest)">
            <summary>
            This operation completes the vault locking process by transitioning the vault lock
            from the <code>InProgress</code> state to the <code>Locked</code> state, which causes
            the vault lock policy to become unchangeable. A vault lock is put into the <code>InProgress</code>
            state by calling <a>InitiateVaultLock</a>. You can obtain the state of the vault lock
            by calling <a>GetVaultLock</a>. For more information about the vault locking process,
            <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html">Amazon
            Glacier Vault Lock</a>. 
            
             
            <para>
            This operation is idempotent. This request is always successful if the vault lock
            is in the <code>Locked</code> state and the provided lock ID matches the lock ID originally
            used to lock the vault.
            </para>
             
            <para>
            If an invalid lock ID is passed in the request when the vault lock is in the <code>Locked</code>
            state, the operation returns an <code>AccessDeniedException</code> error. If an invalid
            lock ID is passed in the request when the vault lock is in the <code>InProgress</code>
            state, the operation throws an <code>InvalidParameter</code> error.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CompleteVaultLock service method.</param>
            
            <returns>The response from the CompleteVaultLock service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginCompleteVaultLock(Amazon.Glacier.Model.CompleteVaultLockRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CompleteVaultLock operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CompleteVaultLock operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCompleteVaultLock
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndCompleteVaultLock(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CompleteVaultLock operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCompleteVaultLock.</param>
            
            <returns>Returns a  CompleteVaultLockResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.CreateVault(Amazon.Glacier.Model.CreateVaultRequest)">
            <summary>
            This operation creates a new vault with the specified name. The name of the vault
            must be unique within a region for an AWS account. You can create up to 1,000 vaults
            per account. If you need to create more vaults, contact Amazon Glacier.
            
             
            <para>
            You must use the following guidelines when naming a vault. 
            </para>
             
            <para>
             <ul> <li> 
            <para>
             Names can be between 1 and 255 characters long. 
            </para>
             </li> <li> 
            <para>
            Allowed characters are a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen), and '.' (period).
            </para>
             </li> </ul> 
            </para>
             
            <para>
            This operation is idempotent.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/creating-vaults.html">Creating
            a Vault in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-put.html">Create
            Vault </a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateVault service method.</param>
            
            <returns>The response from the CreateVault service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.LimitExceededException">
            Returned if the request results in a vault or account limit being exceeded.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginCreateVault(Amazon.Glacier.Model.CreateVaultRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateVault operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVault operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateVault
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndCreateVault(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateVault operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateVault.</param>
            
            <returns>Returns a  CreateVaultResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.DeleteArchive(Amazon.Glacier.Model.DeleteArchiveRequest)">
            <summary>
            This operation deletes an archive from a vault. Subsequent requests to initiate a
            retrieval of this archive will fail. Archive retrievals that are in progress for this
            archive ID may or may not succeed according to the following scenarios:
            
             <ul> <li>If the archive retrieval job is actively preparing the data for download
            when Amazon Glacier receives the delete archive request, the archival retrieval operation
            might fail. </li> <li>If the archive retrieval job has successfully prepared the archive
            for download when Amazon Glacier receives the delete archive request, you will be
            able to download the output. </li> </ul> 
            <para>
            This operation is idempotent. Attempting to delete an already-deleted archive does
            not result in an error. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/deleting-an-archive.html">Deleting
            an Archive in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-delete.html">Delete
            Archive</a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteArchive service method.</param>
            
            <returns>The response from the DeleteArchive service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginDeleteArchive(Amazon.Glacier.Model.DeleteArchiveRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteArchive operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteArchive operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteArchive
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndDeleteArchive(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteArchive operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteArchive.</param>
            
            <returns>Returns a  DeleteArchiveResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.DeleteVault(Amazon.Glacier.Model.DeleteVaultRequest)">
            <summary>
            This operation deletes a vault. Amazon Glacier will delete a vault only if there are
            no archives in the vault as of the last inventory and there have been no writes to
            the vault since the last inventory. If either of these conditions is not satisfied,
            the vault deletion fails (that is, the vault is not removed) and Amazon Glacier returns
            an error. You can use <a>DescribeVault</a> to return the number of archives in a vault,
            and you can use <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html">Initiate
            a Job (POST jobs)</a> to initiate a new inventory retrieval for a vault. The inventory
            contains the archive IDs you use to delete archives using <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-delete.html">Delete
            Archive (DELETE archive)</a>.
            
             
            <para>
            This operation is idempotent.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/deleting-vaults.html">Deleting
            a Vault in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-delete.html">Delete
            Vault </a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVault service method.</param>
            
            <returns>The response from the DeleteVault service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginDeleteVault(Amazon.Glacier.Model.DeleteVaultRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteVault operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVault operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteVault
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndDeleteVault(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteVault operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteVault.</param>
            
            <returns>Returns a  DeleteVaultResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.DeleteVaultAccessPolicy(Amazon.Glacier.Model.DeleteVaultAccessPolicyRequest)">
            <summary>
            This operation deletes the access policy associated with the specified vault. The
            operation is eventually consistent; that is, it might take some time for Amazon Glacier
            to completely remove the access policy, and you might still see the effect of the
            policy for a short time after you send the delete request.
            
             
            <para>
            This operation is idempotent. You can invoke delete multiple times, even if there
            is no policy associated with the vault. For more information about vault access policies,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html">Amazon
            Glacier Access Control with Vault Access Policies</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVaultAccessPolicy service method.</param>
            
            <returns>The response from the DeleteVaultAccessPolicy service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginDeleteVaultAccessPolicy(Amazon.Glacier.Model.DeleteVaultAccessPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteVaultAccessPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVaultAccessPolicy operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteVaultAccessPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndDeleteVaultAccessPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteVaultAccessPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteVaultAccessPolicy.</param>
            
            <returns>Returns a  DeleteVaultAccessPolicyResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.DeleteVaultNotifications(Amazon.Glacier.Model.DeleteVaultNotificationsRequest)">
            <summary>
            This operation deletes the notification configuration set for a vault. The operation
            is eventually consistent; that is, it might take some time for Amazon Glacier to completely
            disable the notifications and you might still receive some notifications for a short
            time after you send the delete request. 
            
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring
            Vault Notifications in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-delete.html">Delete
            Vault Notification Configuration </a> in the Amazon Glacier Developer Guide. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVaultNotifications service method.</param>
            
            <returns>The response from the DeleteVaultNotifications service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginDeleteVaultNotifications(Amazon.Glacier.Model.DeleteVaultNotificationsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteVaultNotifications operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVaultNotifications operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteVaultNotifications
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndDeleteVaultNotifications(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteVaultNotifications operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteVaultNotifications.</param>
            
            <returns>Returns a  DeleteVaultNotificationsResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.DescribeJob(Amazon.Glacier.Model.DescribeJobRequest)">
            <summary>
            This operation returns information about a job you previously initiated, including
            the job initiation date, the user who initiated the job, the job status code/message
            and the Amazon SNS topic to notify after Amazon Glacier completes the job. For more
            information about initiating a job, see <a>InitiateJob</a>. 
            
             <note>
            <para>
            This operation enables you to check the status of your job. However, it is strongly
            recommended that you set up an Amazon SNS topic and specify it in your initiate job
            request so that Amazon Glacier can notify the topic after it completes the job. 
            </para>
            </note> 
            <para>
            A job ID will not expire for at least 24 hours after Amazon Glacier completes the
            job. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For information about the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-describe-job-get.html">Working
            with Archives in Amazon Glacier</a> in the <i>Amazon Glacier Developer Guide</i>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeJob service method.</param>
            
            <returns>The response from the DescribeJob service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginDescribeJob(Amazon.Glacier.Model.DescribeJobRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeJob operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeJob operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeJob
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndDescribeJob(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeJob operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeJob.</param>
            
            <returns>Returns a  DescribeJobResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.DescribeVault(Amazon.Glacier.Model.DescribeVaultRequest)">
            <summary>
            This operation returns information about a vault, including the vault's Amazon Resource
            Name (ARN), the date the vault was created, the number of archives it contains, and
            the total size of all the archives in the vault. The number of archives and their
            total size are as of the last inventory generation. This means that if you add or
            remove an archive from a vault, and then immediately use Describe Vault, the change
            in contents will not be immediately reflected. If you want to retrieve the latest
            inventory of the vault, use <a>InitiateJob</a>. Amazon Glacier generates vault inventories
            approximately daily. For more information, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-inventory.html">Downloading
            a Vault Inventory in Amazon Glacier</a>. 
            
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/retrieving-vault-info.html">Retrieving
            Vault Metadata in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-get.html">Describe
            Vault </a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVault service method.</param>
            
            <returns>The response from the DescribeVault service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginDescribeVault(Amazon.Glacier.Model.DescribeVaultRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeVault operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVault operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeVault
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndDescribeVault(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeVault operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeVault.</param>
            
            <returns>Returns a  DescribeVaultResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.GetDataRetrievalPolicy(Amazon.Glacier.Model.GetDataRetrievalPolicyRequest)">
            <summary>
            This operation returns the current data retrieval policy for the account and region
            specified in the GET request. For more information about data retrieval policies,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/data-retrieval-policy.html">Amazon
            Glacier Data Retrieval Policies</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataRetrievalPolicy service method.</param>
            
            <returns>The response from the GetDataRetrievalPolicy service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginGetDataRetrievalPolicy(Amazon.Glacier.Model.GetDataRetrievalPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetDataRetrievalPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetDataRetrievalPolicy operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetDataRetrievalPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndGetDataRetrievalPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetDataRetrievalPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetDataRetrievalPolicy.</param>
            
            <returns>Returns a  GetDataRetrievalPolicyResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.GetJobOutput(Amazon.Glacier.Model.GetJobOutputRequest)">
            <summary>
            This operation downloads the output of the job you initiated using <a>InitiateJob</a>.
            Depending on the job type you specified when you initiated the job, the output will
            be either the content of an archive or a vault inventory.
            
             
            <para>
            A job ID will not expire for at least 24 hours after Amazon Glacier completes the
            job. That is, you can download the job output within the 24 hours period after Amazon
            Glacier completes the job.
            </para>
             
            <para>
            If the job output is large, then you can use the <code>Range</code> request header
            to retrieve a portion of the output. This allows you to download the entire output
            in smaller chunks of bytes. For example, suppose you have 1 GB of job output you want
            to download and you decide to download 128 MB chunks of data at a time, which is a
            total of eight Get Job Output requests. You use the following process to download
            the job output:
            </para>
             <ol> <li> 
            <para>
            Download a 128 MB chunk of output by specifying the appropriate byte range using the
            <code>Range</code> header.
            </para>
             </li> <li> 
            <para>
            Along with the data, the response includes a SHA256 tree hash of the payload. You
            compute the checksum of the payload on the client and compare it with the checksum
            you received in the response to ensure you received all the expected data.
            </para>
             </li> <li> 
            <para>
            Repeat steps 1 and 2 for all the eight 128 MB chunks of output data, each time specifying
            the appropriate byte range.
            </para>
             </li> <li> 
            <para>
            After downloading all the parts of the job output, you have a list of eight checksum
            values. Compute the tree hash of these values to find the checksum of the entire output.
            Using the <a>DescribeJob</a> API, obtain job information of the job that provided
            you the output. The response includes the checksum of the entire archive stored in
            Amazon Glacier. You compare this value with the checksum you computed to ensure you
            have downloaded the entire archive content with no errors.
            </para>
             </li> </ol> 
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-inventory.html">Downloading
            a Vault Inventory</a>, <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/downloading-an-archive.html">Downloading
            an Archive</a>, and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-job-output-get.html">Get
            Job Output </a> 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetJobOutput service method.</param>
            
            <returns>The response from the GetJobOutput service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginGetJobOutput(Amazon.Glacier.Model.GetJobOutputRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetJobOutput operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetJobOutput operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetJobOutput
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndGetJobOutput(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetJobOutput operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetJobOutput.</param>
            
            <returns>Returns a  GetJobOutputResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.GetVaultAccessPolicy(Amazon.Glacier.Model.GetVaultAccessPolicyRequest)">
            <summary>
            This operation retrieves the <code>access-policy</code> subresource set on the vault;
            for more information on setting this subresource, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-SetVaultAccessPolicy.html">Set
            Vault Access Policy (PUT access-policy)</a>. If there is no access policy set on the
            vault, the operation returns a <code>404 Not found</code> error. For more information
            about vault access policies, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html">Amazon
            Glacier Access Control with Vault Access Policies</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetVaultAccessPolicy service method.</param>
            
            <returns>The response from the GetVaultAccessPolicy service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginGetVaultAccessPolicy(Amazon.Glacier.Model.GetVaultAccessPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetVaultAccessPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetVaultAccessPolicy operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetVaultAccessPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndGetVaultAccessPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetVaultAccessPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetVaultAccessPolicy.</param>
            
            <returns>Returns a  GetVaultAccessPolicyResult from Glacier.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Amazon.Glacier.IAmazonGlacier.GetVaultLock(Amazon.Glacier.Model.GetVaultLockRequest)" -->
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginGetVaultLock(Amazon.Glacier.Model.GetVaultLockRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetVaultLock operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetVaultLock operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetVaultLock
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndGetVaultLock(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetVaultLock operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetVaultLock.</param>
            
            <returns>Returns a  GetVaultLockResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.GetVaultNotifications(Amazon.Glacier.Model.GetVaultNotificationsRequest)">
            <summary>
            This operation retrieves the <code class="code">notification-configuration</code>
            subresource of the specified vault.
            
             
            <para>
            For information about setting a notification configuration on a vault, see <a>SetVaultNotifications</a>.
            If a notification configuration for a vault is not set, the operation returns a <code class="code">404 Not Found</code> error. For more information about vault notifications,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring
            Vault Notifications in Amazon Glacier</a>. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring
            Vault Notifications in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-get.html">Get
            Vault Notification Configuration </a> in the <i>Amazon Glacier Developer Guide</i>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetVaultNotifications service method.</param>
            
            <returns>The response from the GetVaultNotifications service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginGetVaultNotifications(Amazon.Glacier.Model.GetVaultNotificationsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetVaultNotifications operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetVaultNotifications operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetVaultNotifications
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndGetVaultNotifications(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetVaultNotifications operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetVaultNotifications.</param>
            
            <returns>Returns a  GetVaultNotificationsResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.InitiateJob(Amazon.Glacier.Model.InitiateJobRequest)">
            <summary>
            This operation initiates a job of the specified type. In this release, you can initiate
            a job to retrieve either an archive or a vault inventory (a list of archives in a
            vault). 
            
             
            <para>
            Retrieving data from Amazon Glacier is a two-step process: 
            </para>
             <ol> <li> 
            <para>
            Initiate a retrieval job.
            </para>
             <note>
            <para>
            A data retrieval policy can cause your initiate retrieval job request to fail with
            a PolicyEnforcedException exception. For more information about data retrieval policies,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/data-retrieval-policy.html">Amazon
            Glacier Data Retrieval Policies</a>. For more information about the PolicyEnforcedException
            exception, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-error-responses.html">Error
            Responses</a>.
            </para>
             </note> </li> <li>
            <para>
            After the job completes, download the bytes.
            </para>
            </li> </ol> 
            <para>
            The retrieval request is executed asynchronously. When you initiate a retrieval job,
            Amazon Glacier creates a job and returns a job ID in the response. When Amazon Glacier
            completes the job, you can get the job output (archive or inventory data). For information
            about getting job output, see <a>GetJobOutput</a> operation. 
            </para>
             
            <para>
            The job must complete before you can get its output. To determine when a job is complete,
            you have the following options:
            </para>
             <ul> <li> 
            <para>
            <b>Use Amazon SNS Notification</b> You can specify an Amazon Simple Notification Service
            (Amazon SNS) topic to which Amazon Glacier can post a notification after the job is
            completed. You can specify an SNS topic per job request. The notification is sent
            only after Amazon Glacier completes the job. In addition to specifying an SNS topic
            per job request, you can configure vault notifications for a vault so that job notifications
            are always sent. For more information, see <a>SetVaultNotifications</a>.
            </para>
             </li> <li> 
            <para>
            <b>Get job details</b> You can make a <a>DescribeJob</a> request to obtain job status
            information while a job is in progress. However, it is more efficient to use an Amazon
            SNS notification to determine when a job is complete.
            </para>
             </li> </ul> <note>
            <para>
            The information you get via notification is same that you get by calling <a>DescribeJob</a>.
            </para>
            </note> 
            <para>
            If for a specific event, you add both the notification configuration on the vault
            and also specify an SNS topic in your initiate job request, Amazon Glacier sends both
            notifications. For more information, see <a>SetVaultNotifications</a>.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            <b>About the Vault Inventory</b>
            </para>
             
            <para>
            Amazon Glacier prepares an inventory for each vault periodically, every 24 hours.
            When you initiate a job for a vault inventory, Amazon Glacier returns the last inventory
            for the vault. The inventory data you get might be up to a day or two days old. Also,
            the initiate inventory job might take some time to complete before you can download
            the vault inventory. So you do not want to retrieve a vault inventory for each vault
            operation. However, in some scenarios, you might find the vault inventory useful.
            For example, when you upload an archive, you can provide an archive description but
            not an archive name. Amazon Glacier provides you a unique archive ID, an opaque string
            of characters. So, you might maintain your own database that maps archive names to
            their corresponding Amazon Glacier assigned archive IDs. You might find the vault
            inventory useful in the event you need to reconcile information in your database with
            the actual vault inventory. 
            </para>
             
            <para>
            <b>Range Inventory Retrieval</b>
            </para>
             
            <para>
            You can limit the number of inventory items retrieved by filtering on the archive
            creation date or by setting a limit.
            </para>
             
            <para>
            <i>Filtering by Archive Creation Date</i>
            </para>
             
            <para>
            You can retrieve inventory items for archives created between <code>StartDate</code>
            and <code>EndDate</code> by specifying values for these parameters in the <b>InitiateJob</b>
            request. Archives created on or after the <code>StartDate</code> and before the <code>EndDate</code>
            will be returned. If you only provide the <code>StartDate</code> without the <code>EndDate</code>,
            you will retrieve the inventory for all archives created on or after the <code>StartDate</code>.
            If you only provide the <code>EndDate</code> without the <code>StartDate</code>, you
            will get back the inventory for all archives created before the <code>EndDate</code>.
            </para>
             
            <para>
            <i>Limiting Inventory Items per Retrieval</i>
            </para>
             
            <para>
            You can limit the number of inventory items returned by setting the <code>Limit</code>
            parameter in the <b>InitiateJob</b> request. The inventory job output will contain
            inventory items up to the specified <code>Limit</code>. If there are more inventory
            items available, the result is paginated. After a job is complete you can use the
            <a>DescribeJob</a> operation to get a marker that you use in a subsequent <b>InitiateJob</b>
            request. The marker will indicate the starting point to retrieve the next set of inventory
            items. You can page through your entire inventory by repeatedly making <b>InitiateJob</b>
            requests with the marker from the previous <b>DescribeJob</b> output, until you get
            a marker from <b>DescribeJob</b> that returns null, indicating that there are no more
            inventory items available.
            </para>
             
            <para>
            You can use the <code>Limit</code> parameter together with the date range parameters.
            </para>
             
            <para>
            <b>About Ranged Archive Retrieval</b>
            </para>
             
            <para>
             You can initiate an archive retrieval for the whole archive or a range of the archive.
            In the case of ranged archive retrieval, you specify a byte range to return or the
            whole archive. The range specified must be megabyte (MB) aligned, that is the range
            start value must be divisible by 1 MB and range end value plus 1 must be divisible
            by 1 MB or equal the end of the archive. If the ranged archive retrieval is not megabyte
            aligned, this operation returns a 400 response. Furthermore, to ensure you get checksum
            values for data you download using Get Job Output API, the range must be tree hash
            aligned. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html">Initiate
            a Job</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-inventory.html">Downloading
            a Vault Inventory</a> 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the InitiateJob service method.</param>
            
            <returns>The response from the InitiateJob service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.PolicyEnforcedException">
            Returned if a retrieval job would exceed the current data policy's retrieval rate
            limit. For more information about data retrieval policies,
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginInitiateJob(Amazon.Glacier.Model.InitiateJobRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the InitiateJob operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the InitiateJob operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndInitiateJob
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndInitiateJob(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  InitiateJob operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginInitiateJob.</param>
            
            <returns>Returns a  InitiateJobResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.InitiateMultipartUpload(Amazon.Glacier.Model.InitiateMultipartUploadRequest)">
            <summary>
            This operation initiates a multipart upload. Amazon Glacier creates a multipart upload
            resource and returns its ID in the response. The multipart upload ID is used in subsequent
            requests to upload parts of an archive (see <a>UploadMultipartPart</a>).
            
             
            <para>
            When you initiate a multipart upload, you specify the part size in number of bytes.
            The part size must be a megabyte (1024 KB) multiplied by a power of 2-for example,
            1048576 (1 MB), 2097152 (2 MB), 4194304 (4 MB), 8388608 (8 MB), and so on. The minimum
            allowable part size is 1 MB, and the maximum is 4 GB.
            </para>
             
            <para>
            Every part you upload to this resource (see <a>UploadMultipartPart</a>), except the
            last one, must have the same size. The last one can be the same size or smaller. For
            example, suppose you want to upload a 16.2 MB file. If you initiate the multipart
            upload with a part size of 4 MB, you will upload four parts of 4 MB each and one part
            of 0.2 MB. 
            </para>
             <note>
            <para>
            You don't need to know the size of the archive when you start a multipart upload because
            Amazon Glacier does not require you to specify the overall archive size.
            </para>
            </note> 
            <para>
            After you complete the multipart upload, Amazon Glacier removes the multipart upload
            resource referenced by the ID. Amazon Glacier also removes the multipart upload resource
            if you cancel the multipart upload or it may be removed if there is no activity for
            a period of 24 hours.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html">Uploading
            Large Archives in Parts (Multipart Upload)</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-initiate-upload.html">Initiate
            Multipart Upload</a> in the <i>Amazon Glacier Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the InitiateMultipartUpload service method.</param>
            
            <returns>The response from the InitiateMultipartUpload service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginInitiateMultipartUpload(Amazon.Glacier.Model.InitiateMultipartUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the InitiateMultipartUpload operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the InitiateMultipartUpload operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndInitiateMultipartUpload
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndInitiateMultipartUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  InitiateMultipartUpload operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginInitiateMultipartUpload.</param>
            
            <returns>Returns a  InitiateMultipartUploadResult from Glacier.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Amazon.Glacier.IAmazonGlacier.InitiateVaultLock(Amazon.Glacier.Model.InitiateVaultLockRequest)" -->
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginInitiateVaultLock(Amazon.Glacier.Model.InitiateVaultLockRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the InitiateVaultLock operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the InitiateVaultLock operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndInitiateVaultLock
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndInitiateVaultLock(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  InitiateVaultLock operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginInitiateVaultLock.</param>
            
            <returns>Returns a  InitiateVaultLockResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.ListJobs(Amazon.Glacier.Model.ListJobsRequest)">
            <summary>
            This operation lists jobs for a vault, including jobs that are in-progress and jobs
            that have recently finished. 
            
             <note>
            <para>
            Amazon Glacier retains recently completed jobs for a period before deleting them;
            however, it eventually removes completed jobs. The output of completed jobs can be
            retrieved. Retaining completed jobs for a period of time after they have completed
            enables you to get a job output in the event you miss the job completion notification
            or your first attempt to download it fails. For example, suppose you start an archive
            retrieval job to download an archive. After the job completes, you start to download
            the archive but encounter a network error. In this scenario, you can retry and download
            the archive while the job exists. 
            </para>
            </note> 
            <para>
            To retrieve an archive or retrieve a vault inventory from Amazon Glacier, you first
            initiate a job, and after the job completes, you download the data. For an archive
            retrieval, the output is the archive data, and for an inventory retrieval, it is the
            inventory list. The List Job operation returns a list of these jobs sorted by job
            initiation time.
            </para>
             
            <para>
            This List Jobs operation supports pagination. By default, this operation returns up
            to 1,000 jobs in the response. You should always check the response for a <code>marker</code>
            at which to continue the list; if there are no more items the <code>marker</code>
            is <code>null</code>. To return a list of jobs that begins at a specific job, set
            the <code>marker</code> request parameter to the value you obtained from a previous
            List Jobs request. You can also limit the number of jobs returned in the response
            by specifying the <code>limit</code> parameter in the request.
            </para>
             
            <para>
            Additionally, you can filter the jobs list returned by specifying an optional <code>statuscode</code>
            (InProgress, Succeeded, or Failed) and <code>completed</code> (true, false) parameter.
            The <code>statuscode</code> allows you to specify that only jobs that match a specified
            status are returned. The <code>completed</code> parameter allows you to specify that
            only jobs in a specific completion state are returned.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-jobs-get.html">List
            Jobs </a> 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListJobs service method.</param>
            
            <returns>The response from the ListJobs service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginListJobs(Amazon.Glacier.Model.ListJobsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListJobs operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListJobs operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListJobs
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndListJobs(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListJobs operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListJobs.</param>
            
            <returns>Returns a  ListJobsResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.ListMultipartUploads(Amazon.Glacier.Model.ListMultipartUploadsRequest)">
            <summary>
            This operation lists in-progress multipart uploads for the specified vault. An in-progress
            multipart upload is a multipart upload that has been initiated by an <a>InitiateMultipartUpload</a>
            request, but has not yet been completed or aborted. The list returned in the List
            Multipart Upload response has no guaranteed order. 
            
             
            <para>
            The List Multipart Uploads operation supports pagination. By default, this operation
            returns up to 1,000 multipart uploads in the response. You should always check the
            response for a <code>marker</code> at which to continue the list; if there are no
            more items the <code>marker</code> is <code>null</code>. To return a list of multipart
            uploads that begins at a specific upload, set the <code>marker</code> request parameter
            to the value you obtained from a previous List Multipart Upload request. You can also
            limit the number of uploads returned in the response by specifying the <code>limit</code>
            parameter in the request.
            </para>
             
            <para>
            Note the difference between this operation and listing parts (<a>ListParts</a>). The
            List Multipart Uploads operation lists all multipart uploads for a vault and does
            not require a multipart upload ID. The List Parts operation requires a multipart upload
            ID since parts are associated with a single upload.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working
            with Archives in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-list-uploads.html">List
            Multipart Uploads </a> in the <i>Amazon Glacier Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListMultipartUploads service method.</param>
            
            <returns>The response from the ListMultipartUploads service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginListMultipartUploads(Amazon.Glacier.Model.ListMultipartUploadsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListMultipartUploads operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMultipartUploads operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListMultipartUploads
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndListMultipartUploads(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListMultipartUploads operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListMultipartUploads.</param>
            
            <returns>Returns a  ListMultipartUploadsResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.ListParts(Amazon.Glacier.Model.ListPartsRequest)">
            <summary>
            This operation lists the parts of an archive that have been uploaded in a specific
            multipart upload. You can make this request at any time during an in-progress multipart
            upload before you complete the upload (see <a>CompleteMultipartUpload</a>. List Parts
            returns an error for completed uploads. The list returned in the List Parts response
            is sorted by part range. 
            
             
            <para>
            The List Parts operation supports pagination. By default, this operation returns up
            to 1,000 uploaded parts in the response. You should always check the response for
            a <code class="code">marker</code> at which to continue the list; if there are no
            more items the <code class="code">marker</code> is <code class="code">null</code>.
            To return a list of parts that begins at a specific part, set the <code>marker</code>
            request parameter to the value you obtained from a previous List Parts request. You
            can also limit the number of parts returned in the response by specifying the <code>limit</code>
            parameter in the request. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working
            with Archives in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-list-parts.html">List
            Parts</a> in the <i>Amazon Glacier Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListParts service method.</param>
            
            <returns>The response from the ListParts service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginListParts(Amazon.Glacier.Model.ListPartsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListParts operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListParts operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListParts
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndListParts(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListParts operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListParts.</param>
            
            <returns>Returns a  ListPartsResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.ListTagsForVault(Amazon.Glacier.Model.ListTagsForVaultRequest)">
            <summary>
            This operation lists all the tags attached to a vault. The operation returns an empty
            map if there are no tags. For more information about tags, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html">Tagging
            Amazon Glacier Resources</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForVault service method.</param>
            
            <returns>The response from the ListTagsForVault service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginListTagsForVault(Amazon.Glacier.Model.ListTagsForVaultRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListTagsForVault operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTagsForVault operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListTagsForVault
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndListTagsForVault(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListTagsForVault operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListTagsForVault.</param>
            
            <returns>Returns a  ListTagsForVaultResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.ListVaults">
            <summary>
            This operation lists all vaults owned by the calling user's account. The list returned
            in the response is ASCII-sorted by vault name. 
            
             
            <para>
            By default, this operation returns up to 1,000 items. If there are more vaults to
            list, the response <code class="code">marker</code> field contains the vault Amazon
            Resource Name (ARN) at which to continue the list with a new List Vaults request;
            otherwise, the <code class="code">marker</code> field is <code class="code">null</code>.
            To return a list of vaults that begins at a specific vault, set the <code class="code">marker</code>
            request parameter to the vault ARN you obtained from a previous List Vaults request.
            You can also limit the number of vaults returned in the response by specifying the
            <code class="code">limit</code> parameter in the request. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/retrieving-vault-info.html">Retrieving
            Vault Metadata in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vaults-get.html">List
            Vaults </a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            
            <returns>The response from the ListVaults service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.ListVaults(Amazon.Glacier.Model.ListVaultsRequest)">
            <summary>
            This operation lists all vaults owned by the calling user's account. The list returned
            in the response is ASCII-sorted by vault name. 
            
             
            <para>
            By default, this operation returns up to 1,000 items. If there are more vaults to
            list, the response <code class="code">marker</code> field contains the vault Amazon
            Resource Name (ARN) at which to continue the list with a new List Vaults request;
            otherwise, the <code class="code">marker</code> field is <code class="code">null</code>.
            To return a list of vaults that begins at a specific vault, set the <code class="code">marker</code>
            request parameter to the vault ARN you obtained from a previous List Vaults request.
            You can also limit the number of vaults returned in the response by specifying the
            <code class="code">limit</code> parameter in the request. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/retrieving-vault-info.html">Retrieving
            Vault Metadata in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vaults-get.html">List
            Vaults </a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListVaults service method.</param>
            
            <returns>The response from the ListVaults service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginListVaults(Amazon.Glacier.Model.ListVaultsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListVaults operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListVaults operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListVaults
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndListVaults(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListVaults operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListVaults.</param>
            
            <returns>Returns a  ListVaultsResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.RemoveTagsFromVault(Amazon.Glacier.Model.RemoveTagsFromVaultRequest)">
            <summary>
            This operation removes one or more tags from the set of tags attached to a vault.
            For more information about tags, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html">Tagging
            Amazon Glacier Resources</a>. This operation is idempotent. The operation will be
            successful, even if there are no tags attached to the vault.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromVault service method.</param>
            
            <returns>The response from the RemoveTagsFromVault service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginRemoveTagsFromVault(Amazon.Glacier.Model.RemoveTagsFromVaultRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the RemoveTagsFromVault operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromVault operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndRemoveTagsFromVault
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndRemoveTagsFromVault(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  RemoveTagsFromVault operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginRemoveTagsFromVault.</param>
            
            <returns>Returns a  RemoveTagsFromVaultResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.SetDataRetrievalPolicy(Amazon.Glacier.Model.SetDataRetrievalPolicyRequest)">
            <summary>
            This operation sets and then enacts a data retrieval policy in the region specified
            in the PUT request. You can set one policy per region for an AWS account. The policy
            is enacted within a few minutes of a successful PUT operation. 
            
             
            <para>
            The set policy operation does not affect retrieval jobs that were in progress before
            the policy was enacted. For more information about data retrieval policies, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/data-retrieval-policy.html">Amazon
            Glacier Data Retrieval Policies</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetDataRetrievalPolicy service method.</param>
            
            <returns>The response from the SetDataRetrievalPolicy service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginSetDataRetrievalPolicy(Amazon.Glacier.Model.SetDataRetrievalPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetDataRetrievalPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetDataRetrievalPolicy operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetDataRetrievalPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndSetDataRetrievalPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetDataRetrievalPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetDataRetrievalPolicy.</param>
            
            <returns>Returns a  SetDataRetrievalPolicyResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.SetVaultAccessPolicy(Amazon.Glacier.Model.SetVaultAccessPolicyRequest)">
            <summary>
            This operation configures an access policy for a vault and will overwrite an existing
            policy. To configure a vault access policy, send a PUT request to the <code>access-policy</code>
            subresource of the vault. An access policy is specific to a vault and is also called
            a vault subresource. You can set one access policy per vault and the policy can be
            up to 20 KB in size. For more information about vault access policies, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html">Amazon
            Glacier Access Control with Vault Access Policies</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetVaultAccessPolicy service method.</param>
            
            <returns>The response from the SetVaultAccessPolicy service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginSetVaultAccessPolicy(Amazon.Glacier.Model.SetVaultAccessPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetVaultAccessPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetVaultAccessPolicy operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetVaultAccessPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndSetVaultAccessPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetVaultAccessPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetVaultAccessPolicy.</param>
            
            <returns>Returns a  SetVaultAccessPolicyResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.SetVaultNotifications(Amazon.Glacier.Model.SetVaultNotificationsRequest)">
            <summary>
            This operation configures notifications that will be sent when specific events happen
            to a vault. By default, you don't get any notifications. 
            
             
            <para>
            To configure vault notifications, send a PUT request to the <code class="code">notification-configuration</code>
            subresource of the vault. The request should include a JSON document that provides
            an Amazon SNS topic and specific events for which you want Amazon Glacier to send
            notifications to the topic.
            </para>
             
            <para>
            Amazon SNS topics must grant permission to the vault to be allowed to publish notifications
            to the topic. You can configure a vault to publish a notification for the following
            vault events:
            </para>
             <ul> <li> <b>ArchiveRetrievalCompleted</b> This event occurs when a job that was
            initiated for an archive retrieval is completed (<a>InitiateJob</a>). The status of
            the completed job can be "Succeeded" or "Failed". The notification sent to the SNS
            topic is the same output as returned from <a>DescribeJob</a>. </li> <li> <b>InventoryRetrievalCompleted</b>
            This event occurs when a job that was initiated for an inventory retrieval is completed
            (<a>InitiateJob</a>). The status of the completed job can be "Succeeded" or "Failed".
            The notification sent to the SNS topic is the same output as returned from <a>DescribeJob</a>.
            </li> </ul> 
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring
            Vault Notifications in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-put.html">Set
            Vault Notification Configuration </a> in the <i>Amazon Glacier Developer Guide</i>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetVaultNotifications service method.</param>
            
            <returns>The response from the SetVaultNotifications service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginSetVaultNotifications(Amazon.Glacier.Model.SetVaultNotificationsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetVaultNotifications operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetVaultNotifications operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetVaultNotifications
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndSetVaultNotifications(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetVaultNotifications operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetVaultNotifications.</param>
            
            <returns>Returns a  SetVaultNotificationsResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.UploadArchive(Amazon.Glacier.Model.UploadArchiveRequest)">
            <summary>
            This operation adds an archive to a vault. This is a synchronous operation, and for
            a successful upload, your data is durably persisted. Amazon Glacier returns the archive
            ID in the <code class="code">x-amz-archive-id</code> header of the response. 
            
             
            <para>
            You must use the archive ID to access your data in Amazon Glacier. After you upload
            an archive, you should save the archive ID returned so that you can retrieve or delete
            the archive later. Besides saving the archive ID, you can also index it and give it
            a friendly name to allow for better searching. You can also use the optional archive
            description field to specify how the archive is referred to in an external index of
            archives, such as you might create in Amazon DynamoDB. You can also get the vault
            inventory to obtain a list of archive IDs in a vault. For more information, see <a>InitiateJob</a>.
            
            </para>
             
            <para>
            You must provide a SHA256 tree hash of the data you are uploading. For information
            about computing a SHA256 tree hash, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html">Computing
            Checksums</a>. 
            </para>
             
            <para>
            You can optionally specify an archive description of up to 1,024 printable ASCII characters.
            You can get the archive description when you either retrieve the archive or get the
            vault inventory. For more information, see <a>InitiateJob</a>. Amazon Glacier does
            not interpret the description in any way. An archive description does not need to
            be unique. You cannot use the description to retrieve or sort the archive list. 
            </para>
             
            <para>
            Archives are immutable. After you upload an archive, you cannot edit the archive or
            its description. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-an-archive.html">Uploading
            an Archive in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-post.html">Upload
            Archive</a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UploadArchive service method.</param>
            
            <returns>The response from the UploadArchive service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.RequestTimeoutException">
            Returned if, when uploading an archive, Amazon Glacier times out while receiving the
            upload.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginUploadArchive(Amazon.Glacier.Model.UploadArchiveRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UploadArchive operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadArchive operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUploadArchive
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndUploadArchive(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UploadArchive operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUploadArchive.</param>
            
            <returns>Returns a  UploadArchiveResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.UploadMultipartPart(Amazon.Glacier.Model.UploadMultipartPartRequest)">
            <summary>
            This operation uploads a part of an archive. You can upload archive parts in any order.
            You can also upload them in parallel. You can upload up to 10,000 parts for a multipart
            upload.
            
             
            <para>
            Amazon Glacier rejects your upload part request if any of the following conditions
            is true:
            </para>
             <ul> <li> 
            <para>
            <b>SHA256 tree hash does not match</b>To ensure that part data is not corrupted in
            transmission, you compute a SHA256 tree hash of the part and include it in your request.
            Upon receiving the part data, Amazon Glacier also computes a SHA256 tree hash. If
            these hash values don't match, the operation fails. For information about computing
            a SHA256 tree hash, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html">Computing
            Checksums</a>.
            </para>
             </li> <li> 
            <para>
            <b>Part size does not match</b>The size of each part except the last must match the
            size specified in the corresponding <a>InitiateMultipartUpload</a> request. The size
            of the last part must be the same size as, or smaller than, the specified size.
            </para>
             <note>
            <para>
            If you upload a part whose size is smaller than the part size you specified in your
            initiate multipart upload request and that part is not the last part, then the upload
            part request will succeed. However, the subsequent Complete Multipart Upload request
            will fail.
            </para>
            </note> </li> <li> <b>Range does not align</b>The byte range value in the request
            does not align with the part size specified in the corresponding initiate request.
            For example, if you specify a part size of 4194304 bytes (4 MB), then 0 to 4194303
            bytes (4 MB - 1) and 4194304 (4 MB) to 8388607 (8 MB - 1) are valid part ranges. However,
            if you set a range value of 2 MB to 6 MB, the range does not align with the part size
            and the upload will fail. </li> </ul> 
            <para>
            This operation is idempotent. If you upload the same part multiple times, the data
            included in the most recent request overwrites the previously uploaded data.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html">Uploading
            Large Archives in Parts (Multipart Upload)</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-upload-part.html">Upload
            Part </a> in the <i>Amazon Glacier Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UploadMultipartPart service method.</param>
            
            <returns>The response from the UploadMultipartPart service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.RequestTimeoutException">
            Returned if, when uploading an archive, Amazon Glacier times out while receiving the
            upload.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.BeginUploadMultipartPart(Amazon.Glacier.Model.UploadMultipartPartRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UploadMultipartPart operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadMultipartPart operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUploadMultipartPart
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.IAmazonGlacier.EndUploadMultipartPart(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UploadMultipartPart operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUploadMultipartPart.</param>
            
            <returns>Returns a  UploadMultipartPartResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.Initialize">
            <summary>
            Specialize the initialize of the client.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.#ctor">
             <summary>
             Constructs AmazonGlacierClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonGlacierClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.#ctor(Amazon.Glacier.AmazonGlacierConfig)">
             <summary>
             Constructs AmazonGlacierClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonGlacierClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonGlacierClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonGlacierClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.Glacier.AmazonGlacierConfig)">
            <summary>
            Constructs AmazonGlacierClient with AWS Credentials and an
            AmazonGlacierClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonGlacierClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonGlacierClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonGlacierClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.#ctor(System.String,System.String,Amazon.Glacier.AmazonGlacierConfig)">
            <summary>
            Constructs AmazonGlacierClient with AWS Access Key ID, AWS Secret Key and an
            AmazonGlacierClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonGlacierClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonGlacierClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonGlacierClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.#ctor(System.String,System.String,System.String,Amazon.Glacier.AmazonGlacierConfig)">
            <summary>
            Constructs AmazonGlacierClient with AWS Access Key ID, AWS Secret Key and an
            AmazonGlacierClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonGlacierClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customize the pipeline
            </summary>
            <param name="pipeline"></param>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.AbortMultipartUpload(Amazon.Glacier.Model.AbortMultipartUploadRequest)">
            <summary>
            This operation aborts a multipart upload identified by the upload ID.
            
             
            <para>
            After the Abort Multipart Upload request succeeds, you cannot upload any more parts
            to the multipart upload or complete the multipart upload. Aborting a completed upload
            fails. However, aborting an already-aborted upload will succeed, for a short time.
            For more information about uploading a part and completing a multipart upload, see
            <a>UploadMultipartPart</a> and <a>CompleteMultipartUpload</a>.
            </para>
             
            <para>
            This operation is idempotent.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working
            with Archives in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-abort-upload.html">Abort
            Multipart Upload</a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AbortMultipartUpload service method.</param>
            
            <returns>The response from the AbortMultipartUpload service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginAbortMultipartUpload(Amazon.Glacier.Model.AbortMultipartUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the AbortMultipartUpload operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AbortMultipartUpload operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndAbortMultipartUpload
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndAbortMultipartUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  AbortMultipartUpload operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginAbortMultipartUpload.</param>
            
            <returns>Returns a  AbortMultipartUploadResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.AbortVaultLock(Amazon.Glacier.Model.AbortVaultLockRequest)">
            <summary>
            This operation aborts the vault locking process if the vault lock is not in the <code>Locked</code>
            state. If the vault lock is in the <code>Locked</code> state when this operation is
            requested, the operation returns an <code>AccessDeniedException</code> error. Aborting
            the vault locking process removes the vault lock policy from the specified vault.
            
            
             
            <para>
            A vault lock is put into the <code>InProgress</code> state by calling <a>InitiateVaultLock</a>.
            A vault lock is put into the <code>Locked</code> state by calling <a>CompleteVaultLock</a>.
            You can get the state of a vault lock by calling <a>GetVaultLock</a>. For more information
            about the vault locking process, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html">Amazon
            Glacier Vault Lock</a>. For more information about vault lock policies, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock-policy.html">Amazon
            Glacier Access Control with Vault Lock Policies</a>. 
            </para>
             
            <para>
            This operation is idempotent. You can successfully invoke this operation multiple
            times, if the vault lock is in the <code>InProgress</code> state or if there is no
            policy associated with the vault.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AbortVaultLock service method.</param>
            
            <returns>The response from the AbortVaultLock service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginAbortVaultLock(Amazon.Glacier.Model.AbortVaultLockRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the AbortVaultLock operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AbortVaultLock operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndAbortVaultLock
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndAbortVaultLock(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  AbortVaultLock operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginAbortVaultLock.</param>
            
            <returns>Returns a  AbortVaultLockResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.AddTagsToVault(Amazon.Glacier.Model.AddTagsToVaultRequest)">
            <summary>
            This operation adds the specified tags to a vault. Each tag is composed of a key and
            a value. Each vault can have up to 10 tags. If your request would cause the tag limit
            for the vault to be exceeded, the operation throws the <code>LimitExceededException</code>
            error. If a tag already exists on the vault under a specified key, the existing key
            value will be overwritten. For more information about tags, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html">Tagging
            Amazon Glacier Resources</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddTagsToVault service method.</param>
            
            <returns>The response from the AddTagsToVault service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.LimitExceededException">
            Returned if the request results in a vault or account limit being exceeded.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginAddTagsToVault(Amazon.Glacier.Model.AddTagsToVaultRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the AddTagsToVault operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddTagsToVault operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndAddTagsToVault
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndAddTagsToVault(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  AddTagsToVault operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginAddTagsToVault.</param>
            
            <returns>Returns a  AddTagsToVaultResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.CompleteMultipartUpload(Amazon.Glacier.Model.CompleteMultipartUploadRequest)">
            <summary>
            You call this operation to inform Amazon Glacier that all the archive parts have been
            uploaded and that Amazon Glacier can now assemble the archive from the uploaded parts.
            After assembling and saving the archive to the vault, Amazon Glacier returns the URI
            path of the newly created archive resource. Using the URI path, you can then access
            the archive. After you upload an archive, you should save the archive ID returned
            to retrieve the archive at a later point. You can also get the vault inventory to
            obtain a list of archive IDs in a vault. For more information, see <a>InitiateJob</a>.
            
             
            <para>
            In the request, you must include the computed SHA256 tree hash of the entire archive
            you have uploaded. For information about computing a SHA256 tree hash, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html">Computing
            Checksums</a>. On the server side, Amazon Glacier also constructs the SHA256 tree
            hash of the assembled archive. If the values match, Amazon Glacier saves the archive
            to the vault; otherwise, it returns an error, and the operation fails. The <a>ListParts</a>
            operation returns a list of parts uploaded for a specific multipart upload. It includes
            checksum information for each uploaded part that can be used to debug a bad checksum
            issue.
            </para>
             
            <para>
            Additionally, Amazon Glacier also checks for any missing content ranges when assembling
            the archive, if missing content ranges are found, Amazon Glacier returns an error
            and the operation fails. 
            </para>
             
            <para>
            Complete Multipart Upload is an idempotent operation. After your first successful
            complete multipart upload, if you call the operation again within a short period,
            the operation will succeed and return the same archive ID. This is useful in the event
            you experience a network issue that causes an aborted connection or receive a 500
            server error, in which case you can repeat your Complete Multipart Upload request
            and get the same archive ID without creating duplicate archives. Note, however, that
            after the multipart upload completes, you cannot call the List Parts operation and
            the multipart upload will not appear in List Multipart Uploads response, even if idempotent
            complete is possible.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html">Uploading
            Large Archives in Parts (Multipart Upload)</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-complete-upload.html">Complete
            Multipart Upload</a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CompleteMultipartUpload service method.</param>
            
            <returns>The response from the CompleteMultipartUpload service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginCompleteMultipartUpload(Amazon.Glacier.Model.CompleteMultipartUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CompleteMultipartUpload operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CompleteMultipartUpload operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCompleteMultipartUpload
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndCompleteMultipartUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CompleteMultipartUpload operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCompleteMultipartUpload.</param>
            
            <returns>Returns a  CompleteMultipartUploadResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.CompleteVaultLock(Amazon.Glacier.Model.CompleteVaultLockRequest)">
            <summary>
            This operation completes the vault locking process by transitioning the vault lock
            from the <code>InProgress</code> state to the <code>Locked</code> state, which causes
            the vault lock policy to become unchangeable. A vault lock is put into the <code>InProgress</code>
            state by calling <a>InitiateVaultLock</a>. You can obtain the state of the vault lock
            by calling <a>GetVaultLock</a>. For more information about the vault locking process,
            <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html">Amazon
            Glacier Vault Lock</a>. 
            
             
            <para>
            This operation is idempotent. This request is always successful if the vault lock
            is in the <code>Locked</code> state and the provided lock ID matches the lock ID originally
            used to lock the vault.
            </para>
             
            <para>
            If an invalid lock ID is passed in the request when the vault lock is in the <code>Locked</code>
            state, the operation returns an <code>AccessDeniedException</code> error. If an invalid
            lock ID is passed in the request when the vault lock is in the <code>InProgress</code>
            state, the operation throws an <code>InvalidParameter</code> error.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CompleteVaultLock service method.</param>
            
            <returns>The response from the CompleteVaultLock service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginCompleteVaultLock(Amazon.Glacier.Model.CompleteVaultLockRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CompleteVaultLock operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CompleteVaultLock operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCompleteVaultLock
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndCompleteVaultLock(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CompleteVaultLock operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCompleteVaultLock.</param>
            
            <returns>Returns a  CompleteVaultLockResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.CreateVault(Amazon.Glacier.Model.CreateVaultRequest)">
            <summary>
            This operation creates a new vault with the specified name. The name of the vault
            must be unique within a region for an AWS account. You can create up to 1,000 vaults
            per account. If you need to create more vaults, contact Amazon Glacier.
            
             
            <para>
            You must use the following guidelines when naming a vault. 
            </para>
             
            <para>
             <ul> <li> 
            <para>
             Names can be between 1 and 255 characters long. 
            </para>
             </li> <li> 
            <para>
            Allowed characters are a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen), and '.' (period).
            </para>
             </li> </ul> 
            </para>
             
            <para>
            This operation is idempotent.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/creating-vaults.html">Creating
            a Vault in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-put.html">Create
            Vault </a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateVault service method.</param>
            
            <returns>The response from the CreateVault service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.LimitExceededException">
            Returned if the request results in a vault or account limit being exceeded.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginCreateVault(Amazon.Glacier.Model.CreateVaultRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateVault operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVault operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateVault
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndCreateVault(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateVault operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateVault.</param>
            
            <returns>Returns a  CreateVaultResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.DeleteArchive(Amazon.Glacier.Model.DeleteArchiveRequest)">
            <summary>
            This operation deletes an archive from a vault. Subsequent requests to initiate a
            retrieval of this archive will fail. Archive retrievals that are in progress for this
            archive ID may or may not succeed according to the following scenarios:
            
             <ul> <li>If the archive retrieval job is actively preparing the data for download
            when Amazon Glacier receives the delete archive request, the archival retrieval operation
            might fail. </li> <li>If the archive retrieval job has successfully prepared the archive
            for download when Amazon Glacier receives the delete archive request, you will be
            able to download the output. </li> </ul> 
            <para>
            This operation is idempotent. Attempting to delete an already-deleted archive does
            not result in an error. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/deleting-an-archive.html">Deleting
            an Archive in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-delete.html">Delete
            Archive</a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteArchive service method.</param>
            
            <returns>The response from the DeleteArchive service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginDeleteArchive(Amazon.Glacier.Model.DeleteArchiveRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteArchive operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteArchive operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteArchive
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndDeleteArchive(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteArchive operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteArchive.</param>
            
            <returns>Returns a  DeleteArchiveResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.DeleteVault(Amazon.Glacier.Model.DeleteVaultRequest)">
            <summary>
            This operation deletes a vault. Amazon Glacier will delete a vault only if there are
            no archives in the vault as of the last inventory and there have been no writes to
            the vault since the last inventory. If either of these conditions is not satisfied,
            the vault deletion fails (that is, the vault is not removed) and Amazon Glacier returns
            an error. You can use <a>DescribeVault</a> to return the number of archives in a vault,
            and you can use <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html">Initiate
            a Job (POST jobs)</a> to initiate a new inventory retrieval for a vault. The inventory
            contains the archive IDs you use to delete archives using <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-delete.html">Delete
            Archive (DELETE archive)</a>.
            
             
            <para>
            This operation is idempotent.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/deleting-vaults.html">Deleting
            a Vault in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-delete.html">Delete
            Vault </a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVault service method.</param>
            
            <returns>The response from the DeleteVault service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginDeleteVault(Amazon.Glacier.Model.DeleteVaultRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteVault operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVault operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteVault
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndDeleteVault(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteVault operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteVault.</param>
            
            <returns>Returns a  DeleteVaultResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.DeleteVaultAccessPolicy(Amazon.Glacier.Model.DeleteVaultAccessPolicyRequest)">
            <summary>
            This operation deletes the access policy associated with the specified vault. The
            operation is eventually consistent; that is, it might take some time for Amazon Glacier
            to completely remove the access policy, and you might still see the effect of the
            policy for a short time after you send the delete request.
            
             
            <para>
            This operation is idempotent. You can invoke delete multiple times, even if there
            is no policy associated with the vault. For more information about vault access policies,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html">Amazon
            Glacier Access Control with Vault Access Policies</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVaultAccessPolicy service method.</param>
            
            <returns>The response from the DeleteVaultAccessPolicy service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginDeleteVaultAccessPolicy(Amazon.Glacier.Model.DeleteVaultAccessPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteVaultAccessPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVaultAccessPolicy operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteVaultAccessPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndDeleteVaultAccessPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteVaultAccessPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteVaultAccessPolicy.</param>
            
            <returns>Returns a  DeleteVaultAccessPolicyResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.DeleteVaultNotifications(Amazon.Glacier.Model.DeleteVaultNotificationsRequest)">
            <summary>
            This operation deletes the notification configuration set for a vault. The operation
            is eventually consistent; that is, it might take some time for Amazon Glacier to completely
            disable the notifications and you might still receive some notifications for a short
            time after you send the delete request. 
            
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring
            Vault Notifications in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-delete.html">Delete
            Vault Notification Configuration </a> in the Amazon Glacier Developer Guide. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVaultNotifications service method.</param>
            
            <returns>The response from the DeleteVaultNotifications service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginDeleteVaultNotifications(Amazon.Glacier.Model.DeleteVaultNotificationsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteVaultNotifications operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVaultNotifications operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteVaultNotifications
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndDeleteVaultNotifications(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteVaultNotifications operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteVaultNotifications.</param>
            
            <returns>Returns a  DeleteVaultNotificationsResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.DescribeJob(Amazon.Glacier.Model.DescribeJobRequest)">
            <summary>
            This operation returns information about a job you previously initiated, including
            the job initiation date, the user who initiated the job, the job status code/message
            and the Amazon SNS topic to notify after Amazon Glacier completes the job. For more
            information about initiating a job, see <a>InitiateJob</a>. 
            
             <note>
            <para>
            This operation enables you to check the status of your job. However, it is strongly
            recommended that you set up an Amazon SNS topic and specify it in your initiate job
            request so that Amazon Glacier can notify the topic after it completes the job. 
            </para>
            </note> 
            <para>
            A job ID will not expire for at least 24 hours after Amazon Glacier completes the
            job. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For information about the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-describe-job-get.html">Working
            with Archives in Amazon Glacier</a> in the <i>Amazon Glacier Developer Guide</i>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeJob service method.</param>
            
            <returns>The response from the DescribeJob service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginDescribeJob(Amazon.Glacier.Model.DescribeJobRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeJob operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeJob operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeJob
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndDescribeJob(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeJob operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeJob.</param>
            
            <returns>Returns a  DescribeJobResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.DescribeVault(Amazon.Glacier.Model.DescribeVaultRequest)">
            <summary>
            This operation returns information about a vault, including the vault's Amazon Resource
            Name (ARN), the date the vault was created, the number of archives it contains, and
            the total size of all the archives in the vault. The number of archives and their
            total size are as of the last inventory generation. This means that if you add or
            remove an archive from a vault, and then immediately use Describe Vault, the change
            in contents will not be immediately reflected. If you want to retrieve the latest
            inventory of the vault, use <a>InitiateJob</a>. Amazon Glacier generates vault inventories
            approximately daily. For more information, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-inventory.html">Downloading
            a Vault Inventory in Amazon Glacier</a>. 
            
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/retrieving-vault-info.html">Retrieving
            Vault Metadata in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-get.html">Describe
            Vault </a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeVault service method.</param>
            
            <returns>The response from the DescribeVault service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginDescribeVault(Amazon.Glacier.Model.DescribeVaultRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeVault operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVault operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeVault
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndDescribeVault(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeVault operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeVault.</param>
            
            <returns>Returns a  DescribeVaultResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.GetDataRetrievalPolicy(Amazon.Glacier.Model.GetDataRetrievalPolicyRequest)">
            <summary>
            This operation returns the current data retrieval policy for the account and region
            specified in the GET request. For more information about data retrieval policies,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/data-retrieval-policy.html">Amazon
            Glacier Data Retrieval Policies</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataRetrievalPolicy service method.</param>
            
            <returns>The response from the GetDataRetrievalPolicy service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginGetDataRetrievalPolicy(Amazon.Glacier.Model.GetDataRetrievalPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetDataRetrievalPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetDataRetrievalPolicy operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetDataRetrievalPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndGetDataRetrievalPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetDataRetrievalPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetDataRetrievalPolicy.</param>
            
            <returns>Returns a  GetDataRetrievalPolicyResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.GetJobOutput(Amazon.Glacier.Model.GetJobOutputRequest)">
            <summary>
            This operation downloads the output of the job you initiated using <a>InitiateJob</a>.
            Depending on the job type you specified when you initiated the job, the output will
            be either the content of an archive or a vault inventory.
            
             
            <para>
            A job ID will not expire for at least 24 hours after Amazon Glacier completes the
            job. That is, you can download the job output within the 24 hours period after Amazon
            Glacier completes the job.
            </para>
             
            <para>
            If the job output is large, then you can use the <code>Range</code> request header
            to retrieve a portion of the output. This allows you to download the entire output
            in smaller chunks of bytes. For example, suppose you have 1 GB of job output you want
            to download and you decide to download 128 MB chunks of data at a time, which is a
            total of eight Get Job Output requests. You use the following process to download
            the job output:
            </para>
             <ol> <li> 
            <para>
            Download a 128 MB chunk of output by specifying the appropriate byte range using the
            <code>Range</code> header.
            </para>
             </li> <li> 
            <para>
            Along with the data, the response includes a SHA256 tree hash of the payload. You
            compute the checksum of the payload on the client and compare it with the checksum
            you received in the response to ensure you received all the expected data.
            </para>
             </li> <li> 
            <para>
            Repeat steps 1 and 2 for all the eight 128 MB chunks of output data, each time specifying
            the appropriate byte range.
            </para>
             </li> <li> 
            <para>
            After downloading all the parts of the job output, you have a list of eight checksum
            values. Compute the tree hash of these values to find the checksum of the entire output.
            Using the <a>DescribeJob</a> API, obtain job information of the job that provided
            you the output. The response includes the checksum of the entire archive stored in
            Amazon Glacier. You compare this value with the checksum you computed to ensure you
            have downloaded the entire archive content with no errors.
            </para>
             </li> </ol> 
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-inventory.html">Downloading
            a Vault Inventory</a>, <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/downloading-an-archive.html">Downloading
            an Archive</a>, and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-job-output-get.html">Get
            Job Output </a> 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetJobOutput service method.</param>
            
            <returns>The response from the GetJobOutput service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginGetJobOutput(Amazon.Glacier.Model.GetJobOutputRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetJobOutput operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetJobOutput operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetJobOutput
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndGetJobOutput(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetJobOutput operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetJobOutput.</param>
            
            <returns>Returns a  GetJobOutputResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.GetVaultAccessPolicy(Amazon.Glacier.Model.GetVaultAccessPolicyRequest)">
            <summary>
            This operation retrieves the <code>access-policy</code> subresource set on the vault;
            for more information on setting this subresource, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-SetVaultAccessPolicy.html">Set
            Vault Access Policy (PUT access-policy)</a>. If there is no access policy set on the
            vault, the operation returns a <code>404 Not found</code> error. For more information
            about vault access policies, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html">Amazon
            Glacier Access Control with Vault Access Policies</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetVaultAccessPolicy service method.</param>
            
            <returns>The response from the GetVaultAccessPolicy service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginGetVaultAccessPolicy(Amazon.Glacier.Model.GetVaultAccessPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetVaultAccessPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetVaultAccessPolicy operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetVaultAccessPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndGetVaultAccessPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetVaultAccessPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetVaultAccessPolicy.</param>
            
            <returns>Returns a  GetVaultAccessPolicyResult from Glacier.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Amazon.Glacier.AmazonGlacierClient.GetVaultLock(Amazon.Glacier.Model.GetVaultLockRequest)" -->
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginGetVaultLock(Amazon.Glacier.Model.GetVaultLockRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetVaultLock operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetVaultLock operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetVaultLock
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndGetVaultLock(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetVaultLock operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetVaultLock.</param>
            
            <returns>Returns a  GetVaultLockResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.GetVaultNotifications(Amazon.Glacier.Model.GetVaultNotificationsRequest)">
            <summary>
            This operation retrieves the <code class="code">notification-configuration</code>
            subresource of the specified vault.
            
             
            <para>
            For information about setting a notification configuration on a vault, see <a>SetVaultNotifications</a>.
            If a notification configuration for a vault is not set, the operation returns a <code class="code">404 Not Found</code> error. For more information about vault notifications,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring
            Vault Notifications in Amazon Glacier</a>. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring
            Vault Notifications in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-get.html">Get
            Vault Notification Configuration </a> in the <i>Amazon Glacier Developer Guide</i>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetVaultNotifications service method.</param>
            
            <returns>The response from the GetVaultNotifications service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginGetVaultNotifications(Amazon.Glacier.Model.GetVaultNotificationsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetVaultNotifications operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetVaultNotifications operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetVaultNotifications
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndGetVaultNotifications(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetVaultNotifications operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetVaultNotifications.</param>
            
            <returns>Returns a  GetVaultNotificationsResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.InitiateJob(Amazon.Glacier.Model.InitiateJobRequest)">
            <summary>
            This operation initiates a job of the specified type. In this release, you can initiate
            a job to retrieve either an archive or a vault inventory (a list of archives in a
            vault). 
            
             
            <para>
            Retrieving data from Amazon Glacier is a two-step process: 
            </para>
             <ol> <li> 
            <para>
            Initiate a retrieval job.
            </para>
             <note>
            <para>
            A data retrieval policy can cause your initiate retrieval job request to fail with
            a PolicyEnforcedException exception. For more information about data retrieval policies,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/data-retrieval-policy.html">Amazon
            Glacier Data Retrieval Policies</a>. For more information about the PolicyEnforcedException
            exception, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-error-responses.html">Error
            Responses</a>.
            </para>
             </note> </li> <li>
            <para>
            After the job completes, download the bytes.
            </para>
            </li> </ol> 
            <para>
            The retrieval request is executed asynchronously. When you initiate a retrieval job,
            Amazon Glacier creates a job and returns a job ID in the response. When Amazon Glacier
            completes the job, you can get the job output (archive or inventory data). For information
            about getting job output, see <a>GetJobOutput</a> operation. 
            </para>
             
            <para>
            The job must complete before you can get its output. To determine when a job is complete,
            you have the following options:
            </para>
             <ul> <li> 
            <para>
            <b>Use Amazon SNS Notification</b> You can specify an Amazon Simple Notification Service
            (Amazon SNS) topic to which Amazon Glacier can post a notification after the job is
            completed. You can specify an SNS topic per job request. The notification is sent
            only after Amazon Glacier completes the job. In addition to specifying an SNS topic
            per job request, you can configure vault notifications for a vault so that job notifications
            are always sent. For more information, see <a>SetVaultNotifications</a>.
            </para>
             </li> <li> 
            <para>
            <b>Get job details</b> You can make a <a>DescribeJob</a> request to obtain job status
            information while a job is in progress. However, it is more efficient to use an Amazon
            SNS notification to determine when a job is complete.
            </para>
             </li> </ul> <note>
            <para>
            The information you get via notification is same that you get by calling <a>DescribeJob</a>.
            </para>
            </note> 
            <para>
            If for a specific event, you add both the notification configuration on the vault
            and also specify an SNS topic in your initiate job request, Amazon Glacier sends both
            notifications. For more information, see <a>SetVaultNotifications</a>.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            <b>About the Vault Inventory</b>
            </para>
             
            <para>
            Amazon Glacier prepares an inventory for each vault periodically, every 24 hours.
            When you initiate a job for a vault inventory, Amazon Glacier returns the last inventory
            for the vault. The inventory data you get might be up to a day or two days old. Also,
            the initiate inventory job might take some time to complete before you can download
            the vault inventory. So you do not want to retrieve a vault inventory for each vault
            operation. However, in some scenarios, you might find the vault inventory useful.
            For example, when you upload an archive, you can provide an archive description but
            not an archive name. Amazon Glacier provides you a unique archive ID, an opaque string
            of characters. So, you might maintain your own database that maps archive names to
            their corresponding Amazon Glacier assigned archive IDs. You might find the vault
            inventory useful in the event you need to reconcile information in your database with
            the actual vault inventory. 
            </para>
             
            <para>
            <b>Range Inventory Retrieval</b>
            </para>
             
            <para>
            You can limit the number of inventory items retrieved by filtering on the archive
            creation date or by setting a limit.
            </para>
             
            <para>
            <i>Filtering by Archive Creation Date</i>
            </para>
             
            <para>
            You can retrieve inventory items for archives created between <code>StartDate</code>
            and <code>EndDate</code> by specifying values for these parameters in the <b>InitiateJob</b>
            request. Archives created on or after the <code>StartDate</code> and before the <code>EndDate</code>
            will be returned. If you only provide the <code>StartDate</code> without the <code>EndDate</code>,
            you will retrieve the inventory for all archives created on or after the <code>StartDate</code>.
            If you only provide the <code>EndDate</code> without the <code>StartDate</code>, you
            will get back the inventory for all archives created before the <code>EndDate</code>.
            </para>
             
            <para>
            <i>Limiting Inventory Items per Retrieval</i>
            </para>
             
            <para>
            You can limit the number of inventory items returned by setting the <code>Limit</code>
            parameter in the <b>InitiateJob</b> request. The inventory job output will contain
            inventory items up to the specified <code>Limit</code>. If there are more inventory
            items available, the result is paginated. After a job is complete you can use the
            <a>DescribeJob</a> operation to get a marker that you use in a subsequent <b>InitiateJob</b>
            request. The marker will indicate the starting point to retrieve the next set of inventory
            items. You can page through your entire inventory by repeatedly making <b>InitiateJob</b>
            requests with the marker from the previous <b>DescribeJob</b> output, until you get
            a marker from <b>DescribeJob</b> that returns null, indicating that there are no more
            inventory items available.
            </para>
             
            <para>
            You can use the <code>Limit</code> parameter together with the date range parameters.
            </para>
             
            <para>
            <b>About Ranged Archive Retrieval</b>
            </para>
             
            <para>
             You can initiate an archive retrieval for the whole archive or a range of the archive.
            In the case of ranged archive retrieval, you specify a byte range to return or the
            whole archive. The range specified must be megabyte (MB) aligned, that is the range
            start value must be divisible by 1 MB and range end value plus 1 must be divisible
            by 1 MB or equal the end of the archive. If the ranged archive retrieval is not megabyte
            aligned, this operation returns a 400 response. Furthermore, to ensure you get checksum
            values for data you download using Get Job Output API, the range must be tree hash
            aligned. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html">Initiate
            a Job</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-inventory.html">Downloading
            a Vault Inventory</a> 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the InitiateJob service method.</param>
            
            <returns>The response from the InitiateJob service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.PolicyEnforcedException">
            Returned if a retrieval job would exceed the current data policy's retrieval rate
            limit. For more information about data retrieval policies,
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginInitiateJob(Amazon.Glacier.Model.InitiateJobRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the InitiateJob operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the InitiateJob operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndInitiateJob
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndInitiateJob(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  InitiateJob operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginInitiateJob.</param>
            
            <returns>Returns a  InitiateJobResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.InitiateMultipartUpload(Amazon.Glacier.Model.InitiateMultipartUploadRequest)">
            <summary>
            This operation initiates a multipart upload. Amazon Glacier creates a multipart upload
            resource and returns its ID in the response. The multipart upload ID is used in subsequent
            requests to upload parts of an archive (see <a>UploadMultipartPart</a>).
            
             
            <para>
            When you initiate a multipart upload, you specify the part size in number of bytes.
            The part size must be a megabyte (1024 KB) multiplied by a power of 2-for example,
            1048576 (1 MB), 2097152 (2 MB), 4194304 (4 MB), 8388608 (8 MB), and so on. The minimum
            allowable part size is 1 MB, and the maximum is 4 GB.
            </para>
             
            <para>
            Every part you upload to this resource (see <a>UploadMultipartPart</a>), except the
            last one, must have the same size. The last one can be the same size or smaller. For
            example, suppose you want to upload a 16.2 MB file. If you initiate the multipart
            upload with a part size of 4 MB, you will upload four parts of 4 MB each and one part
            of 0.2 MB. 
            </para>
             <note>
            <para>
            You don't need to know the size of the archive when you start a multipart upload because
            Amazon Glacier does not require you to specify the overall archive size.
            </para>
            </note> 
            <para>
            After you complete the multipart upload, Amazon Glacier removes the multipart upload
            resource referenced by the ID. Amazon Glacier also removes the multipart upload resource
            if you cancel the multipart upload or it may be removed if there is no activity for
            a period of 24 hours.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html">Uploading
            Large Archives in Parts (Multipart Upload)</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-initiate-upload.html">Initiate
            Multipart Upload</a> in the <i>Amazon Glacier Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the InitiateMultipartUpload service method.</param>
            
            <returns>The response from the InitiateMultipartUpload service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginInitiateMultipartUpload(Amazon.Glacier.Model.InitiateMultipartUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the InitiateMultipartUpload operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the InitiateMultipartUpload operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndInitiateMultipartUpload
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndInitiateMultipartUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  InitiateMultipartUpload operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginInitiateMultipartUpload.</param>
            
            <returns>Returns a  InitiateMultipartUploadResult from Glacier.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Amazon.Glacier.AmazonGlacierClient.InitiateVaultLock(Amazon.Glacier.Model.InitiateVaultLockRequest)" -->
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginInitiateVaultLock(Amazon.Glacier.Model.InitiateVaultLockRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the InitiateVaultLock operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the InitiateVaultLock operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndInitiateVaultLock
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndInitiateVaultLock(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  InitiateVaultLock operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginInitiateVaultLock.</param>
            
            <returns>Returns a  InitiateVaultLockResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.ListJobs(Amazon.Glacier.Model.ListJobsRequest)">
            <summary>
            This operation lists jobs for a vault, including jobs that are in-progress and jobs
            that have recently finished. 
            
             <note>
            <para>
            Amazon Glacier retains recently completed jobs for a period before deleting them;
            however, it eventually removes completed jobs. The output of completed jobs can be
            retrieved. Retaining completed jobs for a period of time after they have completed
            enables you to get a job output in the event you miss the job completion notification
            or your first attempt to download it fails. For example, suppose you start an archive
            retrieval job to download an archive. After the job completes, you start to download
            the archive but encounter a network error. In this scenario, you can retry and download
            the archive while the job exists. 
            </para>
            </note> 
            <para>
            To retrieve an archive or retrieve a vault inventory from Amazon Glacier, you first
            initiate a job, and after the job completes, you download the data. For an archive
            retrieval, the output is the archive data, and for an inventory retrieval, it is the
            inventory list. The List Job operation returns a list of these jobs sorted by job
            initiation time.
            </para>
             
            <para>
            This List Jobs operation supports pagination. By default, this operation returns up
            to 1,000 jobs in the response. You should always check the response for a <code>marker</code>
            at which to continue the list; if there are no more items the <code>marker</code>
            is <code>null</code>. To return a list of jobs that begins at a specific job, set
            the <code>marker</code> request parameter to the value you obtained from a previous
            List Jobs request. You can also limit the number of jobs returned in the response
            by specifying the <code>limit</code> parameter in the request.
            </para>
             
            <para>
            Additionally, you can filter the jobs list returned by specifying an optional <code>statuscode</code>
            (InProgress, Succeeded, or Failed) and <code>completed</code> (true, false) parameter.
            The <code>statuscode</code> allows you to specify that only jobs that match a specified
            status are returned. The <code>completed</code> parameter allows you to specify that
            only jobs in a specific completion state are returned.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-jobs-get.html">List
            Jobs </a> 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListJobs service method.</param>
            
            <returns>The response from the ListJobs service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginListJobs(Amazon.Glacier.Model.ListJobsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListJobs operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListJobs operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListJobs
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndListJobs(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListJobs operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListJobs.</param>
            
            <returns>Returns a  ListJobsResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.ListMultipartUploads(Amazon.Glacier.Model.ListMultipartUploadsRequest)">
            <summary>
            This operation lists in-progress multipart uploads for the specified vault. An in-progress
            multipart upload is a multipart upload that has been initiated by an <a>InitiateMultipartUpload</a>
            request, but has not yet been completed or aborted. The list returned in the List
            Multipart Upload response has no guaranteed order. 
            
             
            <para>
            The List Multipart Uploads operation supports pagination. By default, this operation
            returns up to 1,000 multipart uploads in the response. You should always check the
            response for a <code>marker</code> at which to continue the list; if there are no
            more items the <code>marker</code> is <code>null</code>. To return a list of multipart
            uploads that begins at a specific upload, set the <code>marker</code> request parameter
            to the value you obtained from a previous List Multipart Upload request. You can also
            limit the number of uploads returned in the response by specifying the <code>limit</code>
            parameter in the request.
            </para>
             
            <para>
            Note the difference between this operation and listing parts (<a>ListParts</a>). The
            List Multipart Uploads operation lists all multipart uploads for a vault and does
            not require a multipart upload ID. The List Parts operation requires a multipart upload
            ID since parts are associated with a single upload.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working
            with Archives in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-list-uploads.html">List
            Multipart Uploads </a> in the <i>Amazon Glacier Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListMultipartUploads service method.</param>
            
            <returns>The response from the ListMultipartUploads service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginListMultipartUploads(Amazon.Glacier.Model.ListMultipartUploadsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListMultipartUploads operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMultipartUploads operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListMultipartUploads
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndListMultipartUploads(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListMultipartUploads operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListMultipartUploads.</param>
            
            <returns>Returns a  ListMultipartUploadsResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.ListParts(Amazon.Glacier.Model.ListPartsRequest)">
            <summary>
            This operation lists the parts of an archive that have been uploaded in a specific
            multipart upload. You can make this request at any time during an in-progress multipart
            upload before you complete the upload (see <a>CompleteMultipartUpload</a>. List Parts
            returns an error for completed uploads. The list returned in the List Parts response
            is sorted by part range. 
            
             
            <para>
            The List Parts operation supports pagination. By default, this operation returns up
            to 1,000 uploaded parts in the response. You should always check the response for
            a <code class="code">marker</code> at which to continue the list; if there are no
            more items the <code class="code">marker</code> is <code class="code">null</code>.
            To return a list of parts that begins at a specific part, set the <code>marker</code>
            request parameter to the value you obtained from a previous List Parts request. You
            can also limit the number of parts returned in the response by specifying the <code>limit</code>
            parameter in the request. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working
            with Archives in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-list-parts.html">List
            Parts</a> in the <i>Amazon Glacier Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListParts service method.</param>
            
            <returns>The response from the ListParts service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginListParts(Amazon.Glacier.Model.ListPartsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListParts operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListParts operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListParts
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndListParts(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListParts operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListParts.</param>
            
            <returns>Returns a  ListPartsResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.ListTagsForVault(Amazon.Glacier.Model.ListTagsForVaultRequest)">
            <summary>
            This operation lists all the tags attached to a vault. The operation returns an empty
            map if there are no tags. For more information about tags, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html">Tagging
            Amazon Glacier Resources</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForVault service method.</param>
            
            <returns>The response from the ListTagsForVault service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginListTagsForVault(Amazon.Glacier.Model.ListTagsForVaultRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListTagsForVault operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTagsForVault operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListTagsForVault
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndListTagsForVault(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListTagsForVault operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListTagsForVault.</param>
            
            <returns>Returns a  ListTagsForVaultResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.ListVaults">
            <summary>
            This operation lists all vaults owned by the calling user's account. The list returned
            in the response is ASCII-sorted by vault name. 
            
             
            <para>
            By default, this operation returns up to 1,000 items. If there are more vaults to
            list, the response <code class="code">marker</code> field contains the vault Amazon
            Resource Name (ARN) at which to continue the list with a new List Vaults request;
            otherwise, the <code class="code">marker</code> field is <code class="code">null</code>.
            To return a list of vaults that begins at a specific vault, set the <code class="code">marker</code>
            request parameter to the vault ARN you obtained from a previous List Vaults request.
            You can also limit the number of vaults returned in the response by specifying the
            <code class="code">limit</code> parameter in the request. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/retrieving-vault-info.html">Retrieving
            Vault Metadata in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vaults-get.html">List
            Vaults </a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            
            <returns>The response from the ListVaults service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.ListVaults(Amazon.Glacier.Model.ListVaultsRequest)">
            <summary>
            This operation lists all vaults owned by the calling user's account. The list returned
            in the response is ASCII-sorted by vault name. 
            
             
            <para>
            By default, this operation returns up to 1,000 items. If there are more vaults to
            list, the response <code class="code">marker</code> field contains the vault Amazon
            Resource Name (ARN) at which to continue the list with a new List Vaults request;
            otherwise, the <code class="code">marker</code> field is <code class="code">null</code>.
            To return a list of vaults that begins at a specific vault, set the <code class="code">marker</code>
            request parameter to the vault ARN you obtained from a previous List Vaults request.
            You can also limit the number of vaults returned in the response by specifying the
            <code class="code">limit</code> parameter in the request. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/retrieving-vault-info.html">Retrieving
            Vault Metadata in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vaults-get.html">List
            Vaults </a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListVaults service method.</param>
            
            <returns>The response from the ListVaults service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginListVaults(Amazon.Glacier.Model.ListVaultsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListVaults operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListVaults operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListVaults
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndListVaults(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListVaults operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListVaults.</param>
            
            <returns>Returns a  ListVaultsResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.RemoveTagsFromVault(Amazon.Glacier.Model.RemoveTagsFromVaultRequest)">
            <summary>
            This operation removes one or more tags from the set of tags attached to a vault.
            For more information about tags, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html">Tagging
            Amazon Glacier Resources</a>. This operation is idempotent. The operation will be
            successful, even if there are no tags attached to the vault.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromVault service method.</param>
            
            <returns>The response from the RemoveTagsFromVault service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginRemoveTagsFromVault(Amazon.Glacier.Model.RemoveTagsFromVaultRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the RemoveTagsFromVault operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromVault operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndRemoveTagsFromVault
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndRemoveTagsFromVault(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  RemoveTagsFromVault operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginRemoveTagsFromVault.</param>
            
            <returns>Returns a  RemoveTagsFromVaultResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.SetDataRetrievalPolicy(Amazon.Glacier.Model.SetDataRetrievalPolicyRequest)">
            <summary>
            This operation sets and then enacts a data retrieval policy in the region specified
            in the PUT request. You can set one policy per region for an AWS account. The policy
            is enacted within a few minutes of a successful PUT operation. 
            
             
            <para>
            The set policy operation does not affect retrieval jobs that were in progress before
            the policy was enacted. For more information about data retrieval policies, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/data-retrieval-policy.html">Amazon
            Glacier Data Retrieval Policies</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetDataRetrievalPolicy service method.</param>
            
            <returns>The response from the SetDataRetrievalPolicy service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginSetDataRetrievalPolicy(Amazon.Glacier.Model.SetDataRetrievalPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetDataRetrievalPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetDataRetrievalPolicy operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetDataRetrievalPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndSetDataRetrievalPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetDataRetrievalPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetDataRetrievalPolicy.</param>
            
            <returns>Returns a  SetDataRetrievalPolicyResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.SetVaultAccessPolicy(Amazon.Glacier.Model.SetVaultAccessPolicyRequest)">
            <summary>
            This operation configures an access policy for a vault and will overwrite an existing
            policy. To configure a vault access policy, send a PUT request to the <code>access-policy</code>
            subresource of the vault. An access policy is specific to a vault and is also called
            a vault subresource. You can set one access policy per vault and the policy can be
            up to 20 KB in size. For more information about vault access policies, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html">Amazon
            Glacier Access Control with Vault Access Policies</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetVaultAccessPolicy service method.</param>
            
            <returns>The response from the SetVaultAccessPolicy service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginSetVaultAccessPolicy(Amazon.Glacier.Model.SetVaultAccessPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetVaultAccessPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetVaultAccessPolicy operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetVaultAccessPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndSetVaultAccessPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetVaultAccessPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetVaultAccessPolicy.</param>
            
            <returns>Returns a  SetVaultAccessPolicyResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.SetVaultNotifications(Amazon.Glacier.Model.SetVaultNotificationsRequest)">
            <summary>
            This operation configures notifications that will be sent when specific events happen
            to a vault. By default, you don't get any notifications. 
            
             
            <para>
            To configure vault notifications, send a PUT request to the <code class="code">notification-configuration</code>
            subresource of the vault. The request should include a JSON document that provides
            an Amazon SNS topic and specific events for which you want Amazon Glacier to send
            notifications to the topic.
            </para>
             
            <para>
            Amazon SNS topics must grant permission to the vault to be allowed to publish notifications
            to the topic. You can configure a vault to publish a notification for the following
            vault events:
            </para>
             <ul> <li> <b>ArchiveRetrievalCompleted</b> This event occurs when a job that was
            initiated for an archive retrieval is completed (<a>InitiateJob</a>). The status of
            the completed job can be "Succeeded" or "Failed". The notification sent to the SNS
            topic is the same output as returned from <a>DescribeJob</a>. </li> <li> <b>InventoryRetrievalCompleted</b>
            This event occurs when a job that was initiated for an inventory retrieval is completed
            (<a>InitiateJob</a>). The status of the completed job can be "Succeeded" or "Failed".
            The notification sent to the SNS topic is the same output as returned from <a>DescribeJob</a>.
            </li> </ul> 
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring
            Vault Notifications in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-put.html">Set
            Vault Notification Configuration </a> in the <i>Amazon Glacier Developer Guide</i>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetVaultNotifications service method.</param>
            
            <returns>The response from the SetVaultNotifications service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginSetVaultNotifications(Amazon.Glacier.Model.SetVaultNotificationsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetVaultNotifications operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetVaultNotifications operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetVaultNotifications
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndSetVaultNotifications(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetVaultNotifications operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetVaultNotifications.</param>
            
            <returns>Returns a  SetVaultNotificationsResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.UploadArchive(Amazon.Glacier.Model.UploadArchiveRequest)">
            <summary>
            This operation adds an archive to a vault. This is a synchronous operation, and for
            a successful upload, your data is durably persisted. Amazon Glacier returns the archive
            ID in the <code class="code">x-amz-archive-id</code> header of the response. 
            
             
            <para>
            You must use the archive ID to access your data in Amazon Glacier. After you upload
            an archive, you should save the archive ID returned so that you can retrieve or delete
            the archive later. Besides saving the archive ID, you can also index it and give it
            a friendly name to allow for better searching. You can also use the optional archive
            description field to specify how the archive is referred to in an external index of
            archives, such as you might create in Amazon DynamoDB. You can also get the vault
            inventory to obtain a list of archive IDs in a vault. For more information, see <a>InitiateJob</a>.
            
            </para>
             
            <para>
            You must provide a SHA256 tree hash of the data you are uploading. For information
            about computing a SHA256 tree hash, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html">Computing
            Checksums</a>. 
            </para>
             
            <para>
            You can optionally specify an archive description of up to 1,024 printable ASCII characters.
            You can get the archive description when you either retrieve the archive or get the
            vault inventory. For more information, see <a>InitiateJob</a>. Amazon Glacier does
            not interpret the description in any way. An archive description does not need to
            be unique. You cannot use the description to retrieve or sort the archive list. 
            </para>
             
            <para>
            Archives are immutable. After you upload an archive, you cannot edit the archive or
            its description. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-an-archive.html">Uploading
            an Archive in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-post.html">Upload
            Archive</a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UploadArchive service method.</param>
            
            <returns>The response from the UploadArchive service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.RequestTimeoutException">
            Returned if, when uploading an archive, Amazon Glacier times out while receiving the
            upload.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginUploadArchive(Amazon.Glacier.Model.UploadArchiveRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UploadArchive operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadArchive operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUploadArchive
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndUploadArchive(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UploadArchive operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUploadArchive.</param>
            
            <returns>Returns a  UploadArchiveResult from Glacier.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.UploadMultipartPart(Amazon.Glacier.Model.UploadMultipartPartRequest)">
            <summary>
            This operation uploads a part of an archive. You can upload archive parts in any order.
            You can also upload them in parallel. You can upload up to 10,000 parts for a multipart
            upload.
            
             
            <para>
            Amazon Glacier rejects your upload part request if any of the following conditions
            is true:
            </para>
             <ul> <li> 
            <para>
            <b>SHA256 tree hash does not match</b>To ensure that part data is not corrupted in
            transmission, you compute a SHA256 tree hash of the part and include it in your request.
            Upon receiving the part data, Amazon Glacier also computes a SHA256 tree hash. If
            these hash values don't match, the operation fails. For information about computing
            a SHA256 tree hash, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html">Computing
            Checksums</a>.
            </para>
             </li> <li> 
            <para>
            <b>Part size does not match</b>The size of each part except the last must match the
            size specified in the corresponding <a>InitiateMultipartUpload</a> request. The size
            of the last part must be the same size as, or smaller than, the specified size.
            </para>
             <note>
            <para>
            If you upload a part whose size is smaller than the part size you specified in your
            initiate multipart upload request and that part is not the last part, then the upload
            part request will succeed. However, the subsequent Complete Multipart Upload request
            will fail.
            </para>
            </note> </li> <li> <b>Range does not align</b>The byte range value in the request
            does not align with the part size specified in the corresponding initiate request.
            For example, if you specify a part size of 4194304 bytes (4 MB), then 0 to 4194303
            bytes (4 MB - 1) and 4194304 (4 MB) to 8388607 (8 MB - 1) are valid part ranges. However,
            if you set a range value of 2 MB to 6 MB, the range does not align with the part size
            and the upload will fail. </li> </ul> 
            <para>
            This operation is idempotent. If you upload the same part multiple times, the data
            included in the most recent request overwrites the previously uploaded data.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html">Uploading
            Large Archives in Parts (Multipart Upload)</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-upload-part.html">Upload
            Part </a> in the <i>Amazon Glacier Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UploadMultipartPart service method.</param>
            
            <returns>The response from the UploadMultipartPart service method, as returned by Glacier.</returns>
            <exception cref="T:Amazon.Glacier.Model.InvalidParameterValueException">
            Returned if a parameter of the request is incorrectly specified.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.MissingParameterValueException">
            Returned if a required header or parameter is missing from the request.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.RequestTimeoutException">
            Returned if, when uploading an archive, Amazon Glacier times out while receiving the
            upload.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ResourceNotFoundException">
            Returned if the specified resource, such as a vault, upload ID, or job ID, does not
            exist.
            </exception>
            <exception cref="T:Amazon.Glacier.Model.ServiceUnavailableException">
            Returned if the service cannot complete the request.
            </exception>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.BeginUploadMultipartPart(Amazon.Glacier.Model.UploadMultipartPartRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UploadMultipartPart operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadMultipartPart operation on AmazonGlacierClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUploadMultipartPart
                    operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierClient.EndUploadMultipartPart(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UploadMultipartPart operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUploadMultipartPart.</param>
            
            <returns>Returns a  UploadMultipartPartResult from Glacier.</returns>
        </member>
        <member name="T:Amazon.Glacier.AmazonGlacierConfig">
            <summary>
            Configuration for accessing AmazonGlacier service
            </summary>
            <summary>
            Configuration for accessing Amazon Glacier service
            </summary>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierConfig.Initialize">
            <summary>
            Customize thie initialization of the config object.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.Glacier.AmazonGlacierConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.AmazonGlacierConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.AmazonGlacierConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.AmazonGlacierExtensions">
            <summary>
            Extension methods for Amazon Glacier.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierExtensions.SetRange(Amazon.Glacier.Model.GetJobOutputRequest,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Creates the range formatted string and set the Range property.
            </summary>
            <param name="request"></param>
            <param name="start">The start of the range.</param>
            <param name="end">The end of the range.  This can be null which would return the data to the end.</param>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierExtensions.SetRange(Amazon.Glacier.Model.UploadMultipartPartRequest,System.Int64,System.Int64)">
            <summary>
            Creates the range formatted string and set the Range property.
            </summary>
            <param name="request"></param>
            <param name="start">The start of the range.</param>
            <param name="end">The end of the range.</param>
        </member>
        <member name="T:Amazon.Glacier.GlacierUtils">
            <summary>
            This class defines utility methods and constants for use with Glacier service.
            </summary>
        </member>
        <member name="F:Amazon.Glacier.GlacierUtils.JOB_STATUS_INPROGRESS">
            <summary>
            Constant for in progress job status
            </summary>
        </member>
        <member name="F:Amazon.Glacier.GlacierUtils.JOB_STATUS_FAILED">
            <summary>
            Constant for failed job status
            </summary>
        </member>
        <member name="F:Amazon.Glacier.GlacierUtils.JOB_STATUS_SUCCEEDED">
            <summary>
            Constant for succeeded job status
            </summary>
        </member>
        <member name="M:Amazon.Glacier.GlacierUtils.CreatePartStream(System.IO.Stream,System.Int64)">
            <summary>
            Creates a stream that wraps the passed in stream with the length of the stream set to the part size.
            This is useful when using multi part upload API by wrapping the stream being uploaded and setting it 
            to the Body property on the UploadMultipartPartRequest object.
            </summary>
            <param name="stream">Stream that is wrapped.</param>
            <param name="partSize">The part size to be read from the original stream.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.TreeHashGenerator">
            <summary>
            This class computes the tree hash that is set on the CheckSum property on UploadArchiveRequest, UploadMultipartPartRequest and CompleteMultipartUploadRequest.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.TreeHashGenerator.CalculateTreeHash(System.IO.Stream)">
            <summary>
            This method computes the tree hash used by glacier.  It reads the whole stream and then resets the
            position of the stream back to the beginning.
            </summary>
            <param name="stream">The stream to read and compute the tree hash for.</param>
            <returns>The tree hash that can be used to set the the Checksum property.</returns>
        </member>
        <member name="M:Amazon.Glacier.TreeHashGenerator.CalculateTreeHash(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            This method computes the final tree hash used on the CompleteMultipartUploadRequest from the tree hashes of
            the individual part uploaded.
            </summary>
            <param name="partsTreeHash">The list of tree hashes for the individual parts.</param>
            <returns>The tree hash that can be used to set the the Checksum property.</returns>
        </member>
        <member name="T:Amazon.Glacier.Internal.ProcessRequestHandler">
            <summary>
            Custom pipeline handler to add default account if not specified in the request object.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Internal.ProcessRequestHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.Glacier.Internal.ProcessRequestHandler.InvokeAsync(Amazon.Runtime.IAsyncExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
            <returns>IAsyncResult which represent an async operation.</returns>
        </member>
        <member name="M:Amazon.Glacier.Internal.ProcessRequestHandler.PreInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            Custom pipeline handler
            </summary>
            <param name="executionContext"></param>
        </member>
        <member name="T:Amazon.Glacier.Model.UploadArchiveRequest">
            <summary>
            Container for the parameters to the UploadArchive operation.
            This operation adds an archive to a vault. This is a synchronous operation, and for
            a            successful upload, your data is durably persisted. Amazon Glacier returns the
            archive ID in            the <code class="code">x-amz-archive-id</code> header of the response.        
            
                    
            <para>
            You must use the archive ID to access your data in Amazon Glacier. After you upload
            an archive,            you should save the archive ID returned so that you can retrieve or
            delete the archive            later. Besides saving the archive ID, you can also index it and
            give it a friendly name            to allow for better searching. You can also use the optional
            archive description field            to specify how the archive is referred to in an external
            index of archives, such as you            might create in Amazon DynamoDB. You can also get
            the vault inventory to obtain a list            of archive IDs in a vault. For more information,
            see <a>InitiateJob</a>.         
            </para>
                    
            <para>
            You must provide a SHA256 tree hash of the data you are uploading. For information
            about            computing a SHA256 tree hash, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html">Computing
            Checksums</a>. 
            </para>
                    
            <para>
            You can optionally specify an archive description of up to 1,024 printable ASCII characters.            You
            can get the archive description when you either retrieve the archive or get the vault            inventory.
            For more information, see <a>InitiateJob</a>. Amazon Glacier does not interpret the
            description            in any way. An archive description does not need to be unique. You cannot
            use the            description to retrieve or sort the archive list.         
            </para>
                    
            <para>
            Archives are immutable. After you upload an archive, you cannot edit the archive or
            its            description. 
            </para>
                    
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
                  
            <para>
             For conceptual information and underlying REST API, go to          <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-an-archive.html">Uploading
            an Archive in Amazon Glacier</a>          and          <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-post.html">Upload
            Archive</a> in the <i>Amazon Glacier Developer Guide</i>.      
            </para>
            </summary>
            <summary>
            Container for the parameters to the UploadArchive operation.
            This operation adds an archive to a vault. This is a synchronous operation, and for
            a successful upload, your data is durably persisted. Amazon Glacier returns the archive
            ID in the <code class="code">x-amz-archive-id</code> header of the response. 
            
             
            <para>
            You must use the archive ID to access your data in Amazon Glacier. After you upload
            an archive, you should save the archive ID returned so that you can retrieve or delete
            the archive later. Besides saving the archive ID, you can also index it and give it
            a friendly name to allow for better searching. You can also use the optional archive
            description field to specify how the archive is referred to in an external index of
            archives, such as you might create in Amazon DynamoDB. You can also get the vault
            inventory to obtain a list of archive IDs in a vault. For more information, see <a>InitiateJob</a>.
            
            </para>
             
            <para>
            You must provide a SHA256 tree hash of the data you are uploading. For information
            about computing a SHA256 tree hash, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html">Computing
            Checksums</a>. 
            </para>
             
            <para>
            You can optionally specify an archive description of up to 1,024 printable ASCII characters.
            You can get the archive description when you either retrieve the archive or get the
            vault inventory. For more information, see <a>InitiateJob</a>. Amazon Glacier does
            not interpret the description in any way. An archive description does not need to
            be unique. You cannot use the description to retrieve or sort the archive list. 
            </para>
             
            <para>
            Archives are immutable. After you upload an archive, you cannot edit the archive or
            its description. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-an-archive.html">Uploading
            an Archive in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-post.html">Upload
            Archive</a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.AmazonGlacierRequest">
            <summary>
            Base class for Glacier operation requests.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.UploadArchiveRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.UploadArchiveRequest.#ctor(System.String,System.String,System.String,System.IO.Stream)">
            <summary>
            Instantiates UploadArchiveRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
            <param name="archiveDescription">The optional description of the archive you are uploading. </param>
            <param name="checksum">The SHA256 tree hash of the data being uploaded.</param>
            <param name="body">The data to upload.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.UploadArchiveRequest.#ctor(System.String,System.String,System.String,System.String,System.IO.Stream)">
            <summary>
            Instantiates UploadArchiveRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens (apos-apos) in the ID. </param>
            <param name="vaultName">The name of the vault.</param>
            <param name="archiveDescription">The optional description of the archive you are uploading. </param>
            <param name="checksum">The SHA256 tree hash of the data being uploaded.</param>
            <param name="body">The data to upload.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadArchiveRequest.StreamTransferProgress">
            <summary>
            Attach a callback that will be called as data is being sent to the AWS Service.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadArchiveRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadArchiveRequest.ArchiveDescription">
            <summary>
            Gets and sets the property ArchiveDescription. 
            <para>
            The optional description of the archive you are uploading. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadArchiveRequest.Body">
            <summary>
            Gets and sets the property Body. 
            <para>
            The data to upload.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadArchiveRequest.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            The SHA256 tree hash of the data being uploaded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadArchiveRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.UploadMultipartPartRequest">
            <summary>
            Container for the parameters to the UploadMultipartPart operation.
            This operation uploads a part of an archive. You can upload archive parts in any order.
            You can also upload them in parallel. You can upload up to 10,000 parts for a multipart
            upload.
            
             
            <para>
            Amazon Glacier rejects your upload part request if any of the following conditions
            is true:
            </para>
             <ul> <li> 
            <para>
            <b>SHA256 tree hash does not match</b>To ensure that part data is not corrupted in
            transmission, you compute a SHA256 tree hash of the part and include it in your request.
            Upon receiving the part data, Amazon Glacier also computes a SHA256 tree hash. If
            these hash values don't match, the operation fails. For information about computing
            a SHA256 tree hash, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html">Computing
            Checksums</a>.
            </para>
             </li> <li> 
            <para>
            <b>Part size does not match</b>The size of each part except the last must match the
            size specified in the corresponding <a>InitiateMultipartUpload</a> request. The size
            of the last part must be the same size as, or smaller than, the specified size.
            </para>
             <note>
            <para>
            If you upload a part whose size is smaller than the part size you specified in your
            initiate multipart upload request and that part is not the last part, then the upload
            part request will succeed. However, the subsequent Complete Multipart Upload request
            will fail.
            </para>
            </note> </li> <li> <b>Range does not align</b>The byte range value in the request
            does not align with the part size specified in the corresponding initiate request.
            For example, if you specify a part size of 4194304 bytes (4 MB), then 0 to 4194303
            bytes (4 MB - 1) and 4194304 (4 MB) to 8388607 (8 MB - 1) are valid part ranges. However,
            if you set a range value of 2 MB to 6 MB, the range does not align with the part size
            and the upload will fail. </li> </ul> 
            <para>
            This operation is idempotent. If you upload the same part multiple times, the data
            included in the most recent request overwrites the previously uploaded data.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html">Uploading
            Large Archives in Parts (Multipart Upload)</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-upload-part.html">Upload
            Part </a> in the <i>Amazon Glacier Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.UploadMultipartPartRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.UploadMultipartPartRequest.#ctor(System.String,System.String,System.String,System.String,System.IO.Stream)">
            <summary>
            Instantiates UploadMultipartPartRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
            <param name="uploadId">The upload ID of the multipart upload.</param>
            <param name="checksum">The SHA256 tree hash of the data being uploaded. </param>
            <param name="range">Identifies the range of bytes in the assembled archive that will be uploaded in this part. Amazon Glacier uses this information to assemble the archive in the proper sequence. The format of this header follows RFC 2616. An example header is Content-Range:bytes 0-4194303/*.</param>
            <param name="body">The data to upload.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.UploadMultipartPartRequest.#ctor(System.String,System.String,System.String,System.String,System.String,System.IO.Stream)">
            <summary>
            Instantiates UploadMultipartPartRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens (apos-apos) in the ID. </param>
            <param name="vaultName">The name of the vault.</param>
            <param name="uploadId">The upload ID of the multipart upload.</param>
            <param name="checksum">The SHA256 tree hash of the data being uploaded. </param>
            <param name="range">Identifies the range of bytes in the assembled archive that will be uploaded in this part. Amazon Glacier uses this information to assemble the archive in the proper sequence. The format of this header follows RFC 2616. An example header is Content-Range:bytes 0-4194303/*.</param>
            <param name="body">The data to upload.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadMultipartPartRequest.StreamTransferProgress">
            <summary>
            Attach a callback that will be called as data is being sent to the AWS Service.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadMultipartPartRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadMultipartPartRequest.Body">
            <summary>
            Gets and sets the property Body. 
            <para>
            The data to upload.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadMultipartPartRequest.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            The SHA256 tree hash of the data being uploaded. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadMultipartPartRequest.Range">
            <summary>
            Gets and sets the property Range. 
            <para>
            Identifies the range of bytes in the assembled archive that will be uploaded in this
            part. Amazon Glacier uses this information to assemble the archive in the proper sequence.
            The format of this header follows RFC 2616. An example header is Content-Range:bytes
            0-4194303/*.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadMultipartPartRequest.UploadId">
            <summary>
            Gets and sets the property UploadId. 
            <para>
            The upload ID of the multipart upload.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadMultipartPartRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Transfer.ArchiveTransferManager">
            <summary>
            Provides a high level API for managing transfers to and from Amazon Glacier. This removes 
            complexities such as breaking files into parts and computing check sums.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.Finalize">
            <summary>
            The destructor for the client class.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs an ArchiveTransferManager object for the specified Amazon Glacier region endpoint using the credentials
             loaded from the application's default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">Amazon Glacier region endpoint</param>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.#ctor(Amazon.Glacier.IAmazonGlacier)">
            <summary>
            Constructs an ArchiveTransferManager object using an existing Amazon Glacier client.
            </summary>
            <param name="glacier">An AmazonGlacier client that used to make service calls.</param>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs an ArchiveTransferManager object using the specified AWS credentials and Amazon Glacier region endpoint.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">Amazon Glacier region endpoint</param>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs an ArchiveTransferManager object with the specified AWS Access Key ID, AWS Secret Key, and Amazon Glacier region endpoint.
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">Amazon Glacier region endpoint</param>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.CreateVault(System.String)">
            <summary>
            Creates a vault.
            </summary>
            <param name="vaultName">The name of the vault to create.</param>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.DeleteVault(System.String)">
            <summary>
            Deletes the specified vault. Before deletion, the vault must be empty of all archives.
            </summary>
            <param name="vaultName">The name of the vault to delete.</param>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.DeleteArchive(System.String,System.String)">
            <summary>
            Deletes an archive specified by vault name and archive ID.
            </summary>
            <param name="vaultName">The name of the vault containing the archive.</param>
            <param name="archiveId">The archive ID of the archive to delete.</param>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.Upload(System.String,System.String,System.String)">
            <summary>
            Uploads the specified file to Amazon Glacier for archival storage in the
            specified vault in the specified user's account. For small archives, this
            method uploads the archive directly to Glacier. For larger archives,
            this method uses Glacier's multipart upload API to split the upload
            into multiple parts for better error recovery if any errors are
            encountered while streaming the data to Amazon Glacier.
            </summary>
            <param name="vaultName">The name of the vault to upload the file to.</param>
            <param name="archiveDescription">A description for the archive.</param>
            <param name="filepath">The file path to the file to upload.</param>
            <returns>The results of the upload including the archive ID.</returns>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.Upload(System.String,System.String,System.String,Amazon.Glacier.Transfer.UploadOptions)">
            <summary>
            <para>
            Uploads the specified file to Amazon Glacier for archival storage in the
            specified vault in the specified user's account. For small archives, this
            method uploads the archive directly to Glacier. For larger archives,
            this method uses Glacier's multipart upload API to split the upload
            into multiple parts for better error recovery if any errors are
            encountered while streaming the data to Amazon Glacier.
            </para>
            </summary>
            <param name="vaultName">The name of the vault to download the archive from.</param>
            <param name="archiveDescription">A description for the archive.</param>
            <param name="filepath">The file path to the file to upload.</param>
            <param name="options">Additional options that can be used for the upload.</param>
            <returns>The results of the upload including the archive ID.</returns>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.Download(System.String,System.String,System.String)">
             <summary>
             <para>
             Downloads an Amazon Glacier archive from the specified vault for the
             current user's account. Saves the archive to the specified file. 
             </para>
            
             <para>
             This method creates an Amazon SNS topic, and an Amazon SQS queue that is subscribed 
             to that topic.  It then initiates the archive retrieval job and polls the queue
             for the archive to be available.  This polling takes about 4 hours. Once the archive
             is available, download will begin.
             </para>
             </summary>
             <param name="filePath">The file path to save the archive to.</param>
             <param name="vaultName">The name of the vault to download the archive from.</param>
             <param name="archiveId">The unique ID of the archive to download.</param>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.Download(System.String,System.String,System.String,Amazon.Glacier.Transfer.DownloadOptions)">
             <summary>
             <para>
             Downloads an archive from Amazon Glacier from the specified vault for the
             current user's account. Saves the archive to the specified file. 
             </para>
            
             <para>
             This method creates an Amazon SNS topic, and an Amazon SQS queue that is subscribed 
             to that topic.  It then initiates the archive retrieval job and polls the queue
             for the archive to be available.  This polling takes about 4 hours. Once the archive
             is available, download will begin.
             </para>
            
             <para>
             Additional options can be set using the UploadDirectoryOptions object. For example, you
             can set the FilesTransferProgress property to a delegate to track progress.  
             </para>
             </summary>
             <param name="filePath">The file path to save the archive at.</param>
             <param name="vaultName">The name of the vault to download the archive from.</param>
             <param name="archiveId">The unique ID of the archive to download.</param>
             <param name="options">Additional options that can be used for the download.</param>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.DownloadJob(System.String,System.String,System.String)">
            <summary>
            <para>
            Downloads the results from a completed archive retrieval.  Saves the job output
            to the specified file.
            </para>
            <para>
            If there is an error during download the download will be retried from the last point read.
            Once the download is complete the checksum will be compared.
            </para>
            </summary>
            <param name="vaultName">The name of the vault to download the job output from.</param>
            <param name="jobId">The unique job ID for an archive retrieval job.</param>
            <param name="filePath">The file path to save the job output at.</param>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.DownloadJob(System.String,System.String,System.String,Amazon.Glacier.Transfer.DownloadOptions)">
            <summary>
            <para>
            Downloads the results from a completed archive retrieval.  Saves the job output
            to the specified file.
            </para>
            <para>
            If there is an error during download the download will be retried from the last point read.
            Once the download is complete the checksum will be compared.
            </para>
            </summary>
            <param name="vaultName">The name of the vault to download the job output from.</param>
            <param name="jobId">The unique job ID for an archive retrieval job.</param>
            <param name="filePath">The file path to save the job output at.</param>
            <param name="options">Additional options that can be used for the download.</param>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.InitiateArchiveRetrievalJob(System.String,System.String)">
            <summary>
            This method initiates an archive retieval job for the specified archive and returns back the job id.
            Once the job is complete
            </summary>
            <param name="vaultName">The name of the vault that contains the archive to initiate the job for.</param>
            <param name="archiveId">The archive id that the download job will retrieve.</param>
            <returns>The job id for the initiated job.</returns>
        </member>
        <member name="M:Amazon.Glacier.Transfer.ArchiveTransferManager.InitiateArchiveRetrievalJob(System.String,System.String,Amazon.Glacier.Transfer.InitiateArchiveRetrievalOptions)">
            <summary>
            This method initiates an archive retieval job for the specified archive and returns back the job id.
            Once the job is complete
            </summary>
            <param name="vaultName">The name of the vault that contains the archive to initiate the job for.</param>
            <param name="archiveId">The archive id that the download job will retrieve.</param>
            <param name="options">Additional options that can be used for initiating archive retrieval.</param>
            <returns>The job id for the initiated job.</returns>
        </member>
        <member name="P:Amazon.Glacier.Transfer.ArchiveTransferManager.GlacierClient">
            <summary>
            The Glacier client used by the ArchiveTransferManager.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Transfer.CommonOptions">
            <summary>
            Common options used for requests to Amazon Glacier.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Transfer.CommonOptions.AccountId">
            <summary>
            The ID for the account which owns the Glacier vault. 
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Transfer.DownloadOptions">
            <summary>
            Common options used for download methods.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Transfer.DownloadOptions.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Transfer.DownloadOptions.PollingInterval">
            <summary>
            The polling interval in minutes for reading messages from the SQS queue.  
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Transfer.DownloadOptions.StreamTransferProgress">
            <summary>
            The delegate callback to track the progress of the download.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Transfer.InitiateArchiveRetrievalOptions">
            <summary>
            Options for initiating an archive retrieval.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Transfer.InitiateArchiveRetrievalOptions.SNSTopic">
            <summary>
            The Amazon SNS topic ARN to which Amazon Glacier sends a notification when the job is completed and the output is ready for you to download.
            The specified topic publishes the notification to its subscribers. The SNS topic must exist.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Transfer.UploadOptions">
            <summary>
            Options that can be specified for upload methods.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Transfer.UploadOptions.StreamTransferProgress">
            <summary>
            The delegate callback for tracking the progress of the upload.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Transfer.UploadResult">
            <summary>
            A type that represents the result of a single file upload.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Transfer.UploadResult.#ctor(System.String,System.String)">
            <summary>
            Constructs a new UploadResult object with the specified archive ID.
            </summary>
            <param name="archiveId">The ID of the uploaded archive.</param>
            <param name="checkSum">The check sum computed for the file uploaded.</param>
        </member>
        <member name="P:Amazon.Glacier.Transfer.UploadResult.ArchiveId">
            <summary>
            Returns the ID of the uploaded archive.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Transfer.UploadResult.Checksum">
            <summary>
            Returns the check sum for the uploaded archive.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Transfer.Internal.DownloadFileCommand.readNextMessage">
            <summary>
            Poll messages from the queue.  Given the download process takes many hours there is extra
            long retry logic.
            </summary>
            <returns>The next message in the queue;</returns>
        </member>
        <member name="M:Amazon.Glacier.Transfer.Internal.DownloadFileCommand.getJobIdFromMessage(Amazon.SQS.Model.Message)">
            <summary>
            Parse the sqs message to make sure it contains the right job id and that the job was successful
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.Glacier.Transfer.Internal.DownloadFileCommand.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.Glacier.Transfer.Internal.DownloadFileCommand.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Transfer.Internal.MultipartUploadCommand.CalculatePartSize(System.Int64)">
            <summary>
            Calculates the part size to use when uploading an archive of the
            specified size using Glacier's multipart upload APIs. Because of the tree
            hashing algorithm, part sizes must be aligned on 2^n MB boundaries (ex:
            1MB, 2MB, 4MB, 8MB, etc). All parts must be the same size, except for the
            last part.
            </summary>
            <param name="fileSize">The size of the file being uploaded.</param>
            <returns>The part size to use in the multipart upload.</returns>
        </member>
        <member name="T:Amazon.Glacier.AmazonGlacierException">
            <summary>
             Common exception for the Glacier service.
             </summary>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonGlacierException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonGlacierException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonGlacierException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonGlacierException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Glacier.AmazonGlacierException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonGlacierException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Glacier.ActionCode">
            <summary>
            Constants used for properties of type ActionCode.
            </summary>
        </member>
        <member name="F:Amazon.Glacier.ActionCode.ArchiveRetrieval">
            <summary>
            Constant ArchiveRetrieval for ActionCode
            </summary>
        </member>
        <member name="F:Amazon.Glacier.ActionCode.InventoryRetrieval">
            <summary>
            Constant InventoryRetrieval for ActionCode
            </summary>
        </member>
        <member name="M:Amazon.Glacier.ActionCode.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.Glacier.ActionCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Glacier.ActionCode.op_Implicit(System.String)~Amazon.Glacier.ActionCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.StatusCode">
            <summary>
            Constants used for properties of type StatusCode.
            </summary>
        </member>
        <member name="F:Amazon.Glacier.StatusCode.Failed">
            <summary>
            Constant Failed for StatusCode
            </summary>
        </member>
        <member name="F:Amazon.Glacier.StatusCode.InProgress">
            <summary>
            Constant InProgress for StatusCode
            </summary>
        </member>
        <member name="F:Amazon.Glacier.StatusCode.Succeeded">
            <summary>
            Constant Succeeded for StatusCode
            </summary>
        </member>
        <member name="M:Amazon.Glacier.StatusCode.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.Glacier.StatusCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Glacier.StatusCode.op_Implicit(System.String)~Amazon.Glacier.StatusCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.AbortMultipartUploadRequest">
            <summary>
            Container for the parameters to the AbortMultipartUpload operation.
            This operation aborts a multipart upload identified by the upload ID.
            
             
            <para>
            After the Abort Multipart Upload request succeeds, you cannot upload any more parts
            to the multipart upload or complete the multipart upload. Aborting a completed upload
            fails. However, aborting an already-aborted upload will succeed, for a short time.
            For more information about uploading a part and completing a multipart upload, see
            <a>UploadMultipartPart</a> and <a>CompleteMultipartUpload</a>.
            </para>
             
            <para>
            This operation is idempotent.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working
            with Archives in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-abort-upload.html">Abort
            Multipart Upload</a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.AbortMultipartUploadRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.AbortMultipartUploadRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates AbortMultipartUploadRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
            <param name="uploadId">The upload ID of the multipart upload to delete.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.AbortMultipartUploadRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates AbortMultipartUploadRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens (apos-apos) in the ID.</param>
            <param name="vaultName">The name of the vault.</param>
            <param name="uploadId">The upload ID of the multipart upload to delete.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.AbortMultipartUploadRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.AbortMultipartUploadRequest.UploadId">
            <summary>
            Gets and sets the property UploadId. 
            <para>
            The upload ID of the multipart upload to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.AbortMultipartUploadRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.AbortMultipartUploadResponse">
            <summary>
            Empty class reserved for future use.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.AbortVaultLockRequest">
            <summary>
            Container for the parameters to the AbortVaultLock operation.
            This operation aborts the vault locking process if the vault lock is not in the <code>Locked</code>
            state. If the vault lock is in the <code>Locked</code> state when this operation is
            requested, the operation returns an <code>AccessDeniedException</code> error. Aborting
            the vault locking process removes the vault lock policy from the specified vault.
            
            
             
            <para>
            A vault lock is put into the <code>InProgress</code> state by calling <a>InitiateVaultLock</a>.
            A vault lock is put into the <code>Locked</code> state by calling <a>CompleteVaultLock</a>.
            You can get the state of a vault lock by calling <a>GetVaultLock</a>. For more information
            about the vault locking process, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html">Amazon
            Glacier Vault Lock</a>. For more information about vault lock policies, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock-policy.html">Amazon
            Glacier Access Control with Vault Lock Policies</a>. 
            </para>
             
            <para>
            This operation is idempotent. You can successfully invoke this operation multiple
            times, if the vault lock is in the <code>InProgress</code> state or if there is no
            policy associated with the vault.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.AbortVaultLockRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID. This value must match the
            AWS account ID associated with the credentials used to sign the request. You can either
            specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen),
            in which case Amazon Glacier uses the AWS account ID associated with the credentials
            used to sign the request. If you specify your account ID, do not include any hyphens
            (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.AbortVaultLockRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.AbortVaultLockResponse">
            <summary>
            Empty class reserved for future use.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.AddTagsToVaultRequest">
            <summary>
            Container for the parameters to the AddTagsToVault operation.
            This operation adds the specified tags to a vault. Each tag is composed of a key and
            a value. Each vault can have up to 10 tags. If your request would cause the tag limit
            for the vault to be exceeded, the operation throws the <code>LimitExceededException</code>
            error. If a tag already exists on the vault under a specified key, the existing key
            value will be overwritten. For more information about tags, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html">Tagging
            Amazon Glacier Resources</a>.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.AddTagsToVaultRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.AddTagsToVaultRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to add to the vault. Each tag is composed of a key and a value. The value
            can be an empty string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.AddTagsToVaultRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.AddTagsToVaultResponse">
            <summary>
            Empty class reserved for future use.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.CompleteMultipartUploadRequest">
            <summary>
            Container for the parameters to the CompleteMultipartUpload operation.
            You call this operation to inform Amazon Glacier that all the archive parts have been
            uploaded and that Amazon Glacier can now assemble the archive from the uploaded parts.
            After assembling and saving the archive to the vault, Amazon Glacier returns the URI
            path of the newly created archive resource. Using the URI path, you can then access
            the archive. After you upload an archive, you should save the archive ID returned
            to retrieve the archive at a later point. You can also get the vault inventory to
            obtain a list of archive IDs in a vault. For more information, see <a>InitiateJob</a>.
            
             
            <para>
            In the request, you must include the computed SHA256 tree hash of the entire archive
            you have uploaded. For information about computing a SHA256 tree hash, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html">Computing
            Checksums</a>. On the server side, Amazon Glacier also constructs the SHA256 tree
            hash of the assembled archive. If the values match, Amazon Glacier saves the archive
            to the vault; otherwise, it returns an error, and the operation fails. The <a>ListParts</a>
            operation returns a list of parts uploaded for a specific multipart upload. It includes
            checksum information for each uploaded part that can be used to debug a bad checksum
            issue.
            </para>
             
            <para>
            Additionally, Amazon Glacier also checks for any missing content ranges when assembling
            the archive, if missing content ranges are found, Amazon Glacier returns an error
            and the operation fails. 
            </para>
             
            <para>
            Complete Multipart Upload is an idempotent operation. After your first successful
            complete multipart upload, if you call the operation again within a short period,
            the operation will succeed and return the same archive ID. This is useful in the event
            you experience a network issue that causes an aborted connection or receive a 500
            server error, in which case you can repeat your Complete Multipart Upload request
            and get the same archive ID without creating duplicate archives. Note, however, that
            after the multipart upload completes, you cannot call the List Parts operation and
            the multipart upload will not appear in List Multipart Uploads response, even if idempotent
            complete is possible.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html">Uploading
            Large Archives in Parts (Multipart Upload)</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-complete-upload.html">Complete
            Multipart Upload</a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.CompleteMultipartUploadRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.CompleteMultipartUploadRequest.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Instantiates CompleteMultipartUploadRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
            <param name="uploadId">The upload ID of the multipart upload.</param>
            <param name="archiveSize">The total size, in bytes, of the entire archive. This value should be the sum of all the sizes of the individual parts that you uploaded.</param>
            <param name="checksum">The SHA256 tree hash of the entire archive. It is the tree hash of SHA256 tree hash of the individual parts. If the value you specify in the request does not match the SHA256 tree hash of the final assembled archive as computed by Amazon Glacier, Amazon Glacier returns an error and the request fails.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.CompleteMultipartUploadRequest.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Instantiates CompleteMultipartUploadRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens (apos-apos) in the ID.</param>
            <param name="vaultName">The name of the vault.</param>
            <param name="uploadId">The upload ID of the multipart upload.</param>
            <param name="archiveSize">The total size, in bytes, of the entire archive. This value should be the sum of all the sizes of the individual parts that you uploaded.</param>
            <param name="checksum">The SHA256 tree hash of the entire archive. It is the tree hash of SHA256 tree hash of the individual parts. If the value you specify in the request does not match the SHA256 tree hash of the final assembled archive as computed by Amazon Glacier, Amazon Glacier returns an error and the request fails.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.CompleteMultipartUploadRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.CompleteMultipartUploadRequest.ArchiveSize">
            <summary>
            Gets and sets the property ArchiveSize. 
            <para>
            The total size, in bytes, of the entire archive. This value should be the sum of all
            the sizes of the individual parts that you uploaded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.CompleteMultipartUploadRequest.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            The SHA256 tree hash of the entire archive. It is the tree hash of SHA256 tree hash
            of the individual parts. If the value you specify in the request does not match the
            SHA256 tree hash of the final assembled archive as computed by Amazon Glacier, Amazon
            Glacier returns an error and the request fails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.CompleteMultipartUploadRequest.UploadId">
            <summary>
            Gets and sets the property UploadId. 
            <para>
            The upload ID of the multipart upload.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.CompleteMultipartUploadRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.CompleteMultipartUploadResponse">
            <summary>
            Contains the Amazon Glacier response to your request.
            
             
            <para>
            For information about the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-post.html">Upload
            Archive</a>. For conceptual information, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working
            with Archives in Amazon Glacier</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.CompleteMultipartUploadResponse.ArchiveId">
            <summary>
            Gets and sets the property ArchiveId. 
            <para>
            The ID of the archive. This value is also included as part of the location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.CompleteMultipartUploadResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            The checksum of the archive computed by Amazon Glacier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.CompleteMultipartUploadResponse.Location">
            <summary>
            Gets and sets the property Location. 
            <para>
            The relative URI path of the newly added archive resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.CompleteVaultLockRequest">
            <summary>
            Container for the parameters to the CompleteVaultLock operation.
            This operation completes the vault locking process by transitioning the vault lock
            from the <code>InProgress</code> state to the <code>Locked</code> state, which causes
            the vault lock policy to become unchangeable. A vault lock is put into the <code>InProgress</code>
            state by calling <a>InitiateVaultLock</a>. You can obtain the state of the vault lock
            by calling <a>GetVaultLock</a>. For more information about the vault locking process,
            <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html">Amazon
            Glacier Vault Lock</a>. 
            
             
            <para>
            This operation is idempotent. This request is always successful if the vault lock
            is in the <code>Locked</code> state and the provided lock ID matches the lock ID originally
            used to lock the vault.
            </para>
             
            <para>
            If an invalid lock ID is passed in the request when the vault lock is in the <code>Locked</code>
            state, the operation returns an <code>AccessDeniedException</code> error. If an invalid
            lock ID is passed in the request when the vault lock is in the <code>InProgress</code>
            state, the operation throws an <code>InvalidParameter</code> error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.CompleteVaultLockRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID. This value must match the
            AWS account ID associated with the credentials used to sign the request. You can either
            specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen),
            in which case Amazon Glacier uses the AWS account ID associated with the credentials
            used to sign the request. If you specify your account ID, do not include any hyphens
            (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.CompleteVaultLockRequest.LockId">
            <summary>
            Gets and sets the property LockId. 
            <para>
            The <code>lockId</code> value is the lock ID obtained from a <a>InitiateVaultLock</a>
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.CompleteVaultLockRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.CompleteVaultLockResponse">
            <summary>
            Empty class reserved for future use.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.CreateVaultRequest">
            <summary>
            Container for the parameters to the CreateVault operation.
            This operation creates a new vault with the specified name. The name of the vault
            must be unique within a region for an AWS account. You can create up to 1,000 vaults
            per account. If you need to create more vaults, contact Amazon Glacier.
            
             
            <para>
            You must use the following guidelines when naming a vault. 
            </para>
             
            <para>
             <ul> <li> 
            <para>
             Names can be between 1 and 255 characters long. 
            </para>
             </li> <li> 
            <para>
            Allowed characters are a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen), and '.' (period).
            </para>
             </li> </ul> 
            </para>
             
            <para>
            This operation is idempotent.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/creating-vaults.html">Creating
            a Vault in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-put.html">Create
            Vault </a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.CreateVaultRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.CreateVaultRequest.#ctor(System.String)">
            <summary>
            Instantiates CreateVaultRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.CreateVaultRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates CreateVaultRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID. This value must match the AWS account ID associated with the credentials used to sign the request. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you specify your account ID, do not include any hyphens (apos-apos) in the ID.</param>
            <param name="vaultName">The name of the vault.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.CreateVaultRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID. This value must match the
            AWS account ID associated with the credentials used to sign the request. You can either
            specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen),
            in which case Amazon Glacier uses the AWS account ID associated with the credentials
            used to sign the request. If you specify your account ID, do not include any hyphens
            (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.CreateVaultRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.CreateVaultResponse">
            <summary>
            Contains the Amazon Glacier response to your request.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.CreateVaultResponse.Location">
            <summary>
            Gets and sets the property Location. 
            <para>
            The URI of the vault that was created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.DataRetrievalPolicy">
            <summary>
            Data retrieval policy.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DataRetrievalPolicy.Rules">
            <summary>
            Gets and sets the property Rules. 
            <para>
            The policy rule. Although this is a list type, currently there must be only one rule,
            which contains a Strategy field and optionally a BytesPerHour field.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.DataRetrievalRule">
            <summary>
            Data retrieval policy rule.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DataRetrievalRule.BytesPerHour">
            <summary>
            Gets and sets the property BytesPerHour. 
            <para>
            The maximum number of bytes that can be retrieved in an hour.
            </para>
             
            <para>
            This field is required only if the value of the Strategy field is <code>BytesPerHour</code>.
            Your PUT operation will be rejected if the Strategy field is not set to <code>BytesPerHour</code>
            and you set this field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DataRetrievalRule.Strategy">
            <summary>
            Gets and sets the property Strategy. 
            <para>
            The type of data retrieval policy to set.
            </para>
             
            <para>
            Valid values: BytesPerHour|FreeTier|None
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.DeleteArchiveRequest">
            <summary>
            Container for the parameters to the DeleteArchive operation.
            This operation deletes an archive from a vault. Subsequent requests to initiate a
            retrieval of this archive will fail. Archive retrievals that are in progress for this
            archive ID may or may not succeed according to the following scenarios:
            
             <ul> <li>If the archive retrieval job is actively preparing the data for download
            when Amazon Glacier receives the delete archive request, the archival retrieval operation
            might fail. </li> <li>If the archive retrieval job has successfully prepared the archive
            for download when Amazon Glacier receives the delete archive request, you will be
            able to download the output. </li> </ul> 
            <para>
            This operation is idempotent. Attempting to delete an already-deleted archive does
            not result in an error. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/deleting-an-archive.html">Deleting
            an Archive in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-delete.html">Delete
            Archive</a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.DeleteArchiveRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.DeleteArchiveRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates DeleteArchiveRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
            <param name="archiveId">The ID of the archive to delete.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.DeleteArchiveRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates DeleteArchiveRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens (apos-apos) in the ID.</param>
            <param name="vaultName">The name of the vault.</param>
            <param name="archiveId">The ID of the archive to delete.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.DeleteArchiveRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DeleteArchiveRequest.ArchiveId">
            <summary>
            Gets and sets the property ArchiveId. 
            <para>
            The ID of the archive to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DeleteArchiveRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.DeleteArchiveResponse">
            <summary>
            Empty class reserved for future use.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.DeleteVaultAccessPolicyRequest">
            <summary>
            Container for the parameters to the DeleteVaultAccessPolicy operation.
            This operation deletes the access policy associated with the specified vault. The
            operation is eventually consistent; that is, it might take some time for Amazon Glacier
            to completely remove the access policy, and you might still see the effect of the
            policy for a short time after you send the delete request.
            
             
            <para>
            This operation is idempotent. You can invoke delete multiple times, even if there
            is no policy associated with the vault. For more information about vault access policies,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html">Amazon
            Glacier Access Control with Vault Access Policies</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DeleteVaultAccessPolicyRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DeleteVaultAccessPolicyRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.DeleteVaultAccessPolicyResponse">
            <summary>
            Empty class reserved for future use.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.DeleteVaultNotificationsRequest">
            <summary>
            Container for the parameters to the DeleteVaultNotifications operation.
            This operation deletes the notification configuration set for a vault. The operation
            is eventually consistent; that is, it might take some time for Amazon Glacier to completely
            disable the notifications and you might still receive some notifications for a short
            time after you send the delete request. 
            
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring
            Vault Notifications in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-delete.html">Delete
            Vault Notification Configuration </a> in the Amazon Glacier Developer Guide. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.DeleteVaultNotificationsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.DeleteVaultNotificationsRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteVaultNotificationsRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.DeleteVaultNotificationsRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates DeleteVaultNotificationsRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens (apos-apos) in the ID. </param>
            <param name="vaultName">The name of the vault.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.DeleteVaultNotificationsRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DeleteVaultNotificationsRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.DeleteVaultNotificationsResponse">
            <summary>
            Empty class reserved for future use.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.DeleteVaultRequest">
            <summary>
            Container for the parameters to the DeleteVault operation.
            This operation deletes a vault. Amazon Glacier will delete a vault only if there are
            no archives in the vault as of the last inventory and there have been no writes to
            the vault since the last inventory. If either of these conditions is not satisfied,
            the vault deletion fails (that is, the vault is not removed) and Amazon Glacier returns
            an error. You can use <a>DescribeVault</a> to return the number of archives in a vault,
            and you can use <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html">Initiate
            a Job (POST jobs)</a> to initiate a new inventory retrieval for a vault. The inventory
            contains the archive IDs you use to delete archives using <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-delete.html">Delete
            Archive (DELETE archive)</a>.
            
             
            <para>
            This operation is idempotent.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/deleting-vaults.html">Deleting
            a Vault in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-delete.html">Delete
            Vault </a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.DeleteVaultRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.DeleteVaultRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteVaultRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.DeleteVaultRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates DeleteVaultRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens (apos-apos) in the ID.</param>
            <param name="vaultName">The name of the vault.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.DeleteVaultRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DeleteVaultRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.DeleteVaultResponse">
            <summary>
            Empty class reserved for future use.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.DescribeJobRequest">
            <summary>
            Container for the parameters to the DescribeJob operation.
            This operation returns information about a job you previously initiated, including
            the job initiation date, the user who initiated the job, the job status code/message
            and the Amazon SNS topic to notify after Amazon Glacier completes the job. For more
            information about initiating a job, see <a>InitiateJob</a>. 
            
             <note>
            <para>
            This operation enables you to check the status of your job. However, it is strongly
            recommended that you set up an Amazon SNS topic and specify it in your initiate job
            request so that Amazon Glacier can notify the topic after it completes the job. 
            </para>
            </note> 
            <para>
            A job ID will not expire for at least 24 hours after Amazon Glacier completes the
            job. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
             For information about the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-describe-job-get.html">Working
            with Archives in Amazon Glacier</a> in the <i>Amazon Glacier Developer Guide</i>.
            
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.DescribeJobRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.DescribeJobRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates DescribeJobRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens (apos-apos) in the ID. </param>
            <param name="vaultName">The name of the vault.</param>
            <param name="jobId">The ID of the job to describe.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.DescribeJobRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates DescribeJobRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
            <param name="jobId">The ID of the job to describe.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The ID of the job to describe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.DescribeJobResponse">
            <summary>
            Describes an Amazon Glacier job.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobResponse.Action">
            <summary>
            Gets and sets the property Action. 
            <para>
            The job type. It is either ArchiveRetrieval or InventoryRetrieval.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobResponse.ArchiveId">
            <summary>
            Gets and sets the property ArchiveId. 
            <para>
            For an ArchiveRetrieval job, this is the archive ID requested for download. Otherwise,
            this field is null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobResponse.ArchiveSHA256TreeHash">
            <summary>
            Gets and sets the property ArchiveSHA256TreeHash. 
            <para>
            The SHA256 tree hash of the entire archive for an archive retrieval. For inventory
            retrieval jobs, this field is null. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobResponse.ArchiveSizeInBytes">
            <summary>
            Gets and sets the property ArchiveSizeInBytes. 
            <para>
            For an ArchiveRetrieval job, this is the size in bytes of the archive being requested
            for download. For the InventoryRetrieval job, the value is null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobResponse.Completed">
            <summary>
            Gets and sets the property Completed. 
            <para>
            The job status. When a job is completed, you get the job's output.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobResponse.CompletionDate">
            <summary>
            Gets and sets the property CompletionDate. 
            <para>
            The UTC time that the archive retrieval request completed. While the job is in progress,
            the value will be null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobResponse.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The UTC date when the job was created. A string representation of ISO 8601 date format,
            for example, "2012-03-20T17:03:43.221Z".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobResponse.InventoryRetrievalParameters">
            <summary>
            Gets and sets the property InventoryRetrievalParameters. 
            <para>
            Parameters used for range inventory retrieval.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobResponse.InventorySizeInBytes">
            <summary>
            Gets and sets the property InventorySizeInBytes. 
            <para>
            For an InventoryRetrieval job, this is the size in bytes of the inventory requested
            for download. For the ArchiveRetrieval job, the value is null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobResponse.JobDescription">
            <summary>
            Gets and sets the property JobDescription. 
            <para>
            The job description you provided when you initiated the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            An opaque string that identifies an Amazon Glacier job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobResponse.RetrievalByteRange">
            <summary>
            Gets and sets the property RetrievalByteRange. 
            <para>
            The retrieved byte range for archive retrieval jobs in the form "<i>StartByteValue</i>-<i>EndByteValue</i>"
            If no range was specified in the archive retrieval, then the whole archive is retrieved
            and <i>StartByteValue</i> equals 0 and <i>EndByteValue</i> equals the size of the
            archive minus 1. For inventory retrieval jobs this field is null. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobResponse.SHA256TreeHash">
            <summary>
            Gets and sets the property SHA256TreeHash. 
            <para>
            For an ArchiveRetrieval job, it is the checksum of the archive. Otherwise, the value
            is null.
            </para>
             
            <para>
             The SHA256 tree hash value for the requested range of an archive. If the Initiate
            a Job request for an archive specified a tree-hash aligned range, then this field
            returns a value. 
            </para>
             
            <para>
             For the specific case when the whole archive is retrieved, this value is the same
            as the ArchiveSHA256TreeHash value. 
            </para>
             
            <para>
             This field is null in the following situations: <ul> <li>
            <para>
            Archive retrieval jobs that specify a range that is not tree-hash aligned.
            </para>
            </li> </ul> <ul> <li>
            <para>
            Archival jobs that specify a range that is equal to the whole archive and the job
            status is InProgress.
            </para>
            </li> </ul> <ul> <li>
            <para>
            Inventory jobs.
            </para>
            </li> </ul> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobResponse.SNSTopic">
            <summary>
            Gets and sets the property SNSTopic. 
            <para>
            An Amazon Simple Notification Service (Amazon SNS) topic that receives notification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobResponse.StatusCode">
            <summary>
            Gets and sets the property StatusCode. 
            <para>
            The status code can be InProgress, Succeeded, or Failed, and indicates the status
            of the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            A friendly message that describes the job status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeJobResponse.VaultARN">
            <summary>
            Gets and sets the property VaultARN. 
            <para>
            The Amazon Resource Name (ARN) of the vault from which the archive retrieval was requested.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.DescribeVaultOutput">
            <summary>
            Contains the Amazon Glacier response to your request.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeVaultOutput.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The UTC date when the vault was created. A string representation of ISO 8601 date
            format, for example, "2012-03-20T17:03:43.221Z".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeVaultOutput.LastInventoryDate">
            <summary>
            Gets and sets the property LastInventoryDate. 
            <para>
            The UTC date when Amazon Glacier completed the last vault inventory. A string representation
            of ISO 8601 date format, for example, "2012-03-20T17:03:43.221Z".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeVaultOutput.NumberOfArchives">
            <summary>
            Gets and sets the property NumberOfArchives. 
            <para>
            The number of archives in the vault as of the last inventory date. This field will
            return <code>null</code> if an inventory has not yet run on the vault, for example,
            if you just created the vault.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeVaultOutput.SizeInBytes">
            <summary>
            Gets and sets the property SizeInBytes. 
            <para>
            Total size, in bytes, of the archives in the vault as of the last inventory date.
            This field will return null if an inventory has not yet run on the vault, for example,
            if you just created the vault.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeVaultOutput.VaultARN">
            <summary>
            Gets and sets the property VaultARN. 
            <para>
            The Amazon Resource Name (ARN) of the vault.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeVaultOutput.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.DescribeVaultRequest">
            <summary>
            Container for the parameters to the DescribeVault operation.
            This operation returns information about a vault, including the vault's Amazon Resource
            Name (ARN), the date the vault was created, the number of archives it contains, and
            the total size of all the archives in the vault. The number of archives and their
            total size are as of the last inventory generation. This means that if you add or
            remove an archive from a vault, and then immediately use Describe Vault, the change
            in contents will not be immediately reflected. If you want to retrieve the latest
            inventory of the vault, use <a>InitiateJob</a>. Amazon Glacier generates vault inventories
            approximately daily. For more information, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-inventory.html">Downloading
            a Vault Inventory in Amazon Glacier</a>. 
            
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/retrieving-vault-info.html">Retrieving
            Vault Metadata in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-get.html">Describe
            Vault </a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.DescribeVaultRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.DescribeVaultRequest.#ctor(System.String)">
            <summary>
            Instantiates DescribeVaultRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.DescribeVaultRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates DescribeVaultRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens (apos-apos) in the ID. </param>
            <param name="vaultName">The name of the vault.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeVaultRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeVaultRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.DescribeVaultResponse">
            <summary>
            Contains the Amazon Glacier response to your request.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeVaultResponse.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The UTC date when the vault was created. A string representation of ISO 8601 date
            format, for example, "2012-03-20T17:03:43.221Z".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeVaultResponse.LastInventoryDate">
            <summary>
            Gets and sets the property LastInventoryDate. 
            <para>
            The UTC date when Amazon Glacier completed the last vault inventory. A string representation
            of ISO 8601 date format, for example, "2012-03-20T17:03:43.221Z".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeVaultResponse.NumberOfArchives">
            <summary>
            Gets and sets the property NumberOfArchives. 
            <para>
            The number of archives in the vault as of the last inventory date. This field will
            return <code>null</code> if an inventory has not yet run on the vault, for example,
            if you just created the vault.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeVaultResponse.SizeInBytes">
            <summary>
            Gets and sets the property SizeInBytes. 
            <para>
            Total size, in bytes, of the archives in the vault as of the last inventory date.
            This field will return null if an inventory has not yet run on the vault, for example,
            if you just created the vault.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeVaultResponse.VaultARN">
            <summary>
            Gets and sets the property VaultARN. 
            <para>
            The Amazon Resource Name (ARN) of the vault.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.DescribeVaultResponse.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.GetDataRetrievalPolicyRequest">
            <summary>
            Container for the parameters to the GetDataRetrievalPolicy operation.
            This operation returns the current data retrieval policy for the account and region
            specified in the GET request. For more information about data retrieval policies,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/data-retrieval-policy.html">Amazon
            Glacier Data Retrieval Policies</a>.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetDataRetrievalPolicyRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID. This value must match the
            AWS account ID associated with the credentials used to sign the request. You can either
            specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen),
            in which case Amazon Glacier uses the AWS account ID associated with the credentials
            used to sign the request. If you specify your account ID, do not include any hyphens
            (apos-apos) in the ID. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.GetDataRetrievalPolicyResponse">
            <summary>
            Contains the Amazon Glacier response to the <code>GetDataRetrievalPolicy</code> request.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetDataRetrievalPolicyResponse.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            Contains the returned data retrieval policy in JSON format.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.GetJobOutputRequest">
            <summary>
            Container for the parameters to the GetJobOutput operation.
            This operation downloads the output of the job you initiated using <a>InitiateJob</a>.
            Depending on the job type you specified when you initiated the job, the output will
            be either the content of an archive or a vault inventory.
            
             
            <para>
            A job ID will not expire for at least 24 hours after Amazon Glacier completes the
            job. That is, you can download the job output within the 24 hours period after Amazon
            Glacier completes the job.
            </para>
             
            <para>
            If the job output is large, then you can use the <code>Range</code> request header
            to retrieve a portion of the output. This allows you to download the entire output
            in smaller chunks of bytes. For example, suppose you have 1 GB of job output you want
            to download and you decide to download 128 MB chunks of data at a time, which is a
            total of eight Get Job Output requests. You use the following process to download
            the job output:
            </para>
             <ol> <li> 
            <para>
            Download a 128 MB chunk of output by specifying the appropriate byte range using the
            <code>Range</code> header.
            </para>
             </li> <li> 
            <para>
            Along with the data, the response includes a SHA256 tree hash of the payload. You
            compute the checksum of the payload on the client and compare it with the checksum
            you received in the response to ensure you received all the expected data.
            </para>
             </li> <li> 
            <para>
            Repeat steps 1 and 2 for all the eight 128 MB chunks of output data, each time specifying
            the appropriate byte range.
            </para>
             </li> <li> 
            <para>
            After downloading all the parts of the job output, you have a list of eight checksum
            values. Compute the tree hash of these values to find the checksum of the entire output.
            Using the <a>DescribeJob</a> API, obtain job information of the job that provided
            you the output. The response includes the checksum of the entire archive stored in
            Amazon Glacier. You compare this value with the checksum you computed to ensure you
            have downloaded the entire archive content with no errors.
            </para>
             </li> </ol> 
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-inventory.html">Downloading
            a Vault Inventory</a>, <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/downloading-an-archive.html">Downloading
            an Archive</a>, and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-job-output-get.html">Get
            Job Output </a> 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.GetJobOutputRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.GetJobOutputRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates GetJobOutputRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
            <param name="jobId">The job ID whose data is downloaded.</param>
            <param name="range">The range of bytes to retrieve from the output. For example, if you want to download the first 1,048,576 bytes, specify "Range: bytes=0-1048575". By default, this operation downloads the entire output. </param>
        </member>
        <member name="M:Amazon.Glacier.Model.GetJobOutputRequest.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Instantiates GetJobOutputRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens (apos-apos) in the ID.</param>
            <param name="vaultName">The name of the vault.</param>
            <param name="jobId">The job ID whose data is downloaded.</param>
            <param name="range">The range of bytes to retrieve from the output. For example, if you want to download the first 1,048,576 bytes, specify "Range: bytes=0-1048575". By default, this operation downloads the entire output. </param>
        </member>
        <member name="P:Amazon.Glacier.Model.GetJobOutputRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetJobOutputRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The job ID whose data is downloaded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetJobOutputRequest.Range">
            <summary>
            Gets and sets the property Range. 
            <para>
            The range of bytes to retrieve from the output. For example, if you want to download
            the first 1,048,576 bytes, specify "Range: bytes=0-1048575". By default, this operation
            downloads the entire output. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetJobOutputRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.GetJobOutputResponse">
            <summary>
            Contains the Amazon Glacier response to your request.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetJobOutputResponse.AcceptRanges">
            <summary>
            Gets and sets the property AcceptRanges. 
            <para>
            Indicates the range units accepted. For more information, go to <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html">RFC2616</a>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetJobOutputResponse.ArchiveDescription">
            <summary>
            Gets and sets the property ArchiveDescription. 
            <para>
            The description of an archive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetJobOutputResponse.Body">
            <summary>
            Gets and sets the property Body. 
            <para>
            The job data, either archive data or inventory data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetJobOutputResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
             The checksum of the data in the response. This header is returned only when retrieving
            the output for an archive retrieval job. Furthermore, this header appears only under
            the following conditions: <ul> <li>You get the entire range of the archive.</li> <li>You
            request a range to return of the archive that starts and ends on a multiple of 1 MB.
            For example, if you have an 3.1 MB archive and you specify a range to return that
            starts at 1 MB and ends at 2 MB, then the x-amz-sha256-tree-hash is returned as a
            response header.</li> <li>You request a range of the archive to return that starts
            on a multiple of 1 MB and goes to the end of the archive. For example, if you have
            a 3.1 MB archive and you specify a range that starts at 2 MB and ends at 3.1 MB (the
            end of the archive), then the x-amz-sha256-tree-hash is returned as a response header.</li>
            </ul> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetJobOutputResponse.ContentRange">
            <summary>
            Gets and sets the property ContentRange. 
            <para>
            The range of bytes returned by Amazon Glacier. If only partial output is downloaded,
            the response provides the range of bytes Amazon Glacier returned. For example, bytes
            0-1048575/8388608 returns the first 1 MB from 8 MB.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetJobOutputResponse.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            The Content-Type depends on whether the job output is an archive or a vault inventory.
            For archive data, the Content-Type is application/octet-stream. For vault inventory,
            if you requested CSV format when you initiated the job, the Content-Type is text/csv.
            Otherwise, by default, vault inventory is returned as JSON, and the Content-Type is
            application/json. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetJobOutputResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The HTTP response code for a job output request. The value depends on whether a range
            was specified in the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.GetVaultAccessPolicyRequest">
            <summary>
            Container for the parameters to the GetVaultAccessPolicy operation.
            This operation retrieves the <code>access-policy</code> subresource set on the vault;
            for more information on setting this subresource, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-SetVaultAccessPolicy.html">Set
            Vault Access Policy (PUT access-policy)</a>. If there is no access policy set on the
            vault, the operation returns a <code>404 Not found</code> error. For more information
            about vault access policies, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html">Amazon
            Glacier Access Control with Vault Access Policies</a>.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetVaultAccessPolicyRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetVaultAccessPolicyRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.GetVaultAccessPolicyResponse">
            <summary>
            Output for GetVaultAccessPolicy.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetVaultAccessPolicyResponse.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            Contains the returned vault access policy as a JSON string.
            </para>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Amazon.Glacier.Model.GetVaultLockRequest" -->
        <member name="P:Amazon.Glacier.Model.GetVaultLockRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetVaultLockRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.GetVaultLockResponse">
            <summary>
            Contains the Amazon Glacier response to your request.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetVaultLockResponse.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The UTC date and time at which the vault lock was put into the <code>InProgress</code>
            state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetVaultLockResponse.ExpirationDate">
            <summary>
            Gets and sets the property ExpirationDate. 
            <para>
            The UTC date and time at which the lock ID expires. This value can be <code>null</code>
            if the vault lock is in a <code>Locked</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetVaultLockResponse.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            The vault lock policy as a JSON string, which uses "\" as an escape character.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetVaultLockResponse.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the vault lock. <code>InProgress</code> or <code>Locked</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.GetVaultNotificationsRequest">
            <summary>
            Container for the parameters to the GetVaultNotifications operation.
            This operation retrieves the <code class="code">notification-configuration</code>
            subresource of the specified vault.
            
             
            <para>
            For information about setting a notification configuration on a vault, see <a>SetVaultNotifications</a>.
            If a notification configuration for a vault is not set, the operation returns a <code
            class="code">404 Not Found</code> error. For more information about vault notifications,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring
            Vault Notifications in Amazon Glacier</a>. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring
            Vault Notifications in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-get.html">Get
            Vault Notification Configuration </a> in the <i>Amazon Glacier Developer Guide</i>.
            
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.GetVaultNotificationsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.GetVaultNotificationsRequest.#ctor(System.String)">
            <summary>
            Instantiates GetVaultNotificationsRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.GetVaultNotificationsRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates GetVaultNotificationsRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens (apos-apos) in the ID.</param>
            <param name="vaultName">The name of the vault.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.GetVaultNotificationsRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetVaultNotificationsRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.GetVaultNotificationsResponse">
            <summary>
            Contains the Amazon Glacier response to your request.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GetVaultNotificationsResponse.VaultNotificationConfig">
            <summary>
            Gets and sets the property VaultNotificationConfig. 
            <para>
            Returns the notification configuration set on the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.GlacierJobDescription">
            <summary>
            Describes an Amazon Glacier job.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GlacierJobDescription.Action">
            <summary>
            Gets and sets the property Action. 
            <para>
            The job type. It is either ArchiveRetrieval or InventoryRetrieval.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GlacierJobDescription.ArchiveId">
            <summary>
            Gets and sets the property ArchiveId. 
            <para>
            For an ArchiveRetrieval job, this is the archive ID requested for download. Otherwise,
            this field is null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GlacierJobDescription.ArchiveSHA256TreeHash">
            <summary>
            Gets and sets the property ArchiveSHA256TreeHash. 
            <para>
            The SHA256 tree hash of the entire archive for an archive retrieval. For inventory
            retrieval jobs, this field is null. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GlacierJobDescription.ArchiveSizeInBytes">
            <summary>
            Gets and sets the property ArchiveSizeInBytes. 
            <para>
            For an ArchiveRetrieval job, this is the size in bytes of the archive being requested
            for download. For the InventoryRetrieval job, the value is null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GlacierJobDescription.Completed">
            <summary>
            Gets and sets the property Completed. 
            <para>
            The job status. When a job is completed, you get the job's output.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GlacierJobDescription.CompletionDate">
            <summary>
            Gets and sets the property CompletionDate. 
            <para>
            The UTC time that the archive retrieval request completed. While the job is in progress,
            the value will be null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GlacierJobDescription.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The UTC date when the job was created. A string representation of ISO 8601 date format,
            for example, "2012-03-20T17:03:43.221Z".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GlacierJobDescription.InventoryRetrievalParameters">
            <summary>
            Gets and sets the property InventoryRetrievalParameters. 
            <para>
            Parameters used for range inventory retrieval.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GlacierJobDescription.InventorySizeInBytes">
            <summary>
            Gets and sets the property InventorySizeInBytes. 
            <para>
            For an InventoryRetrieval job, this is the size in bytes of the inventory requested
            for download. For the ArchiveRetrieval job, the value is null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GlacierJobDescription.JobDescription">
            <summary>
            Gets and sets the property JobDescription. 
            <para>
            The job description you provided when you initiated the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GlacierJobDescription.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            An opaque string that identifies an Amazon Glacier job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GlacierJobDescription.RetrievalByteRange">
            <summary>
            Gets and sets the property RetrievalByteRange. 
            <para>
            The retrieved byte range for archive retrieval jobs in the form "<i>StartByteValue</i>-<i>EndByteValue</i>"
            If no range was specified in the archive retrieval, then the whole archive is retrieved
            and <i>StartByteValue</i> equals 0 and <i>EndByteValue</i> equals the size of the
            archive minus 1. For inventory retrieval jobs this field is null. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GlacierJobDescription.SHA256TreeHash">
            <summary>
            Gets and sets the property SHA256TreeHash. 
            <para>
            For an ArchiveRetrieval job, it is the checksum of the archive. Otherwise, the value
            is null.
            </para>
             
            <para>
             The SHA256 tree hash value for the requested range of an archive. If the Initiate
            a Job request for an archive specified a tree-hash aligned range, then this field
            returns a value. 
            </para>
             
            <para>
             For the specific case when the whole archive is retrieved, this value is the same
            as the ArchiveSHA256TreeHash value. 
            </para>
             
            <para>
             This field is null in the following situations: <ul> <li>
            <para>
            Archive retrieval jobs that specify a range that is not tree-hash aligned.
            </para>
            </li> </ul> <ul> <li>
            <para>
            Archival jobs that specify a range that is equal to the whole archive and the job
            status is InProgress.
            </para>
            </li> </ul> <ul> <li>
            <para>
            Inventory jobs.
            </para>
            </li> </ul> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GlacierJobDescription.SNSTopic">
            <summary>
            Gets and sets the property SNSTopic. 
            <para>
            An Amazon Simple Notification Service (Amazon SNS) topic that receives notification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GlacierJobDescription.StatusCode">
            <summary>
            Gets and sets the property StatusCode. 
            <para>
            The status code can be InProgress, Succeeded, or Failed, and indicates the status
            of the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GlacierJobDescription.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            A friendly message that describes the job status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.GlacierJobDescription.VaultARN">
            <summary>
            Gets and sets the property VaultARN. 
            <para>
            The Amazon Resource Name (ARN) of the vault from which the archive retrieval was requested.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.InitiateJobRequest">
            <summary>
            Container for the parameters to the InitiateJob operation.
            This operation initiates a job of the specified type. In this release, you can initiate
            a job to retrieve either an archive or a vault inventory (a list of archives in a
            vault). 
            
             
            <para>
            Retrieving data from Amazon Glacier is a two-step process: 
            </para>
             <ol> <li> 
            <para>
            Initiate a retrieval job.
            </para>
             <note>
            <para>
            A data retrieval policy can cause your initiate retrieval job request to fail with
            a PolicyEnforcedException exception. For more information about data retrieval policies,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/data-retrieval-policy.html">Amazon
            Glacier Data Retrieval Policies</a>. For more information about the PolicyEnforcedException
            exception, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-error-responses.html">Error
            Responses</a>.
            </para>
             </note> </li> <li>
            <para>
            After the job completes, download the bytes.
            </para>
            </li> </ol> 
            <para>
            The retrieval request is executed asynchronously. When you initiate a retrieval job,
            Amazon Glacier creates a job and returns a job ID in the response. When Amazon Glacier
            completes the job, you can get the job output (archive or inventory data). For information
            about getting job output, see <a>GetJobOutput</a> operation. 
            </para>
             
            <para>
            The job must complete before you can get its output. To determine when a job is complete,
            you have the following options:
            </para>
             <ul> <li> 
            <para>
            <b>Use Amazon SNS Notification</b> You can specify an Amazon Simple Notification Service
            (Amazon SNS) topic to which Amazon Glacier can post a notification after the job is
            completed. You can specify an SNS topic per job request. The notification is sent
            only after Amazon Glacier completes the job. In addition to specifying an SNS topic
            per job request, you can configure vault notifications for a vault so that job notifications
            are always sent. For more information, see <a>SetVaultNotifications</a>.
            </para>
             </li> <li> 
            <para>
            <b>Get job details</b> You can make a <a>DescribeJob</a> request to obtain job status
            information while a job is in progress. However, it is more efficient to use an Amazon
            SNS notification to determine when a job is complete.
            </para>
             </li> </ul> <note>
            <para>
            The information you get via notification is same that you get by calling <a>DescribeJob</a>.
            </para>
            </note> 
            <para>
            If for a specific event, you add both the notification configuration on the vault
            and also specify an SNS topic in your initiate job request, Amazon Glacier sends both
            notifications. For more information, see <a>SetVaultNotifications</a>.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            <b>About the Vault Inventory</b>
            </para>
             
            <para>
            Amazon Glacier prepares an inventory for each vault periodically, every 24 hours.
            When you initiate a job for a vault inventory, Amazon Glacier returns the last inventory
            for the vault. The inventory data you get might be up to a day or two days old. Also,
            the initiate inventory job might take some time to complete before you can download
            the vault inventory. So you do not want to retrieve a vault inventory for each vault
            operation. However, in some scenarios, you might find the vault inventory useful.
            For example, when you upload an archive, you can provide an archive description but
            not an archive name. Amazon Glacier provides you a unique archive ID, an opaque string
            of characters. So, you might maintain your own database that maps archive names to
            their corresponding Amazon Glacier assigned archive IDs. You might find the vault
            inventory useful in the event you need to reconcile information in your database with
            the actual vault inventory. 
            </para>
             
            <para>
            <b>Range Inventory Retrieval</b>
            </para>
             
            <para>
            You can limit the number of inventory items retrieved by filtering on the archive
            creation date or by setting a limit.
            </para>
             
            <para>
            <i>Filtering by Archive Creation Date</i>
            </para>
             
            <para>
            You can retrieve inventory items for archives created between <code>StartDate</code>
            and <code>EndDate</code> by specifying values for these parameters in the <b>InitiateJob</b>
            request. Archives created on or after the <code>StartDate</code> and before the <code>EndDate</code>
            will be returned. If you only provide the <code>StartDate</code> without the <code>EndDate</code>,
            you will retrieve the inventory for all archives created on or after the <code>StartDate</code>.
            If you only provide the <code>EndDate</code> without the <code>StartDate</code>, you
            will get back the inventory for all archives created before the <code>EndDate</code>.
            </para>
             
            <para>
            <i>Limiting Inventory Items per Retrieval</i>
            </para>
             
            <para>
            You can limit the number of inventory items returned by setting the <code>Limit</code>
            parameter in the <b>InitiateJob</b> request. The inventory job output will contain
            inventory items up to the specified <code>Limit</code>. If there are more inventory
            items available, the result is paginated. After a job is complete you can use the
            <a>DescribeJob</a> operation to get a marker that you use in a subsequent <b>InitiateJob</b>
            request. The marker will indicate the starting point to retrieve the next set of inventory
            items. You can page through your entire inventory by repeatedly making <b>InitiateJob</b>
            requests with the marker from the previous <b>DescribeJob</b> output, until you get
            a marker from <b>DescribeJob</b> that returns null, indicating that there are no more
            inventory items available.
            </para>
             
            <para>
            You can use the <code>Limit</code> parameter together with the date range parameters.
            </para>
             
            <para>
            <b>About Ranged Archive Retrieval</b>
            </para>
             
            <para>
             You can initiate an archive retrieval for the whole archive or a range of the archive.
            In the case of ranged archive retrieval, you specify a byte range to return or the
            whole archive. The range specified must be megabyte (MB) aligned, that is the range
            start value must be divisible by 1 MB and range end value plus 1 must be divisible
            by 1 MB or equal the end of the archive. If the ranged archive retrieval is not megabyte
            aligned, this operation returns a 400 response. Furthermore, to ensure you get checksum
            values for data you download using Get Job Output API, the range must be tree hash
            aligned. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html">Initiate
            a Job</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-inventory.html">Downloading
            a Vault Inventory</a> 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.InitiateJobRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.InitiateJobRequest.#ctor(System.String,Amazon.Glacier.Model.JobParameters)">
            <summary>
            Instantiates InitiateJobRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
            <param name="jobParameters">Provides options for specifying job information.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.InitiateJobRequest.#ctor(System.String,System.String,Amazon.Glacier.Model.JobParameters)">
            <summary>
            Instantiates InitiateJobRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens (apos-apos) in the ID.</param>
            <param name="vaultName">The name of the vault.</param>
            <param name="jobParameters">Provides options for specifying job information.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.InitiateJobRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InitiateJobRequest.JobParameters">
            <summary>
            Gets and sets the property JobParameters. 
            <para>
            Provides options for specifying job information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InitiateJobRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.InitiateJobResponse">
            <summary>
            Contains the Amazon Glacier response to your request.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InitiateJobResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The ID of the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InitiateJobResponse.Location">
            <summary>
            Gets and sets the property Location. 
            <para>
            The relative URI path of the job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.InitiateMultipartUploadRequest">
            <summary>
            Container for the parameters to the InitiateMultipartUpload operation.
            This operation initiates a multipart upload. Amazon Glacier creates a multipart upload
            resource and returns its ID in the response. The multipart upload ID is used in subsequent
            requests to upload parts of an archive (see <a>UploadMultipartPart</a>).
            
             
            <para>
            When you initiate a multipart upload, you specify the part size in number of bytes.
            The part size must be a megabyte (1024 KB) multiplied by a power of 2-for example,
            1048576 (1 MB), 2097152 (2 MB), 4194304 (4 MB), 8388608 (8 MB), and so on. The minimum
            allowable part size is 1 MB, and the maximum is 4 GB.
            </para>
             
            <para>
            Every part you upload to this resource (see <a>UploadMultipartPart</a>), except the
            last one, must have the same size. The last one can be the same size or smaller. For
            example, suppose you want to upload a 16.2 MB file. If you initiate the multipart
            upload with a part size of 4 MB, you will upload four parts of 4 MB each and one part
            of 0.2 MB. 
            </para>
             <note>
            <para>
            You don't need to know the size of the archive when you start a multipart upload because
            Amazon Glacier does not require you to specify the overall archive size.
            </para>
            </note> 
            <para>
            After you complete the multipart upload, Amazon Glacier removes the multipart upload
            resource referenced by the ID. Amazon Glacier also removes the multipart upload resource
            if you cancel the multipart upload or it may be removed if there is no activity for
            a period of 24 hours.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html">Uploading
            Large Archives in Parts (Multipart Upload)</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-initiate-upload.html">Initiate
            Multipart Upload</a> in the <i>Amazon Glacier Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.InitiateMultipartUploadRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.InitiateMultipartUploadRequest.#ctor(System.String,System.String,System.Int64)">
            <summary>
            Instantiates InitiateMultipartUploadRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
            <param name="archiveDescription">The archive description that you are uploading in parts. The part size must be a megabyte (1024 KB) multiplied by a power of 2, for example 1048576 (1 MB), 2097152 (2 MB), 4194304 (4 MB), 8388608 (8 MB), and so on. The minimum allowable part size is 1 MB, and the maximum is 4 GB (4096 MB).</param>
            <param name="partSize">The size of each part except the last, in bytes. The last part can be smaller than this part size.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.InitiateMultipartUploadRequest.#ctor(System.String,System.String,System.String,System.Int64)">
            <summary>
            Instantiates InitiateMultipartUploadRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens (apos-apos) in the ID. </param>
            <param name="vaultName">The name of the vault.</param>
            <param name="archiveDescription">The archive description that you are uploading in parts. The part size must be a megabyte (1024 KB) multiplied by a power of 2, for example 1048576 (1 MB), 2097152 (2 MB), 4194304 (4 MB), 8388608 (8 MB), and so on. The minimum allowable part size is 1 MB, and the maximum is 4 GB (4096 MB).</param>
            <param name="partSize">The size of each part except the last, in bytes. The last part can be smaller than this part size.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.InitiateMultipartUploadRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InitiateMultipartUploadRequest.ArchiveDescription">
            <summary>
            Gets and sets the property ArchiveDescription. 
            <para>
            The archive description that you are uploading in parts.
            </para>
             
            <para>
            The part size must be a megabyte (1024 KB) multiplied by a power of 2, for example
            1048576 (1 MB), 2097152 (2 MB), 4194304 (4 MB), 8388608 (8 MB), and so on. The minimum
            allowable part size is 1 MB, and the maximum is 4 GB (4096 MB).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InitiateMultipartUploadRequest.PartSize">
            <summary>
            Gets and sets the property PartSize. 
            <para>
            The size of each part except the last, in bytes. The last part can be smaller than
            this part size.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InitiateMultipartUploadRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.InitiateMultipartUploadResponse">
            <summary>
            The Amazon Glacier response to your request.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InitiateMultipartUploadResponse.Location">
            <summary>
            Gets and sets the property Location. 
            <para>
            The relative URI path of the multipart upload ID Amazon Glacier created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InitiateMultipartUploadResponse.UploadId">
            <summary>
            Gets and sets the property UploadId. 
            <para>
            The ID of the multipart upload. This value is also included as part of the location.
            
            </para>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Amazon.Glacier.Model.InitiateVaultLockRequest" -->
        <member name="P:Amazon.Glacier.Model.InitiateVaultLockRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID. This value must match the
            AWS account ID associated with the credentials used to sign the request. You can either
            specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen),
            in which case Amazon Glacier uses the AWS account ID associated with the credentials
            used to sign the request. If you specify your account ID, do not include any hyphens
            (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InitiateVaultLockRequest.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            The vault lock policy as a JSON string, which uses "\" as an escape character.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InitiateVaultLockRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.InitiateVaultLockResponse">
            <summary>
            Contains the Amazon Glacier response to your request.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InitiateVaultLockResponse.LockId">
            <summary>
            Gets and sets the property LockId. 
            <para>
             The lock ID, which is used to complete the vault locking process.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.InvalidParameterValueException">
            <summary>
             Glacier exception
             </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.InvalidParameterValueException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterValueException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Glacier.Model.InvalidParameterValueException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.InvalidParameterValueException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.InvalidParameterValueException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.InvalidParameterValueException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Glacier.Model.InvalidParameterValueException.Code">
            <summary>
            Gets and sets the Code property.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InvalidParameterValueException.Type">
            <summary>
            Gets and sets the Type property.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.InventoryRetrievalJobDescription">
            <summary>
            Describes the options for a range inventory retrieval job.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InventoryRetrievalJobDescription.EndDate">
            <summary>
            Gets and sets the property EndDate. 
            <para>
            The end of the date range in UTC for vault inventory retrieval that includes archives
            created before this date. A string representation of ISO 8601 date format, for example,
            2013-03-20T17:03:43Z.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InventoryRetrievalJobDescription.Format">
            <summary>
            Gets and sets the property Format. 
            <para>
            The output format for the vault inventory list, which is set by the <b>InitiateJob</b>
            request when initiating a job to retrieve a vault inventory. Valid values are "CSV"
            and "JSON".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InventoryRetrievalJobDescription.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            Specifies the maximum number of inventory items returned per vault inventory retrieval
            request. This limit is set when initiating the job with the a <b>InitiateJob</b> request.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InventoryRetrievalJobDescription.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An opaque string that represents where to continue pagination of the vault inventory
            retrieval results. You use the marker in a new <b>InitiateJob</b> request to obtain
            additional inventory items. If there are no more inventory items, this value is <code>null</code>.
            For more information, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html#api-initiate-job-post-vault-inventory-list-filtering">
            Range Inventory Retrieval</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InventoryRetrievalJobDescription.StartDate">
            <summary>
            Gets and sets the property StartDate. 
            <para>
            The start of the date range in UTC for vault inventory retrieval that includes archives
            created on or after this date. A string representation of ISO 8601 date format, for
            example, 2013-03-20T17:03:43Z.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.InventoryRetrievalJobInput">
            <summary>
            Provides options for specifying a range inventory retrieval job.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InventoryRetrievalJobInput.EndDate">
            <summary>
            Gets and sets the property EndDate. 
            <para>
            The end of the date range in UTC for vault inventory retrieval that includes archives
            created before this date. A string representation of ISO 8601 date format, for example,
            2013-03-20T17:03:43Z.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InventoryRetrievalJobInput.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            Specifies the maximum number of inventory items returned per vault inventory retrieval
            request. Valid values are greater than or equal to 1.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InventoryRetrievalJobInput.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An opaque string that represents where to continue pagination of the vault inventory
            retrieval results. You use the marker in a new <b>InitiateJob</b> request to obtain
            additional inventory items. If there are no more inventory items, this value is <code>null</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.InventoryRetrievalJobInput.StartDate">
            <summary>
            Gets and sets the property StartDate. 
            <para>
            The start of the date range in UTC for vault inventory retrieval that includes archives
            created on or after this date. A string representation of ISO 8601 date format, for
            example, 2013-03-20T17:03:43Z.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.JobParameters">
            <summary>
            Provides options for defining a job.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.JobParameters.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.JobParameters.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Instantiates JobParameters with the parameterized properties
            </summary>
            <param name="format">When initiating a job to retrieve a vault inventory, you can optionally add this parameter to your request to specify the output format. If you are initiating an inventory job and do not specify a Format field, JSON is the default format. Valid values are "CSV" and "JSON". </param>
            <param name="type">The job type. You can initiate a job to retrieve an archive or get an inventory of a vault. Valid values are "archive-retrieval" and "inventory-retrieval".</param>
            <param name="archiveId">The ID of the archive that you want to retrieve. This field is required only if <code>Type</code> is set to archive-retrieval. An error occurs if you specify this request parameter for an inventory retrieval job request. </param>
            <param name="description">The optional description for the job. The description must be less than or equal to 1,024 bytes. The allowable characters are 7-bit ASCII without control codes-specifically, ASCII values 32-126 decimal or 0x20-0x7E hexadecimal.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.JobParameters.ArchiveId">
            <summary>
            Gets and sets the property ArchiveId. 
            <para>
            The ID of the archive that you want to retrieve. This field is required only if <code>Type</code>
            is set to archive-retrieval. An error occurs if you specify this request parameter
            for an inventory retrieval job request. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.JobParameters.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The optional description for the job. The description must be less than or equal to
            1,024 bytes. The allowable characters are 7-bit ASCII without control codes-specifically,
            ASCII values 32-126 decimal or 0x20-0x7E hexadecimal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.JobParameters.Format">
            <summary>
            Gets and sets the property Format. 
            <para>
            When initiating a job to retrieve a vault inventory, you can optionally add this parameter
            to your request to specify the output format. If you are initiating an inventory job
            and do not specify a Format field, JSON is the default format. Valid values are "CSV"
            and "JSON". 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.JobParameters.InventoryRetrievalParameters">
            <summary>
            Gets and sets the property InventoryRetrievalParameters. 
            <para>
            Input parameters used for range inventory retrieval.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.JobParameters.RetrievalByteRange">
            <summary>
            Gets and sets the property RetrievalByteRange. 
            <para>
            The byte range to retrieve for an archive retrieval. in the form "<i>StartByteValue</i>-<i>EndByteValue</i>"
            If not specified, the whole archive is retrieved. If specified, the byte range must
            be megabyte (1024*1024) aligned which means that <i>StartByteValue</i> must be divisible
            by 1 MB and <i>EndByteValue</i> plus 1 must be divisible by 1 MB or be the end of
            the archive specified as the archive byte size value minus 1. If RetrievalByteRange
            is not megabyte aligned, this operation returns a 400 response. 
            </para>
             
            <para>
            An error occurs if you specify this field for an inventory retrieval job request.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.JobParameters.SNSTopic">
            <summary>
            Gets and sets the property SNSTopic. 
            <para>
            The Amazon SNS topic ARN to which Amazon Glacier sends a notification when the job
            is completed and the output is ready for you to download. The specified topic publishes
            the notification to its subscribers. The SNS topic must exist.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.JobParameters.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The job type. You can initiate a job to retrieve an archive or get an inventory of
            a vault. Valid values are "archive-retrieval" and "inventory-retrieval".
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.LimitExceededException">
            <summary>
             Glacier exception
             </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Glacier.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Glacier.Model.LimitExceededException.Code">
            <summary>
            Gets and sets the Code property.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.LimitExceededException.Type">
            <summary>
            Gets and sets the Type property.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.ListJobsRequest">
            <summary>
            Container for the parameters to the ListJobs operation.
            This operation lists jobs for a vault, including jobs that are in-progress and jobs
            that have recently finished. 
            
             <note>
            <para>
            Amazon Glacier retains recently completed jobs for a period before deleting them;
            however, it eventually removes completed jobs. The output of completed jobs can be
            retrieved. Retaining completed jobs for a period of time after they have completed
            enables you to get a job output in the event you miss the job completion notification
            or your first attempt to download it fails. For example, suppose you start an archive
            retrieval job to download an archive. After the job completes, you start to download
            the archive but encounter a network error. In this scenario, you can retry and download
            the archive while the job exists. 
            </para>
            </note> 
            <para>
            To retrieve an archive or retrieve a vault inventory from Amazon Glacier, you first
            initiate a job, and after the job completes, you download the data. For an archive
            retrieval, the output is the archive data, and for an inventory retrieval, it is the
            inventory list. The List Job operation returns a list of these jobs sorted by job
            initiation time.
            </para>
             
            <para>
            This List Jobs operation supports pagination. By default, this operation returns up
            to 1,000 jobs in the response. You should always check the response for a <code>marker</code>
            at which to continue the list; if there are no more items the <code>marker</code>
            is <code>null</code>. To return a list of jobs that begins at a specific job, set
            the <code>marker</code> request parameter to the value you obtained from a previous
            List Jobs request. You can also limit the number of jobs returned in the response
            by specifying the <code>limit</code> parameter in the request.
            </para>
             
            <para>
            Additionally, you can filter the jobs list returned by specifying an optional <code>statuscode</code>
            (InProgress, Succeeded, or Failed) and <code>completed</code> (true, false) parameter.
            The <code>statuscode</code> allows you to specify that only jobs that match a specified
            status are returned. The <code>completed</code> parameter allows you to specify that
            only jobs in a specific completion state are returned.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-jobs-get.html">List
            Jobs </a> 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.ListJobsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.ListJobsRequest.#ctor(System.String)">
            <summary>
            Instantiates ListJobsRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.ListJobsRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates ListJobsRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens (apos-apos) in the ID. </param>
            <param name="vaultName">The name of the vault.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.ListJobsRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListJobsRequest.Completed">
            <summary>
            Gets and sets the property Completed. 
            <para>
            Specifies the state of the jobs to return. You can specify <code>true</code> or <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListJobsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            Specifies that the response be limited to the specified number of items or fewer.
            If not specified, the List Jobs operation returns up to 1,000 jobs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListJobsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An opaque string used for pagination. This value specifies the job at which the listing
            of jobs should begin. Get the marker value from a previous List Jobs response. You
            need only include the marker if you are continuing the pagination of results started
            in a previous List Jobs request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListJobsRequest.Statuscode">
            <summary>
            Gets and sets the property Statuscode. 
            <para>
            Specifies the type of job status to return. You can specify the following values:
            "InProgress", "Succeeded", or "Failed".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListJobsRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.ListJobsResponse">
            <summary>
            Contains the Amazon Glacier response to your request.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListJobsResponse.JobList">
            <summary>
            Gets and sets the property JobList. 
            <para>
            A list of job objects. Each job object contains metadata describing the job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListJobsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An opaque string that represents where to continue pagination of the results. You
            use this value in a new List Jobs request to obtain more jobs in the list. If there
            are no more jobs, this value is <code>null</code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.ListMultipartUploadsRequest">
            <summary>
            Container for the parameters to the ListMultipartUploads operation.
            This operation lists in-progress multipart uploads for the specified vault. An in-progress
            multipart upload is a multipart upload that has been initiated by an <a>InitiateMultipartUpload</a>
            request, but has not yet been completed or aborted. The list returned in the List
            Multipart Upload response has no guaranteed order. 
            
             
            <para>
            The List Multipart Uploads operation supports pagination. By default, this operation
            returns up to 1,000 multipart uploads in the response. You should always check the
            response for a <code>marker</code> at which to continue the list; if there are no
            more items the <code>marker</code> is <code>null</code>. To return a list of multipart
            uploads that begins at a specific upload, set the <code>marker</code> request parameter
            to the value you obtained from a previous List Multipart Upload request. You can also
            limit the number of uploads returned in the response by specifying the <code>limit</code>
            parameter in the request.
            </para>
             
            <para>
            Note the difference between this operation and listing parts (<a>ListParts</a>). The
            List Multipart Uploads operation lists all multipart uploads for a vault and does
            not require a multipart upload ID. The List Parts operation requires a multipart upload
            ID since parts are associated with a single upload.
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working
            with Archives in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-list-uploads.html">List
            Multipart Uploads </a> in the <i>Amazon Glacier Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.ListMultipartUploadsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.ListMultipartUploadsRequest.#ctor(System.String)">
            <summary>
            Instantiates ListMultipartUploadsRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.ListMultipartUploadsRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates ListMultipartUploadsRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens (apos-apos) in the ID. </param>
            <param name="vaultName">The name of the vault.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.ListMultipartUploadsRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListMultipartUploadsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            Specifies the maximum number of uploads returned in the response body. If this value
            is not specified, the List Uploads operation returns up to 1,000 uploads.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListMultipartUploadsRequest.UploadIdMarker">
            <summary>
            Gets and sets the property UploadIdMarker. 
            <para>
            An opaque string used for pagination. This value specifies the upload at which the
            listing of uploads should begin. Get the marker value from a previous List Uploads
            response. You need only include the marker if you are continuing the pagination of
            results started in a previous List Uploads request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListMultipartUploadsRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.ListMultipartUploadsResponse">
            <summary>
            Contains the Amazon Glacier response to your request.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListMultipartUploadsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An opaque string that represents where to continue pagination of the results. You
            use the marker in a new List Multipart Uploads request to obtain more uploads in the
            list. If there are no more uploads, this value is <code>null</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListMultipartUploadsResponse.UploadsList">
            <summary>
            Gets and sets the property UploadsList. 
            <para>
            A list of in-progress multipart uploads.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.ListPartsRequest">
            <summary>
            Container for the parameters to the ListParts operation.
            This operation lists the parts of an archive that have been uploaded in a specific
            multipart upload. You can make this request at any time during an in-progress multipart
            upload before you complete the upload (see <a>CompleteMultipartUpload</a>. List Parts
            returns an error for completed uploads. The list returned in the List Parts response
            is sorted by part range. 
            
             
            <para>
            The List Parts operation supports pagination. By default, this operation returns up
            to 1,000 uploaded parts in the response. You should always check the response for
            a <code class="code">marker</code> at which to continue the list; if there are no
            more items the <code class="code">marker</code> is <code class="code">null</code>.
            To return a list of parts that begins at a specific part, set the <code>marker</code>
            request parameter to the value you obtained from a previous List Parts request. You
            can also limit the number of parts returned in the response by specifying the <code>limit</code>
            parameter in the request. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working
            with Archives in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-list-parts.html">List
            Parts</a> in the <i>Amazon Glacier Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.ListPartsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.ListPartsRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates ListPartsRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
            <param name="uploadId">The upload ID of the multipart upload.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.ListPartsRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates ListPartsRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens (apos-apos) in the ID. </param>
            <param name="vaultName">The name of the vault.</param>
            <param name="uploadId">The upload ID of the multipart upload.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.ListPartsRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListPartsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            Specifies the maximum number of parts returned in the response body. If this value
            is not specified, the List Parts operation returns up to 1,000 uploads.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListPartsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An opaque string used for pagination. This value specifies the part at which the listing
            of parts should begin. Get the marker value from the response of a previous List Parts
            response. You need only include the marker if you are continuing the pagination of
            results started in a previous List Parts request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListPartsRequest.UploadId">
            <summary>
            Gets and sets the property UploadId. 
            <para>
            The upload ID of the multipart upload.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListPartsRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.ListPartsResponse">
            <summary>
            Contains the Amazon Glacier response to your request.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListPartsResponse.ArchiveDescription">
            <summary>
            Gets and sets the property ArchiveDescription. 
            <para>
            The description of the archive that was specified in the Initiate Multipart Upload
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListPartsResponse.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The UTC time at which the multipart upload was initiated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListPartsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An opaque string that represents where to continue pagination of the results. You
            use the marker in a new List Parts request to obtain more jobs in the list. If there
            are no more parts, this value is <code>null</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListPartsResponse.MultipartUploadId">
            <summary>
            Gets and sets the property MultipartUploadId. 
            <para>
            The ID of the upload to which the parts are associated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListPartsResponse.Parts">
            <summary>
            Gets and sets the property Parts. 
            <para>
            A list of the part sizes of the multipart upload.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListPartsResponse.PartSizeInBytes">
            <summary>
            Gets and sets the property PartSizeInBytes. 
            <para>
            The part size in bytes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListPartsResponse.VaultARN">
            <summary>
            Gets and sets the property VaultARN. 
            <para>
            The Amazon Resource Name (ARN) of the vault to which the multipart upload was initiated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.ListTagsForVaultRequest">
            <summary>
            Container for the parameters to the ListTagsForVault operation.
            This operation lists all the tags attached to a vault. The operation returns an empty
            map if there are no tags. For more information about tags, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html">Tagging
            Amazon Glacier Resources</a>.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListTagsForVaultRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListTagsForVaultRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.ListTagsForVaultResponse">
            <summary>
            Contains the Amazon Glacier response to your request.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListTagsForVaultResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags attached to the vault. Each tag is composed of a key and a value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.ListVaultsRequest">
            <summary>
            Container for the parameters to the ListVaults operation.
            This operation lists all vaults owned by the calling user's account. The list returned
            in the response is ASCII-sorted by vault name. 
            
             
            <para>
            By default, this operation returns up to 1,000 items. If there are more vaults to
            list, the response <code class="code">marker</code> field contains the vault Amazon
            Resource Name (ARN) at which to continue the list with a new List Vaults request;
            otherwise, the <code class="code">marker</code> field is <code class="code">null</code>.
            To return a list of vaults that begins at a specific vault, set the <code class="code">marker</code>
            request parameter to the vault ARN you obtained from a previous List Vaults request.
            You can also limit the number of vaults returned in the response by specifying the
            <code class="code">limit</code> parameter in the request. 
            </para>
             
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/retrieving-vault-info.html">Retrieving
            Vault Metadata in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vaults-get.html">List
            Vaults </a> in the <i>Amazon Glacier Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.ListVaultsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.ListVaultsRequest.#ctor(System.String)">
            <summary>
            Instantiates ListVaultsRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID. This value must match the AWS account ID associated with the credentials used to sign the request. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you specify your account ID, do not include any hyphens (apos-apos) in the ID.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.ListVaultsRequest.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Instantiates ListVaultsRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID. This value must match the AWS account ID associated with the credentials used to sign the request. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you specify your account ID, do not include any hyphens (apos-apos) in the ID.</param>
            <param name="marker">A string used for pagination. The marker specifies the vault ARN after which the listing of vaults should begin.</param>
            <param name="limit">The maximum number of items returned in the response. If you don't specify a value, the List Vaults operation returns up to 1,000 items.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.ListVaultsRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID. This value must match the
            AWS account ID associated with the credentials used to sign the request. You can either
            specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen),
            in which case Amazon Glacier uses the AWS account ID associated with the credentials
            used to sign the request. If you specify your account ID, do not include any hyphens
            (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListVaultsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items returned in the response. If you don't specify a value,
            the List Vaults operation returns up to 1,000 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListVaultsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            A string used for pagination. The marker specifies the vault ARN after which the listing
            of vaults should begin.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.ListVaultsResponse">
            <summary>
            Contains the Amazon Glacier response to your request.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListVaultsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            The vault ARN at which to continue pagination of the results. You use the marker in
            another List Vaults request to obtain more vaults in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ListVaultsResponse.VaultList">
            <summary>
            Gets and sets the property VaultList. 
            <para>
            List of vaults.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.MissingParameterValueException">
            <summary>
             Glacier exception
             </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.MissingParameterValueException.#ctor(System.String)">
            <summary>
            Constructs a new MissingParameterValueException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Glacier.Model.MissingParameterValueException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MissingParameterValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.MissingParameterValueException.#ctor(System.Exception)">
            <summary>
            Construct instance of MissingParameterValueException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.MissingParameterValueException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MissingParameterValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.MissingParameterValueException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MissingParameterValueException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Glacier.Model.MissingParameterValueException.Code">
            <summary>
            Gets and sets the Code property.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.MissingParameterValueException.Type">
            <summary>
            Gets and sets the Type property.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.PartListElement">
            <summary>
            A list of the part sizes of the multipart upload.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.PartListElement.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.PartListElement.RangeInBytes">
            <summary>
            Gets and sets the property RangeInBytes. 
            <para>
            The byte range of a part, inclusive of the upper value of the range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.PartListElement.SHA256TreeHash">
            <summary>
            Gets and sets the property SHA256TreeHash. 
            <para>
            The SHA256 tree hash value that Amazon Glacier calculated for the part. This field
            is never <code>null</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.PolicyEnforcedException">
            <summary>
             Glacier exception
             </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.PolicyEnforcedException.#ctor(System.String)">
            <summary>
            Constructs a new PolicyEnforcedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Glacier.Model.PolicyEnforcedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PolicyEnforcedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.PolicyEnforcedException.#ctor(System.Exception)">
            <summary>
            Construct instance of PolicyEnforcedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.PolicyEnforcedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PolicyEnforcedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.PolicyEnforcedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PolicyEnforcedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Glacier.Model.PolicyEnforcedException.Code">
            <summary>
            Gets and sets the Code property.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.PolicyEnforcedException.Type">
            <summary>
            Gets and sets the Type property.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.RemoveTagsFromVaultRequest">
            <summary>
            Container for the parameters to the RemoveTagsFromVault operation.
            This operation removes one or more tags from the set of tags attached to a vault.
            For more information about tags, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html">Tagging
            Amazon Glacier Resources</a>. This operation is idempotent. The operation will be
            successful, even if there are no tags attached to the vault.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.RemoveTagsFromVaultRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.RemoveTagsFromVaultRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            A list of tag keys. Each corresponding tag is removed from the vault.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.RemoveTagsFromVaultRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.RemoveTagsFromVaultResponse">
            <summary>
            Empty class reserved for future use.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.RequestTimeoutException">
            <summary>
             Glacier exception
             </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.RequestTimeoutException.#ctor(System.String)">
            <summary>
            Constructs a new RequestTimeoutException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Glacier.Model.RequestTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RequestTimeoutException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.RequestTimeoutException.#ctor(System.Exception)">
            <summary>
            Construct instance of RequestTimeoutException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.RequestTimeoutException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RequestTimeoutException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.RequestTimeoutException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RequestTimeoutException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Glacier.Model.RequestTimeoutException.Code">
            <summary>
            Gets and sets the Code property.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.RequestTimeoutException.Type">
            <summary>
            Gets and sets the Type property.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.ResourceNotFoundException">
            <summary>
             Glacier exception
             </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Glacier.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Glacier.Model.ResourceNotFoundException.Code">
            <summary>
            Gets and sets the Code property.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ResourceNotFoundException.Type">
            <summary>
            Gets and sets the Type property.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.ServiceUnavailableException">
            <summary>
             Glacier exception
             </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.ServiceUnavailableException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceUnavailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Glacier.Model.ServiceUnavailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.ServiceUnavailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.ServiceUnavailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Glacier.Model.ServiceUnavailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="P:Amazon.Glacier.Model.ServiceUnavailableException.Code">
            <summary>
            Gets and sets the Code property.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.ServiceUnavailableException.Type">
            <summary>
            Gets and sets the Type property.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.SetDataRetrievalPolicyRequest">
            <summary>
            Container for the parameters to the SetDataRetrievalPolicy operation.
            This operation sets and then enacts a data retrieval policy in the region specified
            in the PUT request. You can set one policy per region for an AWS account. The policy
            is enacted within a few minutes of a successful PUT operation. 
            
             
            <para>
            The set policy operation does not affect retrieval jobs that were in progress before
            the policy was enacted. For more information about data retrieval policies, see <a
            href="http://docs.aws.amazon.com/amazonglacier/latest/dev/data-retrieval-policy.html">Amazon
            Glacier Data Retrieval Policies</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.SetDataRetrievalPolicyRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID. This value must match the
            AWS account ID associated with the credentials used to sign the request. You can either
            specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen),
            in which case Amazon Glacier uses the AWS account ID associated with the credentials
            used to sign the request. If you specify your account ID, do not include any hyphens
            (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.SetDataRetrievalPolicyRequest.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            The data retrieval policy in JSON format.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.SetDataRetrievalPolicyResponse">
            <summary>
            Empty class reserved for future use.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.SetVaultAccessPolicyRequest">
            <summary>
            Container for the parameters to the SetVaultAccessPolicy operation.
            This operation configures an access policy for a vault and will overwrite an existing
            policy. To configure a vault access policy, send a PUT request to the <code>access-policy</code>
            subresource of the vault. An access policy is specific to a vault and is also called
            a vault subresource. You can set one access policy per vault and the policy can be
            up to 20 KB in size. For more information about vault access policies, see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html">Amazon
            Glacier Access Control with Vault Access Policies</a>.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.SetVaultAccessPolicyRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.SetVaultAccessPolicyRequest.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            The vault access policy as a JSON string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.SetVaultAccessPolicyRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.SetVaultAccessPolicyResponse">
            <summary>
            Empty class reserved for future use.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.SetVaultNotificationsRequest">
            <summary>
            Container for the parameters to the SetVaultNotifications operation.
            This operation configures notifications that will be sent when specific events happen
            to a vault. By default, you don't get any notifications. 
            
             
            <para>
            To configure vault notifications, send a PUT request to the <code class="code">notification-configuration</code>
            subresource of the vault. The request should include a JSON document that provides
            an Amazon SNS topic and specific events for which you want Amazon Glacier to send
            notifications to the topic.
            </para>
             
            <para>
            Amazon SNS topics must grant permission to the vault to be allowed to publish notifications
            to the topic. You can configure a vault to publish a notification for the following
            vault events:
            </para>
             <ul> <li> <b>ArchiveRetrievalCompleted</b> This event occurs when a job that was
            initiated for an archive retrieval is completed (<a>InitiateJob</a>). The status of
            the completed job can be "Succeeded" or "Failed". The notification sent to the SNS
            topic is the same output as returned from <a>DescribeJob</a>. </li> <li> <b>InventoryRetrievalCompleted</b>
            This event occurs when a job that was initiated for an inventory retrieval is completed
            (<a>InitiateJob</a>). The status of the completed job can be "Succeeded" or "Failed".
            The notification sent to the SNS topic is the same output as returned from <a>DescribeJob</a>.
            </li> </ul> 
            <para>
            An AWS account has full permission to perform all operations (actions). However, AWS
            Identity and Access Management (IAM) users don't have any permissions by default.
            You must grant them explicit permission to perform specific actions. For more information,
            see <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html">Access
            Control Using AWS Identity and Access Management (IAM)</a>.
            </para>
             
            <para>
            For conceptual information and underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html">Configuring
            Vault Notifications in Amazon Glacier</a> and <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-put.html">Set
            Vault Notification Configuration </a> in the <i>Amazon Glacier Developer Guide</i>.
            
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.SetVaultNotificationsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.SetVaultNotificationsRequest.#ctor(System.String,Amazon.Glacier.Model.VaultNotificationConfig)">
            <summary>
            Instantiates SetVaultNotificationsRequest with the parameterized properties
            </summary>
            <param name="vaultName">The name of the vault.</param>
            <param name="vaultNotificationConfig">Provides options for specifying notification configuration.</param>
        </member>
        <member name="M:Amazon.Glacier.Model.SetVaultNotificationsRequest.#ctor(System.String,System.String,Amazon.Glacier.Model.VaultNotificationConfig)">
            <summary>
            Instantiates SetVaultNotificationsRequest with the parameterized properties
            </summary>
            <param name="accountId">The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens (apos-apos) in the ID.</param>
            <param name="vaultName">The name of the vault.</param>
            <param name="vaultNotificationConfig">Provides options for specifying notification configuration.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.SetVaultNotificationsRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The <code>AccountId</code> value is the AWS account ID of the account that owns the
            vault. You can either specify an AWS account ID or optionally a single apos<code>-</code>apos
            (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the
            credentials used to sign the request. If you use an account ID, do not include any
            hyphens (apos-apos) in the ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.SetVaultNotificationsRequest.VaultName">
            <summary>
            Gets and sets the property VaultName. 
            <para>
            The name of the vault.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.SetVaultNotificationsRequest.VaultNotificationConfig">
            <summary>
            Gets and sets the property VaultNotificationConfig. 
            <para>
            Provides options for specifying notification configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.SetVaultNotificationsResponse">
            <summary>
            Empty class reserved for future use.
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.UploadArchiveResponse">
            <summary>
            Contains the Amazon Glacier response to your request.
            
             
            <para>
            For information about the underlying REST API, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-post.html">Upload
            Archive</a>. For conceptual information, go to <a href="http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working
            with Archives in Amazon Glacier</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadArchiveResponse.ArchiveId">
            <summary>
            Gets and sets the property ArchiveId. 
            <para>
            The ID of the archive. This value is also included as part of the location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadArchiveResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            The checksum of the archive computed by Amazon Glacier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadArchiveResponse.Location">
            <summary>
            Gets and sets the property Location. 
            <para>
            The relative URI path of the newly added archive resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.UploadListElement">
            <summary>
            A list of in-progress multipart uploads for a vault.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.UploadListElement.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadListElement.ArchiveDescription">
            <summary>
            Gets and sets the property ArchiveDescription. 
            <para>
            The description of the archive that was specified in the Initiate Multipart Upload
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadListElement.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The UTC time at which the multipart upload was initiated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadListElement.MultipartUploadId">
            <summary>
            Gets and sets the property MultipartUploadId. 
            <para>
            The ID of a multipart upload.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadListElement.PartSizeInBytes">
            <summary>
            Gets and sets the property PartSizeInBytes. 
            <para>
            The part size, in bytes, specified in the Initiate Multipart Upload request. This
            is the size of all the parts in the upload except the last part, which may be smaller
            than this size.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadListElement.VaultARN">
            <summary>
            Gets and sets the property VaultARN. 
            <para>
            The Amazon Resource Name (ARN) of the vault that contains the archive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.UploadMultipartPartResponse">
            <summary>
            Contains the Amazon Glacier response to your request.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.UploadMultipartPartResponse.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            The SHA256 tree hash that Amazon Glacier computed for the uploaded part.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.VaultAccessPolicy">
            <summary>
            Contains the vault access policy.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.VaultAccessPolicy.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            The vault access policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.VaultLockPolicy">
            <summary>
            Contains the vault lock policy.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.VaultLockPolicy.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            The vault lock policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.VaultNotificationConfig">
            <summary>
            Represents a vault's notification configuration.
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.VaultNotificationConfig.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.Glacier.Model.VaultNotificationConfig.#ctor(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates VaultNotificationConfig with the parameterized properties
            </summary>
            <param name="snsTopic">The Amazon Simple Notification Service (Amazon SNS) topic Amazon Resource Name (ARN).</param>
            <param name="events">A list of one or more events for which Amazon Glacier will send a notification to the specified Amazon SNS topic.</param>
        </member>
        <member name="P:Amazon.Glacier.Model.VaultNotificationConfig.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
            A list of one or more events for which Amazon Glacier will send a notification to
            the specified Amazon SNS topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.VaultNotificationConfig.SNSTopic">
            <summary>
            Gets and sets the property SNSTopic. 
            <para>
            The Amazon Simple Notification Service (Amazon SNS) topic Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.AbortMultipartUploadRequestMarshaller">
            <summary>
            AbortMultipartUpload Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.AbortMultipartUploadRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.AbortMultipartUploadRequestMarshaller.Marshall(Amazon.Glacier.Model.AbortMultipartUploadRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.AbortMultipartUploadResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AbortMultipartUpload operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.AbortMultipartUploadResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.AbortMultipartUploadResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.AbortMultipartUploadResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.AbortVaultLockRequestMarshaller">
            <summary>
            AbortVaultLock Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.AbortVaultLockRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.AbortVaultLockRequestMarshaller.Marshall(Amazon.Glacier.Model.AbortVaultLockRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.AbortVaultLockResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AbortVaultLock operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.AbortVaultLockResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.AbortVaultLockResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.AbortVaultLockResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.AddTagsToVaultRequestMarshaller">
            <summary>
            AddTagsToVault Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.AddTagsToVaultRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.AddTagsToVaultRequestMarshaller.Marshall(Amazon.Glacier.Model.AddTagsToVaultRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.AddTagsToVaultResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddTagsToVault operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.AddTagsToVaultResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.AddTagsToVaultResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.AddTagsToVaultResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteMultipartUploadRequestMarshaller">
            <summary>
            CompleteMultipartUpload Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteMultipartUploadRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteMultipartUploadRequestMarshaller.Marshall(Amazon.Glacier.Model.CompleteMultipartUploadRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteMultipartUploadResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CompleteMultipartUpload operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteMultipartUploadResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteMultipartUploadResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteMultipartUploadResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteVaultLockRequestMarshaller">
            <summary>
            CompleteVaultLock Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteVaultLockRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteVaultLockRequestMarshaller.Marshall(Amazon.Glacier.Model.CompleteVaultLockRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteVaultLockResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CompleteVaultLock operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteVaultLockResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteVaultLockResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteVaultLockResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.CreateVaultRequestMarshaller">
            <summary>
            CreateVault Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.CreateVaultRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.CreateVaultRequestMarshaller.Marshall(Amazon.Glacier.Model.CreateVaultRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.CreateVaultResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateVault operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.CreateVaultResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.CreateVaultResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.CreateVaultResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalPolicyMarshaller">
            <summary>
            DataRetrievalPolicy Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalPolicyMarshaller.Marshall(Amazon.Glacier.Model.DataRetrievalPolicy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalPolicyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalPolicyUnmarshaller">
            <summary>
            Response Unmarshaller for DataRetrievalPolicy Object
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalPolicyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Glacier#Model#DataRetrievalPolicy@Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalPolicyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalPolicyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalRuleMarshaller">
            <summary>
            DataRetrievalRule Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalRuleMarshaller.Marshall(Amazon.Glacier.Model.DataRetrievalRule,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalRuleMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalRuleUnmarshaller">
            <summary>
            Response Unmarshaller for DataRetrievalRule Object
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalRuleUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Glacier#Model#DataRetrievalRule@Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalRuleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalRuleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteArchiveRequestMarshaller">
            <summary>
            DeleteArchive Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteArchiveRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteArchiveRequestMarshaller.Marshall(Amazon.Glacier.Model.DeleteArchiveRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteArchiveResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteArchive operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteArchiveResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteArchiveResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteArchiveResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultAccessPolicyRequestMarshaller">
            <summary>
            DeleteVaultAccessPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultAccessPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultAccessPolicyRequestMarshaller.Marshall(Amazon.Glacier.Model.DeleteVaultAccessPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultAccessPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVaultAccessPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultAccessPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultAccessPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultAccessPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultNotificationsRequestMarshaller">
            <summary>
            DeleteVaultNotifications Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultNotificationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultNotificationsRequestMarshaller.Marshall(Amazon.Glacier.Model.DeleteVaultNotificationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultNotificationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVaultNotifications operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultNotificationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultNotificationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultNotificationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultRequestMarshaller">
            <summary>
            DeleteVault Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultRequestMarshaller.Marshall(Amazon.Glacier.Model.DeleteVaultRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVault operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeJobRequestMarshaller">
            <summary>
            DescribeJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeJobRequestMarshaller.Marshall(Amazon.Glacier.Model.DescribeJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeJob operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeVaultOutputUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVaultOutput Object
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeVaultOutputUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Glacier#Model#DescribeVaultOutput@Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeVaultOutputUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeVaultOutputUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeVaultRequestMarshaller">
            <summary>
            DescribeVault Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeVaultRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeVaultRequestMarshaller.Marshall(Amazon.Glacier.Model.DescribeVaultRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeVaultResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVault operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeVaultResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeVaultResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeVaultResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.GetDataRetrievalPolicyRequestMarshaller">
            <summary>
            GetDataRetrievalPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetDataRetrievalPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetDataRetrievalPolicyRequestMarshaller.Marshall(Amazon.Glacier.Model.GetDataRetrievalPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.GetDataRetrievalPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDataRetrievalPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetDataRetrievalPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetDataRetrievalPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.GetDataRetrievalPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.GetJobOutputRequestMarshaller">
            <summary>
            GetJobOutput Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetJobOutputRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetJobOutputRequestMarshaller.Marshall(Amazon.Glacier.Model.GetJobOutputRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.GetJobOutputResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetJobOutput operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetJobOutputResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetJobOutputResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.GetJobOutputResponseUnmarshaller.HasStreamingProperty">
            <summary>
            Overriden to return true indicating the response contains streaming data.
            </summary>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.GetJobOutputResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultAccessPolicyRequestMarshaller">
            <summary>
            GetVaultAccessPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultAccessPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultAccessPolicyRequestMarshaller.Marshall(Amazon.Glacier.Model.GetVaultAccessPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultAccessPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetVaultAccessPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultAccessPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultAccessPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultAccessPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultLockRequestMarshaller">
            <summary>
            GetVaultLock Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultLockRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultLockRequestMarshaller.Marshall(Amazon.Glacier.Model.GetVaultLockRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultLockResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetVaultLock operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultLockResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultLockResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultLockResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultNotificationsRequestMarshaller">
            <summary>
            GetVaultNotifications Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultNotificationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultNotificationsRequestMarshaller.Marshall(Amazon.Glacier.Model.GetVaultNotificationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultNotificationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetVaultNotifications operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultNotificationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultNotificationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultNotificationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.GlacierJobDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for GlacierJobDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GlacierJobDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Glacier#Model#GlacierJobDescription@Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.GlacierJobDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.GlacierJobDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateJobRequestMarshaller">
            <summary>
            InitiateJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateJobRequestMarshaller.Marshall(Amazon.Glacier.Model.InitiateJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for InitiateJob operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateMultipartUploadRequestMarshaller">
            <summary>
            InitiateMultipartUpload Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateMultipartUploadRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateMultipartUploadRequestMarshaller.Marshall(Amazon.Glacier.Model.InitiateMultipartUploadRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateMultipartUploadResponseUnmarshaller">
            <summary>
            Response Unmarshaller for InitiateMultipartUpload operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateMultipartUploadResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateMultipartUploadResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateMultipartUploadResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateVaultLockRequestMarshaller">
            <summary>
            InitiateVaultLock Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateVaultLockRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateVaultLockRequestMarshaller.Marshall(Amazon.Glacier.Model.InitiateVaultLockRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateVaultLockResponseUnmarshaller">
            <summary>
            Response Unmarshaller for InitiateVaultLock operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateVaultLockResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateVaultLockResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateVaultLockResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.InventoryRetrievalJobDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for InventoryRetrievalJobDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.InventoryRetrievalJobDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Glacier#Model#InventoryRetrievalJobDescription@Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.InventoryRetrievalJobDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.InventoryRetrievalJobDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.InventoryRetrievalJobInputMarshaller">
            <summary>
            InventoryRetrievalJobInput Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.InventoryRetrievalJobInputMarshaller.Marshall(Amazon.Glacier.Model.InventoryRetrievalJobInput,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Glacier.Model.Internal.MarshallTransformations.InventoryRetrievalJobInputMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.JobParametersMarshaller">
            <summary>
            JobParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.JobParametersMarshaller.Marshall(Amazon.Glacier.Model.JobParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Glacier.Model.Internal.MarshallTransformations.JobParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.ListJobsRequestMarshaller">
            <summary>
            ListJobs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListJobsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListJobsRequestMarshaller.Marshall(Amazon.Glacier.Model.ListJobsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListJobs operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.ListMultipartUploadsRequestMarshaller">
            <summary>
            ListMultipartUploads Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListMultipartUploadsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListMultipartUploadsRequestMarshaller.Marshall(Amazon.Glacier.Model.ListMultipartUploadsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.ListMultipartUploadsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListMultipartUploads operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListMultipartUploadsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListMultipartUploadsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.ListMultipartUploadsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.ListPartsRequestMarshaller">
            <summary>
            ListParts Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListPartsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListPartsRequestMarshaller.Marshall(Amazon.Glacier.Model.ListPartsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.ListPartsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListParts operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListPartsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListPartsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.ListPartsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.ListTagsForVaultRequestMarshaller">
            <summary>
            ListTagsForVault Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListTagsForVaultRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListTagsForVaultRequestMarshaller.Marshall(Amazon.Glacier.Model.ListTagsForVaultRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.ListTagsForVaultResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForVault operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListTagsForVaultResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListTagsForVaultResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.ListTagsForVaultResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.ListVaultsRequestMarshaller">
            <summary>
            ListVaults Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListVaultsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListVaultsRequestMarshaller.Marshall(Amazon.Glacier.Model.ListVaultsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.ListVaultsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListVaults operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListVaultsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.ListVaultsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.ListVaultsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.PartListElementUnmarshaller">
            <summary>
            Response Unmarshaller for PartListElement Object
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.PartListElementUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Glacier#Model#PartListElement@Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.PartListElementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.PartListElementUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.RemoveTagsFromVaultRequestMarshaller">
            <summary>
            RemoveTagsFromVault Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.RemoveTagsFromVaultRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.RemoveTagsFromVaultRequestMarshaller.Marshall(Amazon.Glacier.Model.RemoveTagsFromVaultRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.RemoveTagsFromVaultResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveTagsFromVault operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.RemoveTagsFromVaultResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.RemoveTagsFromVaultResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.RemoveTagsFromVaultResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.SetDataRetrievalPolicyRequestMarshaller">
            <summary>
            SetDataRetrievalPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.SetDataRetrievalPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.SetDataRetrievalPolicyRequestMarshaller.Marshall(Amazon.Glacier.Model.SetDataRetrievalPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.SetDataRetrievalPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetDataRetrievalPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.SetDataRetrievalPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.SetDataRetrievalPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.SetDataRetrievalPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultAccessPolicyRequestMarshaller">
            <summary>
            SetVaultAccessPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultAccessPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultAccessPolicyRequestMarshaller.Marshall(Amazon.Glacier.Model.SetVaultAccessPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultAccessPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetVaultAccessPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultAccessPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultAccessPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultAccessPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultNotificationsRequestMarshaller">
            <summary>
            SetVaultNotifications Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultNotificationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultNotificationsRequestMarshaller.Marshall(Amazon.Glacier.Model.SetVaultNotificationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultNotificationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetVaultNotifications operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultNotificationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultNotificationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultNotificationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadArchiveRequestMarshaller">
            <summary>
            UploadArchive Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadArchiveRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadArchiveRequestMarshaller.Marshall(Amazon.Glacier.Model.UploadArchiveRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadArchiveResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UploadArchive operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadArchiveResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadArchiveResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadArchiveResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadListElementUnmarshaller">
            <summary>
            Response Unmarshaller for UploadListElement Object
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadListElementUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Glacier#Model#UploadListElement@Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadListElementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadListElementUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadMultipartPartRequestMarshaller">
            <summary>
            UploadMultipartPart Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadMultipartPartRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadMultipartPartRequestMarshaller.Marshall(Amazon.Glacier.Model.UploadMultipartPartRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadMultipartPartResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UploadMultipartPart operation
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadMultipartPartResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadMultipartPartResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.UploadMultipartPartResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.VaultAccessPolicyMarshaller">
            <summary>
            VaultAccessPolicy Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.VaultAccessPolicyMarshaller.Marshall(Amazon.Glacier.Model.VaultAccessPolicy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Glacier.Model.Internal.MarshallTransformations.VaultAccessPolicyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.VaultAccessPolicyUnmarshaller">
            <summary>
            Response Unmarshaller for VaultAccessPolicy Object
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.VaultAccessPolicyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Glacier#Model#VaultAccessPolicy@Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.VaultAccessPolicyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.VaultAccessPolicyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.VaultLockPolicyMarshaller">
            <summary>
            VaultLockPolicy Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.VaultLockPolicyMarshaller.Marshall(Amazon.Glacier.Model.VaultLockPolicy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Glacier.Model.Internal.MarshallTransformations.VaultLockPolicyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.VaultNotificationConfigMarshaller">
            <summary>
            VaultNotificationConfig Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.VaultNotificationConfigMarshaller.Marshall(Amazon.Glacier.Model.VaultNotificationConfig,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Glacier.Model.Internal.MarshallTransformations.VaultNotificationConfigMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Glacier.Model.Internal.MarshallTransformations.VaultNotificationConfigUnmarshaller">
            <summary>
            Response Unmarshaller for VaultNotificationConfig Object
            </summary>  
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.VaultNotificationConfigUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Glacier#Model#VaultNotificationConfig@Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Glacier.Model.Internal.MarshallTransformations.VaultNotificationConfigUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Glacier.Model.Internal.MarshallTransformations.VaultNotificationConfigUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
    </members>
</doc>
